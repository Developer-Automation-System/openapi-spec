{
  "swagger": "2.0",
  "info": {
    "description": "The public Workday API for Student academic foundation.",
    "version": "v1",
    "title": "studentAcademicFoundation",
    "x-workday-internal-source": "xo",
    "x-workday-internal-routing": "Public",
    "x-workday-internal-protected-usage-enabled": false,
    "x-workday-internal-service-container-id": "de37943cec3c10002190da0c0c4e04fe"
  },
  "host": "<tenantHostname>",
  "basePath": "/studentAcademicFoundation/v1",
  "tags": [
    {
      "name": "academicCalendars",
      "description": "Provides access to academic calendar information."
    },
    {
      "name": "academicLevels",
      "description": "Provides access to academic level information."
    },
    {
      "name": "academicPeriods",
      "description": "Provides access to academic period information."
    },
    {
      "name": "academicUnits",
      "description": "Provides access to academic unit information."
    },
    {
      "name": "educationalCredentials",
      "description": "Provides access to educational credential information."
    },
    {
      "name": "programsOfStudy",
      "description": "Provides access to program of study information."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/programsOfStudy/{ID}": {
      "get": {
        "tags": [
          "programsOfStudy"
        ],
        "summary": "Retrieves the program of study with the specified ID.",
        "description": "Retrieves information about the Program of Study with the specified ID, as of the specified effective date. If you don't specify the effectiveDate query parameter, the effective date defaults to the current date.\n\n<b>Secured by:</b> Manage: Program of Study\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/programOfStudy_733968937d5910001532e47c4f78009f"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicUnits/{ID}": {
      "get": {
        "tags": [
          "academicUnits"
        ],
        "summary": "Retrieves the Academic Unit with the specified ID.",
        "description": "Retrieves information about the Academic Unit with the specified ID, as of the specified effective date. If you don't specify the effectiveDate query parameter, the effective date defaults to the current date.\n\n<b>Secured by:</b> Reports: Academic Units, Set Up: Academic Unit Configuration, Set Up: Academic Units\n\n<b>Scope:</b> Academic Faculty, Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/academicUnitDetail_1f466e11891910002cd0401c7f810223"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicCalendars/{ID}/academicYears/{subresourceID}": {
      "get": {
        "tags": [
          "academicCalendars"
        ],
        "summary": "Retrieves the academic year associated with an academic calendar with the specified ID.",
        "description": "Retrieves the academic year associated with the specified academic calendar ID with the specified ID.\n\n<b>Secured by:</b> Set Up: Academic Calendar\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subresourceID",
            "in": "path",
            "description": "The Workday ID of the subresource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/academicYear_51a89ee734c0100018287a4073d7032e"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/educationalCredentials": {
      "get": {
        "tags": [
          "educationalCredentials"
        ],
        "summary": "Retrieves a collection of educational credentials.",
        "description": "Retrieves all educational credentials.\n\n<b>Secured by:</b> Set Up: Academic Structure\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/educationalCredentialDetail_ff8de71f635410000c15eed9a0db02f6"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicCalendars": {
      "get": {
        "tags": [
          "academicCalendars"
        ],
        "summary": "Retrieves a collection of academic calendars.",
        "description": "Retrieves all academic calendars.\n\n<b>Secured by:</b> Set Up: Academic Calendar\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/academicCalendar_9a52f8b57a811000273f2e068c2611df"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicPeriods/{ID}": {
      "get": {
        "tags": [
          "academicPeriods"
        ],
        "summary": "Retrieves the academic period with the specified ID.",
        "description": "Retrieves information about the academic periods with the specified ID.\n\n<b>Secured by:</b> Set Up: Academic Appointments and Related Data, Set Up: Academic Calendar\n\n<b>Scope:</b> Academic Faculty, Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/academicPeriod_9b0fc1f2e4f6100023b36b11ea10016e"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicCalendars/{ID}/academicYears": {
      "get": {
        "tags": [
          "academicCalendars"
        ],
        "summary": "Retrieves a collection of the academic years associated with an academic calendar.",
        "description": "Retrieves the academic years associated with the specified academic calendar ID.\n\n<b>Secured by:</b> Set Up: Academic Calendar\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/academicYear_51a89ee734c0100018287a4073d7032e"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicLevels/{ID}": {
      "get": {
        "tags": [
          "academicLevels"
        ],
        "summary": "Retrieves the academic level with the specified ID.",
        "description": "Retrieves information about the academic level with the specified ID.\n\n<b>Secured by:</b> Set Up: Academic Structure\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/academicLevel_1f466e118919100030b66d4e95a3024a"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/educationalCredentials/{ID}": {
      "get": {
        "tags": [
          "educationalCredentials"
        ],
        "summary": "Retrieves the educational credential with the specified ID.",
        "description": "Retrieves information about the educational credential with the specified ID.\n\n<b>Secured by:</b> Set Up: Academic Structure\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/educationalCredentialDetail_ff8de71f635410000c15eed9a0db02f6"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicCalendars/{ID}": {
      "get": {
        "tags": [
          "academicCalendars"
        ],
        "summary": "Retrieves the academic calendar with the specified ID.",
        "description": "Retrieves information about the academic calendar with the specified ID.\n\n<b>Secured by:</b> Set Up: Academic Calendar\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "The Workday ID of the resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "$ref": "#/definitions/academicCalendar_9a52f8b57a811000273f2e068c2611df"
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicUnits": {
      "get": {
        "tags": [
          "academicUnits"
        ],
        "summary": "Retrieves a collection of academic units.",
        "description": "Retrieves all academic units. You can filter the academic units by effective date, inactive status, institutional status, and their immediate superior.\n\n<b>Secured by:</b> Reports: Academic Units, Set Up: Academic Unit Configuration, Set Up: Academic Units\n\n<b>Scope:</b> Academic Faculty, Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "effectiveDate",
            "in": "query",
            "description": "The effective date of the Academic Unit, using the yyyy-mm-dd format. The default is the current date.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "inactive",
            "in": "query",
            "description": "If true, this method retrieves Academic Units that are inactive as of the effective date. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "institution",
            "in": "query",
            "description": "If true, this method retrieves Academic Units that are designated as institutions as of the effective date. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "superior",
            "in": "query",
            "description": "The Workday ID of the immediate superior of the Academic Units, as of the effective date. You can use a returned id from GET /academicUnits.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/academicUnitSummary_1f466e11891910002d1ef33fb757022f"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/programsOfStudy": {
      "get": {
        "tags": [
          "programsOfStudy"
        ],
        "summary": "Retrieves a collection of programs of study.",
        "description": "Retrieves all Programs of Study. You can filter the Programs of Study by effective date, academic unit, academic level, program type, CIP code, or educational credential.\n\n<b>Secured by:</b> Manage: Program of Study\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "academicLevel",
            "in": "query",
            "description": "The Workday ID of the owning academic level of the program of study, as of the effective date. You can use a return id from GET /academicLevels",
            "required": false,
            "type": "string"
          },
          {
            "name": "academicUnit",
            "in": "query",
            "description": "The Workday ID of the owning academic unit of the program of study, as of the effective date. You can use a return id from GET /academicUnits",
            "required": false,
            "type": "string"
          },
          {
            "name": "cipCode",
            "in": "query",
            "description": "The Workday ID of the CIP code for the program of study, as of the effective date.",
            "required": false,
            "type": "string"
          },
          {
            "name": "educationalCredentials",
            "in": "query",
            "description": "The Workday IDs of the educational credentials of the program of study, as of the effective date. You can use the return id from GET /educationalCredentials. \n\nYou can filter programs of study by multiple educational credentials. Example: educationalCredentials=A&educationalCredentials=B&educationalCredentials=C. In this example, the method returns programs of study that have credentials A, B, AND C as of the the effectiveDate or current date.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "effectiveDate",
            "in": "query",
            "description": "The effective date of the Program of Study, using the yyyy-mm-dd format. The default is the current date.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "programType",
            "in": "query",
            "description": "The Workday ID of the program type of the program of study, as of the effective date.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/programOfStudy_733968937d5910001532e47c4f78009f"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicPeriods": {
      "get": {
        "tags": [
          "academicPeriods"
        ],
        "summary": "Retrieves a collection of academic periods.",
        "description": "Retrieves all academic periods. You can filter the academic periods by the academic calendar, academic year, start date, and end date.\n\n<b>Secured by:</b> Set Up: Academic Appointments and Related Data, Set Up: Academic Calendar\n\n<b>Scope:</b> Academic Faculty, Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "academicCalendar",
            "in": "query",
            "description": "The Workday ID of the academic calendar for the academic period. You can use a return id from GET /academicCalendars",
            "required": false,
            "type": "string"
          },
          {
            "name": "academicYear",
            "in": "query",
            "description": "The Workday ID of the academic year for the academic period. You can use a return id from GET /academicCalendars/{ID}/academicYears",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Filter academic periods by their start date using yyyy-mm-dd format. If used without toDate, returns all academic periods with start date on or after fromDate. If used with toDate, returns all academic periods whose start and/or end dates are within the inclusive date range specified by fromDate and toDate.",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Filter academic periods by their end date using yyyy-mm-dd format. If used without fromDate, returns all academic periods with end date on or before toDate. If used with fromDate, returns all academic periods whose start and/or end dates are within the inclusive date range specified by fromDate and toDate.",
            "required": false,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/academicPeriod_9b0fc1f2e4f6100023b36b11ea10016e"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    },
    "/academicLevels": {
      "get": {
        "tags": [
          "academicLevels"
        ],
        "summary": "Retrieves a collection of academic levels.",
        "description": "Retrieves all academic levels.\n\n<b>Secured by:</b> Set Up: Academic Structure\n\n<b>Scope:</b> Academic Foundation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of objects in a single response. The default is 20. The maximum is 100.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The zero-based index of the first object in a response collection. The default is 0. Use offset with the limit parameter to control paging of a response collection. Example: If limit is 5 and offset is 9, the response returns a collection of 5 objects starting with the 10th object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. A successful response can return no matched data.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/academicLevel_1f466e118919100030b66d4e95a3024a"
                  }
                },
                "total": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "401": {
            "description": "Invalid resource or operation. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "403": {
            "description": "User has insufficient permissions. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "404": {
            "description": "Resource not found. (https://community.workday.com/rest/error-messages)",
            "schema": {
              "$ref": "#/definitions/VALIDATION_ERROR_MODEL_REFERENCE"
            }
          },
          "default": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
            }
          }
        },
        "x-workday-internal-try-enabled": "false"
      }
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "authorizationUrl": "https://<tenantAuthorizationHostname>",
      "flow": "implicit"
    }
  },
  "definitions": {
    "INSTANCE_MODEL_REFERENCE": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "wid / id / reference id",
          "pattern": "^(?:(?:[0-9a-f]{32})|(?:[0-9]+\\$[0-9]+)|(\\S+=\\S+))$"
        },
        "descriptor": {
          "type": "string",
          "description": "A description of the instance",
          "readOnly": true
        },
        "href": {
          "type": "string",
          "description": "A link to the instance",
          "readOnly": true
        }
      }
    },
    "ERROR_MODEL_REFERENCE": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "description": "A description of the error"
        },
        "code": {
          "type": "string",
          "description": "The code that corresponds to the error message. Use the error code to drive programmatic error-handling behavior. Don't use error message strings for this purpose because they are subject to change"
        },
        "field": {
          "type": "string",
          "description": "The field related to the error"
        },
        "path": {
          "type": "string",
          "description": "The path of the field related to the error"
        }
      }
    },
    "VALIDATION_ERROR_MODEL_REFERENCE": {
      "allOf": [
        {
          "type": "object",
          "required": [
            "error"
          ],
          "properties": {
            "error": {
              "type": "string",
              "description": "A description of the error"
            },
            "errors": {
              "type": "array",
              "description": "An array of validation errors",
              "items": {
                "$ref": "#/definitions/ERROR_MODEL_REFERENCE"
              }
            }
          }
        }
      ]
    },
    "FACETS_MODEL_REFERENCE": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "This object represents the possible facets for this resource",
        "readOnly": true,
        "properties": {
          "descriptor": {
            "type": "string",
            "description": "A description of the facet"
          },
          "facetParameter": {
            "type": "string",
            "description": "The alias used to select the facet"
          },
          "values": {
            "type": "array",
            "description": "the facet values",
            "items": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of instances returned by this facet"
                },
                "id": {
                  "type": "string",
                  "description": "wid / id / reference id",
                  "pattern": "^(?:(?:[0-9a-f]{32})|(?:[0-9]+\\$[0-9]+)|(\\S+=\\S+))$"
                },
                "descriptor": {
                  "type": "string",
                  "description": "A description of the facet"
                },
                "href": {
                  "type": "string",
                  "description": "A link to the instance",
                  "readOnly": true
                }
              },
              "required": [
                "id"
              ]
            }
          }
        }
      }
    },
    "MULTIPLE_INSTANCE_MODEL_REFERENCE": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
          }
        }
      }
    },
    "academicLevel_733968937d59100017c9ba44785500df": {
      "allOf": [
        {
          "$ref": "#/definitions/academicLevel_1f466e118919100030b66d4e95a3024a"
        },
        {}
      ],
      "description": "The owning Academic Level for the Program of Study, as of the effective date."
    },
    "academicUnit_733968937d59100017c9ba2c8e9800de": {
      "allOf": [
        {
          "$ref": "#/definitions/academicUnit_a00c40d44aef1000100d59e3d5f00327"
        },
        {}
      ],
      "description": "The owning Academic Unit for the Program of Study, as of the effective date."
    },
    "programType_733968937d59100017c9ba4bf74c00e0": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The Program Type for the Program of Study."
    },
    "cipCode_733968937d5910001a12915b64ea0108": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The CIP Code for the Program of Study, as of the effective date."
    },
    "programOfStudy_733968937d5910001532e47c4f78009f": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "academicLevel": {
              "$ref": "#/definitions/academicLevel_733968937d59100017c9ba44785500df"
            },
            "educationalCredentials": {
              "type": "array",
              "description": "The default educational credentials for the program of study as of the effective date.",
              "items": {
                "$ref": "#/definitions/educationalCredentialDetail_ff8de71f635410000c15eed9a0db02f6"
              },
              "x-workday-type": "Multi-instance"
            },
            "academicUnit": {
              "$ref": "#/definitions/academicUnit_733968937d59100017c9ba2c8e9800de"
            },
            "name": {
              "type": "string",
              "example": "English Major",
              "description": "The name of the Program of Study, as of the effective date.",
              "x-workday-type": "Text"
            },
            "programType": {
              "$ref": "#/definitions/programType_733968937d59100017c9ba4bf74c00e0"
            },
            "cipCode": {
              "$ref": "#/definitions/cipCode_733968937d5910001a12915b64ea0108"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            }
          }
        }
      ]
    },
    "type_ff8de71f635410000c15eef916ac02f8": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "Educational Credential Type for the Credential"
    },
    "educationalCredentialDetail_ff8de71f635410000c15eed9a0db02f6": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/definitions/type_ff8de71f635410000c15eef916ac02f8"
            },
            "name": {
              "type": "string",
              "example": "B.A. English",
              "description": "Name of Educational Credential",
              "x-workday-type": "Text"
            },
            "description": {
              "type": "string",
              "example": "Bachelor of Arts in English",
              "description": "Description of Educational Credentail",
              "x-workday-type": "Rich Text"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "superior_1f466e11891910002cfdcaa9d103022b": {
      "allOf": [
        {
          "$ref": "#/definitions/academicUnit_a00c40d44aef1000100d59e3d5f00327"
        },
        {}
      ],
      "description": "The immediately superior academic unit for this Academic Unit, as of the effective date."
    },
    "cipCode_1f466e11891910003005059d67100240": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The Classification of Instructional Programs code assigned to the Academic Unit."
    },
    "externalURL_1f466e1189191000300505696b13023b": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "External URL for the Academic Unit."
    },
    "company_1f466e118919100030050578fd94023d": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The company for the Academic Unit, as of the effective date."
    },
    "subtype_1f466e118919100030050598719d023f": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The subtype for the academic unit; for example, department, center, or program."
    },
    "academicUnitDetail_1f466e11891910002cd0401c7f810223": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "superior": {
              "$ref": "#/definitions/superior_1f466e11891910002cfdcaa9d103022b"
            },
            "cipCode": {
              "$ref": "#/definitions/cipCode_1f466e11891910003005059d67100240"
            },
            "institution": {
              "type": "boolean",
              "example": true,
              "description": "If true, the Academic Unit is designated as an institution, as of the effective date.",
              "x-workday-type": "Boolean"
            },
            "externalURL": {
              "$ref": "#/definitions/externalURL_1f466e1189191000300505696b13023b"
            },
            "company": {
              "$ref": "#/definitions/company_1f466e118919100030050578fd94023d"
            },
            "subtype": {
              "$ref": "#/definitions/subtype_1f466e118919100030050598719d023f"
            },
            "code": {
              "type": "string",
              "example": "CAS12",
              "description": "The code for the Academic Unit, as of the effective date.",
              "x-workday-type": "Text"
            },
            "levels": {
              "type": "array",
              "description": "The configured academic levels for the Academic Unit, as of the effective date.",
              "items": {
                "$ref": "#/definitions/academicLevel_1f466e118919100030b66d4e95a3024a"
              },
              "x-workday-type": "Multi-instance"
            },
            "relatedSupervisoryOrganizations": {
              "type": "array",
              "description": "The \\~Supervisory organizations\\~ that manage \\~worker\\~ positions related to the Academic Unit.  Used to facilitate the defaulting of the Academic Unit during Add Appointments sub-processes.",
              "items": {
                "$ref": "#/definitions/supervisoryOrganizations_fef6611cad6a10001e11b81333a7040e"
              },
              "x-workday-type": "Multi-instance"
            },
            "subordinates": {
              "type": "array",
              "description": "Returns the academic units that have specified this academic unit as their superior academic unit as of the Snapshot Effective Date.",
              "items": {
                "$ref": "#/definitions/academicUnit_a00c40d44aef1000100d59e3d5f00327"
              },
              "x-workday-type": "Multi-instance"
            },
            "inactive": {
              "type": "boolean",
              "example": true,
              "description": "If true, the Academic Unit is inactive, as of the effective date.",
              "x-workday-type": "Boolean"
            },
            "name": {
              "type": "string",
              "example": "College of Arts & Sciences",
              "description": "The name of the Academic Unit, as of the effective date.",
              "x-workday-type": "Text"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            }
          }
        }
      ]
    },
    "superior_a00c40d44aef10000ff3291867e60324": {
      "allOf": [
        {
          "$ref": "#/definitions/academicUnit_a00c40d44aef1000100d59e3d5f00327"
        },
        {}
      ],
      "description": "The immediately superior academic unit for this Academic Unit, as of the effective date."
    },
    "academicUnitSummary_1f466e11891910002d1ef33fb757022f": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "inactive": {
              "type": "boolean",
              "example": true,
              "description": "If true, the Academic Unit is inactive, as of the effective date.",
              "x-workday-type": "Boolean"
            },
            "name": {
              "type": "string",
              "example": "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.",
              "description": "The name of the Academic Unit, as of the effective date.",
              "x-workday-type": "Text"
            },
            "superior": {
              "$ref": "#/definitions/superior_a00c40d44aef10000ff3291867e60324"
            },
            "institution": {
              "type": "boolean",
              "example": true,
              "description": "If true, the Academic Unit is designated as an institution, as of the effective date.",
              "x-workday-type": "Boolean"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            }
          }
        }
      ]
    },
    "nonInstructionalDaysCalendar_9a52f8b57a811000273f2e13865411e0": {
      "allOf": [
        {
          "$ref": "#/definitions/holidayCalendar_9a52f8b57a811000272264adfcc011dc"
        },
        {}
      ],
      "description": "The calendar containing holidays and non-instructional days."
    },
    "academicCalendar_9a52f8b57a811000273f2e068c2611df": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "nonInstructionalDaysCalendar": {
              "$ref": "#/definitions/nonInstructionalDaysCalendar_9a52f8b57a811000273f2e13865411e0"
            },
            "periodTypes": {
              "type": "array",
              "description": "The period information which includes its academic period type, order in a calendar year, and whether it's a standard period.",
              "items": {
                "$ref": "#/definitions/academicPeriodType_9a52f8b57a811000276864fb185f11e6"
              },
              "x-workday-type": "Multi-instance"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "academicYear_51a89ee734c0100018287a4073d7032e": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "example": "2025-08-09T07:00:00.000Z",
              "description": "The Start Date for this Date Range.",
              "x-workday-type": "Date"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "example": "2025-08-09T07:00:00.000Z",
              "description": "The End Date for this Date Range.",
              "x-workday-type": "Date"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "academicCalendar_9b0fc1f2e4f61000250aa6ca988c0180": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The Academic Calendar for an Academic Period."
    },
    "periodType_9b0fc1f2e4f6100024528808c1a70178": {
      "allOf": [
        {
          "$ref": "#/definitions/INSTANCE_MODEL_REFERENCE"
        },
        {}
      ],
      "description": "The Period Type for the Academic Period."
    },
    "academicYear_9b0fc1f2e4f610002547ba642b2d0185": {
      "allOf": [
        {
          "$ref": "#/definitions/academicYear_51a89ee734c0100018287a4073d7032e"
        },
        {}
      ],
      "description": "The Academic Year for an Academic Period."
    },
    "academicPeriod_9b0fc1f2e4f6100023b36b11ea10016e": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "academicCalendar": {
              "$ref": "#/definitions/academicCalendar_9b0fc1f2e4f61000250aa6ca988c0180"
            },
            "periodType": {
              "$ref": "#/definitions/periodType_9b0fc1f2e4f6100024528808c1a70178"
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "example": "2008-09-22T07:00:00.000Z",
              "description": "The Start Date of the Academic Period.",
              "x-workday-type": "Date"
            },
            "weeksOfInstruction": {
              "type": "integer",
              "example": "12",
              "description": "The number of Weeks of Instruction for this Academic Period.",
              "x-workday-type": "Numeric"
            },
            "periodWeights": {
              "type": "array",
              "description": "The Academic Period Weight of an Academic Period.",
              "items": {
                "$ref": "#/definitions/academicPeriodWeight_64ecf4fcc12e10000c3e81f7435f0103"
              },
              "x-workday-type": "Multi-instance"
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "example": "2008-12-10T08:00:00.000Z",
              "description": "The End Date of the Academic Period.",
              "x-workday-type": "Date"
            },
            "standard": {
              "type": "boolean",
              "example": true,
              "description": "If true, this is a Standard Academic Period of the Academic Calendar.",
              "x-workday-type": "Boolean"
            },
            "academicYear": {
              "$ref": "#/definitions/academicYear_9b0fc1f2e4f610002547ba642b2d0185"
            },
            "standardEndDate": {
              "type": "string",
              "format": "date",
              "example": "2008-12-31T08:00:00.000Z",
              "description": "Returns the Standard End Date of this Academic Period if it is a standard period for an Academic Calendar.",
              "x-workday-type": "Date"
            },
            "periodUsages": {
              "type": "array",
              "description": "The Period Usage for an Academic Period.",
              "items": {
                "$ref": "#/definitions/academicPeriodUsage_64ecf4fcc12e10000c5fe5b1f0b80108"
              },
              "x-workday-type": "Multi-instance"
            },
            "standardStartDate": {
              "type": "string",
              "format": "date",
              "example": "2008-09-01T07:00:00.000Z",
              "description": "The Standard Start Date of this Academic Period if it is a standard period for an Academic Calendar.",
              "x-workday-type": "Date"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            }
          }
        }
      ]
    },
    "academicLevel_1f466e118919100030b66d4e95a3024a": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the instance"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "holidayCalendar_9a52f8b57a811000272264adfcc011dc": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the instance"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "academicPeriodType_9a52f8b57a811000276864fb185f11e6": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "standard": {
              "type": "boolean",
              "example": true,
              "description": "If true, the period order is standard.",
              "x-workday-type": "Boolean"
            },
            "id": {
              "type": "string",
              "example": "Lorem ipsum dolor sit amet, cum choro singulis consectetuer ut, ubique iisque contentiones ex duo. Quo lorem etiam eu.",
              "description": "The Workday ID of the Academic Period Type.",
              "x-workday-type": "Text"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "academicPeriodWeight_64ecf4fcc12e10000c3e81f7435f0103": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "supervisoryOrganizations_fef6611cad6a10001e11b81333a7040e": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the instance"
            },
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            }
          }
        }
      ]
    },
    "academicUnit_a00c40d44aef1000100d59e3d5f00327": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "institution": {
              "type": "boolean",
              "example": true,
              "description": "If true, the Academic Unit is designated as an institution, as of the effective date.",
              "x-workday-type": "Boolean"
            },
            "inactive": {
              "type": "boolean",
              "example": true,
              "description": "If true, the Academic Unit is inactive, as of the effective date.",
              "x-workday-type": "Boolean"
            },
            "name": {
              "type": "string",
              "example": "AMU",
              "description": "The name of the Academic Unit, as of the effective date.",
              "x-workday-type": "Text"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            }
          }
        }
      ]
    },
    "academicPeriodUsage_64ecf4fcc12e10000c5fe5b1f0b80108": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "descriptor": {
              "type": "string",
              "example": "Lorem ipsum dolor sit ame",
              "description": "A preview of the instance"
            },
            "id": {
              "type": "string",
              "description": "Id of the instance"
            }
          }
        }
      ]
    }
  }
}