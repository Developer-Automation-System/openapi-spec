{
  "openapi": "3.0.3",
  "info": {
    "version": "58.13.0",
    "x-logo": {
      "url": "https://segment.com/docs/images/twilio-segment-logo.png",
      "backgroundColor": "#ebf4ff",
      "altText": "Twilio Segment logo"
    },
    "contact": {
      "email": "friends@segment.com",
      "name": "Segment",
      "url": "https://docs.segmentapis.com"
    },
    "title": "Segment Public API",
    "description": "The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.\n\nAll CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.\n\nSee the next sections for more information on how to use the Segment Public API.\n"
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.segmentapis.com"
    }
  ],
  "security": [
    {
      "token": []
    }
  ],
  "tags": [
    {
      "name": "Introduction",
      "description": "The Segment Public API helps you manage your Segment Workspaces and its resources. You can use the API to perform CRUD (create, read, update, delete) operations at no extra charge. This includes working with resources such as Sources, Destinations, Warehouses, Tracking Plans, and the Segment Destinations and Sources Catalogs.\n\nAll CRUD endpoints in the API follow REST conventions and use standard HTTP methods. Different URL endpoints represent different resources in a Workspace.\n\nSee the next sections for more information on how to use the Segment Public API.\n"
    },
    {
      "name": "Getting Started",
      "description": "The Segment Public API requires that you have an authentication token before you send requests. This section explains how to get a token and add it to your requests.\n\n## Get an API token\n\n1. Log in to the Segment App, and choose the Workspace you want to generate a token for. Each Segment Workspace requires a separate token. <!--TODO: screenshot-->\n2. Click **Settings** in the left menu to access Workspace Settings. Navigate to the **Access Management** tab, and click **Tokens**. This tab lists any existing tokens created for the Workspace.\n3. Click **+Create Token** , and follow the prompts to generate a new token. Be sure to select a Public API token, and not a Config API token. Once generated, store the token somewhere safe, like a password store or other secrets manager.\n\n## Create a test request\n\nThe Segment Public API only accepts requests in the HTTP 1.1 or HTTP 2 protocols over port 443 (HTTPS). All communications must be encrypted, so requests on port 80 (plain HTTP) will be refused.\n\nThe Segment Public API can be accessed through multiple regions, depending on data residency policies: for US-based Workspaces, use `api.segmentapis.com`. For EU-based Workspaces, `eu1.api.segmentapis.com`.\n\nYou must send the token as an `Authorization` header in your requests. Use the following format: `Authorization: Bearer $TOKEN`, where `$TOKEN` is the variable containing the value of the token.\n\nFor example, in a US-based Workspace:\n\n```\ncurl \\\n  --request GET \\\n  --url https://api.segmentapis.com/ \\\n  --header \"Authorization: Bearer $TOKEN\"\n```\n\nIn an EU-based Workspace:\n\n```\ncurl \\\n  --request GET \\\n  --url https://eu1.api.segmentapis.com/ \\\n  --header \"Authorization: Bearer $TOKEN\"\n```\n\nLearn more about how the Segment Public API handles [authentication](/tag/Authentication) in the next section.\n\n## Install and use an SDK\n\nSDKs for the Public API are available in [JavaScript/TypeScript](https://github.com/segmentio/public-api-sdk-typescript), [Go](https://github.com/segmentio/public-api-sdk-go), [Java](https://github.com/segmentio/public-api-sdk-java), [Python](https://github.com/segmentio/public-api-sdk-python), [C#](https://github.com/segmentio/public-api-sdk-csharp) and [Swift](https://github.com/segmentio/public-api-sdk-swift). If you develop in one of these platforms, installing and using the SDK is a simpler way to call Public API.\n\n### JavaScript and TypeScript (Node.js)\n\nTo install the `@segment/public-api-sdk-typescript` package, you can use either `npm` or `pnpm`, depending on which package manager you prefer. Here are the installation instructions for each:\n\n#### NPM\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Run the following command:\n\n```\nnpm install @segment/public-api-sdk-typescript\n```\n\n#### pnpm\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Run the following command:\n\n```\npnpm add @segment/public-api-sdk-typescript\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### Go\n\nTo install the `segmentio/public-api-sdk-go` package, you will need to have the Go programming language installed on your system. You can check if you have Go installed by running the following command in your terminal:\n\n```\ngo version\n```\n\nIf Go is installed, this command will print the version number. If Go is not installed, you can follow the instructions on the Go website to install it: https://golang.org/doc/install\n\nOnce you have Go installed, you can install the `segmentio/public-api-sdk-go` package using the `go get` command. Here are the installation instructions:\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Run the following command:\n\n```\ngo get github.com/segmentio/public-api-sdk-go\n```\n\nThis will download the package and all of its dependencies to your system. After the installation is complete, you can import and use the package in your Go code.\n\nHere is an example of how to import and use the package in a Go program:\n\n```\nimport \"github.com/segmentio/public-api-sdk-go\"\n```\n\nNote: You may need to add the `$GOPATH/bin` directory to your `$PATH` environment variable in order to use the package in your Go code. You can do this by running the following command in your terminal:\n\n```\nexport PATH=$PATH:$GOPATH/bin\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### Java\n\nTo install the `public-api-sdk-java` package, you will need to have the Java Development Kit (JDK) installed on your system. You can check if you have the JDK installed by running the following command in your terminal:\n\n```\njava -version\n```\n\nIf the JDK is installed, this command will print the version number. If the JDK is not installed, you can follow the instructions on the Oracle website to install it: https://www.oracle.com/java/technologies/javase-downloads.html\n\nOnce you have the JDK installed, you can install the @segment/public-api-sdk-java package using your preferred build tool. Here are the installation instructions for three popular build tools: Maven and Gradle.\n\n#### Maven\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Create a new file called `pom.xml` in this directory with the following contents:\n\n```xml\n<project>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example</groupId>\n  <artifactId>my-project</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <dependencies>\n    <dependency>\n      <groupId>com.segment.publicapi</groupId>\n      <artifactId>segment-publicapi</artifactId>\n      <version>33.0.4</version>\n    </dependency>\n  </dependencies>\n</project>\n```\n\n- Run the following command to download and install the package and its dependencies: `mvn install`.\n\n#### Gradle\n\n- Open a terminal window and navigate to the directory where you want to install the package.\n- Create a new file called `build.gradle`, or edit the existing one, and make sure it contains the following declaration:\n\n```gradle\ndependencies {\n  implementation \"com.segment.publicapi:segment-publicapi:33.0.4\"\n}\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### Swift\n\nTo install the Swift Public API SDK, you will need to add it as a dependency to your project. You can do this using Swift Package Manager.\n\nFirst, open your project in Xcode and navigate to the Swift Packages tab. Click the `+` button to add a new package dependency. Enter the repository URL for public-api: https://github.com/segmentio/public-api-sdk-swift.git.\n\nNext, select the version of the SDK that you want to use, and click `Next`. Xcode will automatically resolve the dependencies for your project, and you should now be able to use Public API in your code.\n\nAlternatively, you can add the following entry to your `Package.swift` file directly:\n\n```swift\n.package(name: \"PublicApi\", url: \"git@github.com:segmentio/public-api-sdk-swift.git\", branch: \"master\")\n```\n\nTo use Public API, you will need to import it at the top of your Swift file:\n\n```swift\nimport PublicApi\n```\n\nAfter doing the above, the package should be installed and ready for use in your project.\n\n### C#\n\nThe C# SDK package can be installed using [Nuget](https://www.nuget.org/packages/Segment.PublicApi).\n\nTo add the Segment Public API C# package to your project, run - `dotnet add package Segment.PublicApi`\n\nAdditional documentation for usage of this API can be found in the README section of the [Segment Public API Nuget package page](https://www.nuget.org/packages/Segment.PublicApi).\n"
    },
    {
      "name": "Benefits",
      "description": "The Segment Public API offers several benefits over the legacy Config API. These benefits include, but are not limited to:\n\n- More consistent endpoints, which enables more efficient onboarding.\n- Improved error handling and reporting.\n- Support for pagination and per-endpoint API versioning to improve API workflows.\n"
    },
    {
      "name": "Migration",
      "description": "Learn more about the benefits of the Segment Public API over Config API in the [benefits](/tag/Benefits) section.\n\nThe Config API and Public API do not share common endpoints, but they are conceptually similar.\n\nTo begin migration, Segment recommends that you inspect the Config API endpoints you use, and find their counterparts in the Public API.\n\n## Differences in operation\n\n### URL patterns\n\nExisting Config API URLs will not work against Public API. Segment provides a new simplified format. Most of the URLs in Public API follow the format below:\n\n    VERB /object\n    VERB /object/id\n    VERB /object/id/nested-object\n    VERB /object/id/nested-object/id\n\nExamples:\n\n    GET /sources\n    PUT /destinations/fP7qoQw2HTWt9WdMr718gn\n    GET /destinations/fP7qoQw2HTWt9WdMr718gn/subscriptions/aJCn6DQsTLw9aBTqd34uQf\n\nSome exceptions exist, like `GET /warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs` where items nest further, but those are rare.\n\n### Slugs vs IDs\n\nThe Config API uses slugs, like `my-source` or `google-analytics` to identify objects. The Public API uses IDs. IDs provide the following advantages:\n\n- No guarantees or expectations of size, ordering, collation or format to these IDs\n- Once an object receives an ID, it will not change during the lifespan of that object\n- No objects will ever share an ID, even over time\n\n### The Public API implies workspace IDs\n\nThe Public API scopes all operations to a Workspace. The Workspace ID itself is not passed into the requests, but Segment looks it up as a result of authorizing the request.\n\nThe Public API removes fields like `parent` and `workspace`, which exist in Config API endpoints, as they are no longer needed.\n\n### Enum values\n\nSegment made all enumerated values in Public API use `SCREAMING_UNDERSCORE` casing across the board. No more guessing whether a field should have the value `likeThis` , `LikeThis`, `like-this`, `like_this`, etc. They’re all formatted the same in both inputs and outputs now.\n\n### Rate limits\n\nThere is a completely new rate limiting system in place in Public API. Please refer to [Rate Limits](/tag/Rate-Limits) to learn more.\n\n### Object limits\n\nSome objects (like Sources) are subject to limits depending on the Workspace type you use (team, business, etc). These limits are not different between Config API and Public API.\n\nEndpoints operating on collections of items are generally limited to 200 items per call, unless otherwise noted in their documentation.\n\n### Payload size limits\n\nCustomers often ask about size limits for some endpoints, like `Create Tracking Plan` and `Update Function`. Segment may split these endpoints into multiple smaller / batchable operations so request sizes are not an issue, but in the meantime the Public API caps:\n\n- Tracking Plan endpoints at about 2mb requests\n- Functions endpoints at about 25mb requests\n\nTo learn more, please refer to [Payload limits](/tag/Payload-Limits).\n"
    },
    {
      "name": "Authentication",
      "description": "The Segment Public API uses API Tokens to authenticate and authorize requests. You can generate tokens by accessing Segment's Workspace settings. See [Getting Started](/tag/Getting-Started) for more information.\n\n## Scope\n\nAPI Tokens are unique and scoped to the Segment Workspace in which you create them. Tokens identify and authorize actions that users or automations can perform using the Segment Public API.\n\n> **Note**: You must create a separate API Token for each Workspace you want to manage using the Segment Public API.\n\n## Permissions and security\n\nEach API Token has an associated identity and a set of permissions. These permissions set forth the actions you can perform in the Workspace.\n\nWorkspace Admins and Owners can grant or revoke a specific token's permissions by accessing Segment's Workspace settings.\n\n## Authenticating requests\n\nEvery request must include a header that contains an API token. Create these headers in the following format:\n\n```\nAuthorization: Bearer <your_token_here>\n```\n\nAll API requests must be over HTTPS. Plain HTTP calls and calls without authentication will fail.\n"
    },
    {
      "name": "Error Handling",
      "description": "The Segment Public API uses standard HTTP response codes to represent the state of an operation. Response codes in the `2xx` range were completed successfully, while those in the `4xx` and `5xx` ranges indicate a problem. The API also uses a [response envelope](/tag/Error-Handling#section/Response-Envelopes) format that makes it easy to navigate through response details.\n\n## Status codes overview\n\n| Code | Message              | Overview                                                                                                                                                                                                                                              |\n| ---- | -------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | A request was accepted and handled successfully.                                                                                                                                                                                                      |\n| 201  | Created              | A new resource was created successfully.                                                                                                                                                                                                              |\n| 401  | Unauthorized         | No authorization, or incorrect authorization provided for the resource. <br /> <br />This could mean: <br /> <br />- A missing API Token <br />- An invalid API token <br />- The provided API token does not have permission to access the resource. |\n| 404  | Not found            | The requested resource does not exist or cannot be found.                                                                                                                                                                                             |\n| 409  | Conflict             | There was a conflict when processing this request that prevented it from being fulfilled.                                                                                                                                                             |\n| 413  | Payload too large    | The request body is larger than limits defined by the server.                                                                                                                                                                                         |\n| 422  | Unprocessable entity | The request contained invalid parameters and was not accepted. <br /> <br />This usually means the request was missing required parameters, or included parameters that did not pass validation.                                                      |\n| 429  | Too many requests    | Too many sequential or concurrent requests to a specific resource or endpoint were made.                                                                                                                                                              |\n| 5xx  | Server error         | Segment was unable to serve the request due to an internal failure.                                                                                                                                                                                   |\n\n## Response envelopes\n\nThe Segment Public API uses a consistent envelope format in all response bodies. This makes it easy to read the response data, and check for and handle any potential errors.\n\nThe following two examples illustrate the responses.\n\n```json5\n{\n  data: {\n    hello: 'world',\n    // ... other keys and values\n  },\n}\n```\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"id\\\" is required\",\n      \"field\": \"id\"\n    }\n  ]\n}\n```\n\nResponses will never contain both `data` and `error` keys.\n\n### The `data` object\n\nAn object that contains the successful response from an API call. Responses in the `2xx` range always contain valid data, and conform to the `SuccessResponse` type specified above.\n\nThe following request and response pair shows a successful request and its response:\n\n```bash\ncurl https://api.segmentapis.com/warehouses/4w5kMU6vycSjfjt87k3pZB \\\n  --header 'Authorization: Bearer <token>'\n```\n\nA successful response always includes a `data` field.\n\n```json5\n{\n  data: {\n    warehouse: {\n      id: '4w5kMU6vycSjfjt87k3pZB',\n      workspaceId: '3i5paCz7b2MaaA8Wi7xXwe',\n      enabled: true,\n      // ...\n    },\n  },\n}\n```\n\n### The `errors` object\n\nThis section includes errors that prevented a request from completing. Responses in the `4xx` and `5xx` ranges always contain an `errors` array, as specified in the `ErrorResponse` type above, which describes the errors that prevented the request from finishing.\n\nGiven the following invalid request:\n\n```\ncurl --request POST \\\n  --url https://api.segmentapis.com/warehouses \\\n  --header 'Authorization: Bearer <token> ' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"warehouse\": {}\n  }'\n```\n\nThe response includes a list of errors that contains all errors that occurred during the request:\n\n```\nHTTP/1.1 422 Unprocessable Entity\n```\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"metadataId\\\" is required\",\n      \"field\": \"warehouse.metadataId\"\n    },\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"settings\\\" is required\",\n      \"field\": \"warehouse.settings\"\n    }\n  ]\n}\n```\n\n### The error object\n\nAll errors in the Segment Public API use a consistent format. They always include a `type` field, which explains the type of error encountered, and may include optional fields to provide extra information and metadata about the failure.\n\n```typescript\n/** RequestError represents any error that could occur while executing a request. */\ntype RequestError = {\n  /** The type of error (validation, server, conflict, etc) */\n  type: string\n\n  /** An optional error message attached to the error */\n  message?: string\n\n  /** An optional field that triggered the error */\n  field?: string\n\n  /** An optional extra data object that can be associated with this error */\n  data?: object\n}\n```\n\nThe next section introduces [Validation Errors](/tag/Request-Validation), and explains how to handle and recover from requests that fail validation.\n"
    },
    {
      "name": "Request Validation",
      "description": "The Segment Public API validates all incoming requests. Be aware of two common request validation scenarios: Authentication Validation and Input Validation.\n\n## Authentication validation\n\nYou must authenticate each request with a valid API token. Requests that don't provide an authentication token, or provide an invalid or insufficient token, return authentication errors.\n\nSee the [Authentication section](/tag/Authentication) to learn more.\n\n## Input validation\n\nEach request validates against a set of required parameters described in the Segment Public API reference documentation for the request operation.\n\nRequests return Validation Errors if they fail to meet the schema requirements. These errors show which parts of the request are invalid.\n\n```\ncurl \\\n  --request POST \\\n  --url https://api.segmentapis.com/warehouses \\\n  --header 'Authorization: Bearer <token> ' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"warehouse\": {}\n  }'\n```\n\nThe response includes a list of errors which contains all errors that occurred during the request. In this case, both of the required `warehouse.metadataId` and `warehouse.settings` parameters are missing from the request.\n\n```json\nHTTP/1.1 422 Unprocessable Entity\n\n{\n  \"errors\": [\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"metadataId\\\" is required\",\n      \"field\": \"warehouse.metadataId\"\n    },\n    {\n      \"type\": \"input-validation\",\n      \"message\": \"\\\"settings\\\" is required\",\n      \"field\": \"warehouse.settings\"\n    }\n  ]\n}\n```\n"
    },
    {
      "name": "Rate Limits",
      "description": "Segment has limits on the number of requests you can issue to the Public API at one time, and calculates these limits based on:\n\n- The sender IP address\n- The authentication token\n- Complexity and performance requirements of the request\n\nEvery successful HTTP response contains the following HTTP headers:\n\n- `X-RateLimit-Consumed`: the number of requests performed during the current rate limiting window.\n- `X-RateLimit-Remaining`: the number of requests remaining in the current rate limiting window.\n- `X-RateLimit-Reset`: a timestamp, in [RFC 5322 format](https://www.rfc-editor.org/rfc/rfc5322#section-3.3), denoting when the limit will be reset (that is, when a new window will begin).\n\n## Rate limit errors\n\nRate limited requests fail with the `429` status code. The failure includes a descriptive response which contains metadata about the request limits.\n\n### Rate limit error object\n\n| Field                  | Description                                                                                                                   |\n| ---------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `message`              | A message that explains the rate limit error.                                                                                 |\n| `data.msBeforeNext`    | A number of milliseconds before the rate limit is lifted.                                                                     |\n| `data.remainingPoints` | Same as the `X-RateLimit-Remaining` response header. The number of requests remaining in the current rate limiting window.    |\n| `data.consumedPoints`  | Same as the `X-RateLimit-Consumed` response header. The number of requests performed during the current rate limiting window. |\n\nThe example below shows a response that shows the remaining and consumed points.\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"RequestError\",\n      \"message\": \"Too many requests\",\n      \"data\": {\n        \"remainingPoints\": 0,\n        \"msBeforeNext\": 57647,\n        \"consumedPoints\": 21\n      }\n    }\n  ]\n}\n```\n\n## Common rate limit causes\n\nThe most common causes for rate limits include, but are not limited to:\n\n- Too many requests made against a resource in a short period of time.\n- Requesting a large page count or too many pages in a paginated resource too quickly.\n- N+1 requests that are issued in a `for` loop with a large number of elements.\n- Programs that restart automatically after crashing.\n\n## Reducing your call volume\n\nThe Segment Public API includes generous rate limits that allow normal workflows to complete. If you receive rate limit errors, review your requests for places where you can reduce the number of individual calls, and use the best practices listed below to avoid or mitigate rate limit overages.\n\n- Use list-based endpoints whenever possible. Avoid loading multiple hundreds of items using single-resource endpoints. For example, request a batch of Destinations, rather than iterating over a list of single Destinations.\n- Consider using exponential backoffs when retrying operations.\n- Avoid writing code that invokes the Segment Public API in a `for` loop. If you _must_ use `for` loops, consider stopping code execution briefly using `sleep` calls between items in a list.\n- [Contact Segment support](https://segment.com/help/contact/) if you think your workflows are being affected by unreasonable rate limits.\n"
    },
    {
      "name": "Payload Limits",
      "description": "To provide the highest possible quality of service to all customers, Segment has limits on the amount data you can send to the Segment Public API in a single request.\n\nThis API supports HTTP requests with bodies containing up to **25mb** (26,214,400 bytes) worth of data.\n\n## Payload limit error\n\nRequests with payload over this limit fail with the `413` status code:\n\n```json\n{\n  \"errors\": [\n    {\n      \"type\": \"PayloadLimitError\",\n      \"message\": \"The payload limit size of 25mb has been reached\"\n    }\n  ]\n}\n```\n"
    },
    {
      "name": "Pagination",
      "description": "All top-level resources in the Segment Public API return paginated requests using token based pagination. List-based API endpoints require pagination parameters to return results. If you omit pagination parameters, the requests fail validation.\n\n## Pagination parameters\n\nSome list-based operations in the Segment Public API require pagination parameters. These parameters pass as a pagination object either through query or body parameters. If pagination is optional and not provided, the count will default to 200.\n\n### The `pagination` object\n\nThe pagination input object contains two main properties: cursor and count.\n\n```typescript\ntype Pagination {\n  cursor?: string // optional cursor representing the position in a paginated list\n  count: number // integer number of items to retrieve in a page, between 1 and 1000\n}\n```\n\nYou can provide pagination parameters by using either query or body parameters. The examples below show both ways to format pagination parameters.\n\n```json\n// As query params\n/warehouses?pagination.count=3&pagination.cursor=Mw%3D%3D\n\n// as body params\n{\n  \"pagination\": {\n    \"count\": 3,\n    \"cursor\": \"Mw==\"\n  }\n}\n```\n\n### Pagination response\n\nPagination responses include the pagination metadata that you can use to access the next page of the data. The example below shows the pagination object, which keeps track of which page was just returned, and which pages are before and after the current page.\n\n```json\n{\n  \"data\": {\n    \"warehouses\": [\n      ...\n    ],\n    \"pagination\": {\n      \"current\": \"MA==\",\n      \"next\": \"Mw==\",\n      \"previous\": null,\n      \"totalEntries\": 20\n    }\n  }\n}\n```\n\n<!--(TODO Add link if/when we publish docs for this)\n> tip \"\"\n> Bonus: The Javascript/TypeScript library can use the `paginate` function to automatically paginate resources.-->\n"
    },
    {
      "name": "Versioning",
      "description": "The Segment Public API supports `alpha`, `beta`, and `stable` versions. Each version carries its own guarantees, trade-offs, and risks. Because customers can access all three API versions, you can use the version that best fits your organization's needs.\n\nSegment doesn't lock you into a global API version. You can choose which endpoint version fits your needs and which trade-offs you prefer.\n\nThe following table offers an overview of each version:\n\n| Version                                            | Overview                                                                                                                                                                                                                              |\n| -------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| alpha <br />`application/vnd.segment.alpha+json`   | - Fairly unstable <br />- Basic documentation <br />- Breaking changes are common and expected <br />- Strict rate limits <br />- Use at your own risk                                                                                |\n| beta <br /> `application/vnd.segment.beta+json`    | - Fairly stable <br />- Basic documentation with examples and corner cases <br />- Breaking changes are possible <br />- Flexible rate limits <br />- Should be safe for non-critical workflows                                       |\n| stable <br />`application/vnd.segment.stable+json` | - Highest level of stability <br />- Comprehensive documentation that includes examples, corner cases, and limitations <br />- No breaking changes expected\\* <br />- Standard rate limits <br />- Safe to use for critical workflows |\n\n## Accessing versions\n\nEach available endpoint is tagged with its corresponding supported versions so that you can choose the API version that best supports your use case.\n\n### Standard API calls\n\nStandard API call requests are forwarded to the endpoint's most stable available version.\n\nThe Segment Public API first checks for an endpoint's `stable` version, then falls back to a `beta` version, if one exists. If no mature API versions are available, Segment falls back to an `alpha` version.\n\n### Versioned API calls\n\nYou can pass in the specific version of the API call you want to access as an HTTP header. Do this when you want to access API features currently unavailable on the `stable` version.\n\nThe following example shows a correctly formatted request to the `alpha` version of the `sources` route:\n\n```\ncurl \\\n  --request GET\n  --url 'https://api.segmentapis.com/sources' \\\n  --header \"Authorization: Bearer $TOKEN\" \\\n  --header 'Accept: application/vnd.segment.alpha+json'\n```\n\nThe next example shows the same request made to the same endpoint's `beta` version.\n\n```\ncurl \\\n  --request GET\n  --url 'https://api.segmentapis.com/sources' \\\n  --header \"Authorization: Bearer $TOKEN\" \\\n  --header 'Accept: application/vnd.segment.beta+json'\n```\n\n## Backwards-incompatible or breaking changes\n\nNew endpoint versions become available when Segment makes new, backwards-incompatible (\"breaking\") changes to the Segment Public API. Segment reserves the right to make breaking changes to the API, though such changes will occur infrequently. To minimize disruption to your workflow, Segment adds special release versions to new, backwards-incompatible routes.\n"
    },
    {
      "name": "Activations",
      "description": "Activations are encapsulations that represent the configuration for sending an audience output to a destination.\n\n> **Note**: The Activations API is currently not Publicly Available.\n"
    },
    {
      "name": "Warehouses",
      "description": "A Warehouse is a central repository of data collected from one or more Sources. This is what commonly comes to mind when you think about a relational database: structured data that fits into rows and columns.\n\nUsing the Segment Public API, you can create, delete, update, list, validate and connect Warehouses.\n"
    },
    {
      "name": "Sources",
      "description": "In Segment, you create a Source (or more than one!) for each website or app you want to track. While it’s not required that you have a single Source for each server, site or app, Segment recommends that you create a Source for each unique source of data.\n\n## Migrate from the Config API\n\nLike the Segment Public API, the Config API has one endpoint to retrieve details about a Workspace. The [getSource endpoint](https://reference.segmentapis.com/#5a852761-54d5-46da-8437-6e14e63449f3) returns the following fields:\n\n| Config API     | Public API                                      |\n| -------------- | ----------------------------------------------- |\n| `name`         | See note on names vs IDs in the migration guide |\n| `name`         | `slug` (`workspace/` prefix removed)            |\n| `display_name` | `name`                                          |\n| `create_time`  | None                                            |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "IAM Users",
      "description": "Segment’s access management tools let Workspace owners manage which users can access different parts of their Segment Workspaces.\n"
    },
    {
      "name": "IAM Groups",
      "description": "A User Group is a set of Team Members with a set of shared policies. A Segment Team Member can be a member of one or many Groups. All roles in the Segment App are additive, which means that you can assign group memberships and individual roles to a single team member. For example, a single user can inherit roles from a Group definition AND have access to more resources through individually assigned roles.\n"
    },
    {
      "name": "Tracking Plans",
      "description": "A Tracking Plan is a data spec outlining the events and properties you intend to collect across your Segment Sources.\n\nThe Segment Tracking Plan feature allows you to validate your expected events against the live events that Segment receives. Segment generates violations when an event doesn’t match the spec’d event in the Tracking Plan.\n\nYou can store your Tracking Plans in your Workspace, and connect them to one or more Sources.\n\nUsing the Segment Public API, you can create, delete, update, list, and connect Tracking Plans and their Rules.\n\n## Migrate from the Config API\n\nThe [getTrackingPlan endpoint](https://reference.segmentapis.com/#1092fe01-379b-4ca1-8b1d-9f42b33d2899) returns the following fields:\n\n| Config API     | Public API  |\n| -------------- | ----------- |\n| `display_name` | `name`      |\n| `name`         | `slug`      |\n| `updateTime`   | `updatedAt` |\n| `createTime`   | `createdAt` |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Spaces",
      "description": "A space is a separate Personas environment. Consider the two main reasons you might use spaces:\n\n- To separate your development and production environments (highly recommended)\n- To separate environments for distinct teams or geographical regions\n"
    },
    {
      "name": "Reverse ETL",
      "description": "Reverse ETL allows the use of a database (aka: Segment Warehouse) as a source of\ndata to be connected and sent to supported Segment Destinations. Previously, it\nwas only possible to use a Segment Warehouse as a destination.\n\n## Reverse ETL Sync schedule JSON configuration\n\nThe structure of `config` varies with the value in `strategy`.\nAll strategies will employ a key/value object with _minimum_ depth of 1.\n\n### Strategy: \"manual\"\n\nWhen `strategy` is \"manual\", `config` can be excluded altogether. With\nthis strategy, syncs will never be triggered automatically, so they must be\ntriggered manually through the UI or Public API route.\n\n```json\n\"reverseETLSchedule\": {\n  \"strategy\": \"manual\"\n}\n```\n\n### Strategy: \"periodic\"\n\nWhen `strategy` is \"periodic\", the only supported `config` key is \"interval\",\nwhich will be a string that is in a format accepted by Go's\n[time.ParseDuration][go-time-parse-duration] function. For example, \"3h\" will\nsync every 3 hours, while \"30m\" will sync every 30 minutes. The interval must be\ngreater than 10 minutes (\"10m\") and shorter than 1 week (\"168h\").\n\nAn example schedule would look like this:\n\n```json\n\"reverseETLSchedule\": {\n  {\n    \"config\": {\n      \"interval\": \"1h\"\n    },\n    \"strategy\": \"periodic\"\n  }\n}\n```\n\n### Strategy: \"specific_days\"\n\nWhen `strategy` is \"specific_days\", there are only 3 supported `config` keys:\n\"days\", \"hours\" and \"timezone\".\n\nThe \"days\" field must be an array of numbers, corresponding to the desired days\nof the week that syncs should run. Each item must be a number from 0 (Sunday) up\nto 6 (Saturday). There needs to be at least 1 item, but also no more than 7.\n\nFor example: `[0, 6]` would correspond to the weekend (Saturday and Sunday)\nwhile `[1, 2, 3, 4, 5]` would correspond to the weekdays (Monday through\nFriday).\n\nThe \"hours\" field must be an array of numbers, corresponding to the desired\nhours of the day that syncs should run. Each item must be a number from 0 (12am\nor 0:00) up to 23 (11pm or 23:00). There needs to be at least 1 item, but also\nno more than 24.\n\nFor example: `[0, 12]` would correspond to the running at midnight (12:00am /\n0:00) and noon (12:00pm / 12:00).\n\nThe \"timezone\" field must be a valid value from the IANA database used by\nGolang, which should match the list found [here][iana-timezones]. This allows\nthe \"hours\" above to reflect your own time zone which may be easier to\nconfigure, but you can also choose \"UTC\" if you want to avoid things like DST\n(daylight savings).\n\nA simple example config would look like:\n\n```json\n\"reverseETLSchedule\": {\n  \"config\": {\n    \"days\": [1],\n    \"hours\": [15],\n    \"timezone\": \"America/New_York\"\n  },\n  \"strategy\": \"specific_days\"\n}\n```\n\nA more complex example:\n\n```json\n\"reverseETLSchedule\": {\n  \"config\": {\n    \"days\": [0, 6],\n    \"hours\": [0, 6, 12, 18],\n    \"timezone\": \"America/Los_Angeles\"\n  },\n  \"strategy\": \"specific_days\"\n}\n```\n\nThis would run syncs 4 times per day (midnight, 6am, noon, 6pm) but only on\nweekends (Saturday and Sunday).\n\n[go-time-parse-duration]: https://pkg.go.dev/time#ParseDuration\n[iana-timezones]: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\n### Strategy: \"cron\"\n\nUse the `cron` expression for precise scheduling. Remember to include only five fields, not six, as Segment's smallest time unit is minutes. If you need help, use a [cron expression generator](https://crontab.cronhub.io/) to create the ideal schedule.\n\nNote: `cron` strategy does not allow expressions lower than 15 minutes.\n\nHere is an example indicating 'At 15 minutes past the hour, every 3 hours, on day 1 of the month', for example (Tuesday October 01, 2024 at 12:15 am)\n\n```json\n\"reverseETLSchedule\": {\n  \"config\": {\n    \"spec\": \"15 */3 1 * *\",\n    \"timezone\": \"America/Los_Angeles\"\n  },\n  \"strategy\": \"cron\"\n}\n```\n"
    },
    {
      "name": "Audiences",
      "description": "Audiences play a key role in gaining a deeper understanding of your users. Audiences allow you to group users or profiles based on shared characteristics, behaviors, and attributes. Using events passed into Segment, traits, and computed traits you can create Audiences which can help unlock more relevant engagement and communication.\n\n> **Note**: The Audience API is currently in a Private Beta. If you are interested in joining the Private Beta, then please reach out to your customer success manager.\n"
    },
    {
      "name": "Deletion and Suppression",
      "description": "In keeping with Segment's commitment to support GDPR and future privacy regulations such as the CCPA, you can delete and suppress data about end users if you identify that user with a `userId`, should they revoke or alter their consent to data collection. For instance, if an end user in the EU invokes their Right to Object or Right to Erasure under the GDPR, you can use the following features in Segment to block ongoing data collection about the user, and delete all historical data across Segment’s systems, connected S3 buckets and Warehouses, and supported downstream partners.\n\nRegulations enable you to issue a single request to delete and suppress data about a user by `userId`. All regulations are by default scoped to your Workspace and target all Sources within the Workspace. This way, you don't need to page over every Source within Segment to delete data about a user across all your users.\n\nAll deletion and suppression actions within Segment are asynchronous, and fall under the umbrella of what Segment calls \"Regulations.\" Regulations are requests to Segment to impart control over your data flow. You can issue these requests with the Segment Public API using the endpoints below.\n\nYou can't replay data deleted through Regulations. For standard replay requests, Segment asks that you wait for deletions to complete and not submit any new deletion requests for the period of time that Segment replays data for you.\n\n## Migrate from the Config API\n\nDeletion and Suppression got an overhaul in the Segment Public API. They’re now divided into Workspace, Source, and Cloud Source-related endpoints. The Public API simplifies these endpoints: the `attributes` input field is no longer required, and you can now pass an array of IDs to regulate (instead of a `parent`).\n"
    },
    {
      "name": "Computed Traits",
      "description": "Computed traits allow you to quickly create new traits for a user or profile based on that user's tracked interactions. Using the events and event properties that you send through page and track calls, Segment will calculate and keep up-to-date, over time, the value for your defined computed trait. These can be computations like the total number of orders a customer has completed, the lifetime revenue of a customer, the most frequent user to determine which user is most active in an account, or the unique visitors count to assess how many visitors from a single domain.\n\n> **Note**: The Computed Traits API is currently in a Private Beta. If you are interested in joining the Private Beta, then please reach out to your customer success manager.\n\nNote that when using a unique list computed trait, Segment limits the number of Event Properties that can be added to the specific trait to 10,000. If your computed trait exceeds this limit, Segment will not persist any new Event Properties and will drop new trait keys and corresponding values.\n"
    },
    {
      "name": "dbt",
      "description": "Operations related to dbt"
    },
    {
      "name": "Destinations",
      "description": "Destinations receive data _from_ Segment.\n\nIn the Segment Public API, you can manipulate Destinations and the connections between Sources and Destinations, as well as list and inspect their relationships.\n\n## Migrate from the Config API\n\nLike Segment Public API, Config API allows creating, retrieving, updating and deleting Destination objects. See the table below for some key differences:\n\n| Config API     | Public API                                      |\n| -------------- | ----------------------------------------------- |\n| catalogId      | Not returned                                    |\n| config         | `settings`                                      |\n| connectionMode | Not returned                                    |\n| createTime     | Not returned                                    |\n| displayName    | `name`                                          |\n| enabled        | `enabled`                                       |\n| name           | See note on names vs IDs in the migration guide |\n| parent         | `sourceId` (prefix removed)                     |\n| updateTime     | Not returned                                    |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "customer-insights",
      "description": "Operations related to customer-insights"
    },
    {
      "name": "Edge Functions",
      "description": "Edge functions enables you to write event enrichment and transformation logic in Javascript outside\nyour client codebase and deployed to applications over-the-air dynamically.\n\n## Availability\n\nEdge Functions are in Private Alpha testing and available to select customers. To opt in, contact your Customer Success Manager and ensure that you have one of Segment's new Mobile SDKs (Swift or Kotlin) configured.\n\n## Migrate from the Config API\n\n| Config API | Public API                                                            |\n| ---------- | --------------------------------------------------------------------- |\n| `name`     | Use the Source `id` (See note on names vs IDs in the migration guide) |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Destination Filters",
      "description": "The Destination Filters API provides fine-grained controls that allow you to conditionally prevent data delivery to specific destinations. You can filter entire events (for example, selectively drop them) or block/allow individual fields in events before you send them. You can conditionally apply filters to each event based on the contents of that event’s payload. For example, you could apply a filter to Track events with a `plan` property equal to `Professional`, or you could apply a filter to events with a user email address that does not match `*@example.com`.\n\n## Use cases\n\nUse Destination Filters to:\n\n- Reduce the delivery volume of events to a Destination to save on costs\n- Filter out Personally Identifying Information (PII) from the events sent to a Destination that shouldn't receive or store PII\n- Prevent internal user activity from reaching an analytics tool\n- Send the events that you care about to an custom webhook\n\n## Availability\n\nDestination Filters are available to all Business customers and support cloud-based (server-side) and web device-mode destinations. Mobile device-mode destinations are in beta and only support [Swift](https://segment.com/docs/connections/sources/catalog/libraries/mobile/swift-ios/), [Kotlin](https://segment.com/docs/connections/sources/catalog/libraries/mobile/kotlin-android/), and [React Native 2.0](https://segment.com/docs/connections/sources/catalog/libraries/mobile/react-native/) libraries. S3 and Warehouse Destinations are not yet supported.\n\n## Types of filters\n\nThere are three filters that can be applied to events:\n| Type | Action |\n| ---------------- | ---------------------------------------- |\n| drop | Do not send the event to the destination |\n| sample | Send only a percentage of events through to the destination. You can optionally sample based on a field. For example, you can sample 10% of users by sampling on userId instead of a random 10% of all events, which is the default. |\n| allow_properties | Allow properties in the event by specifying nested JSON objects (for example, context, properties.productDetails, etc.) and a list of fields that should be retained in that nested object, with all others dropped before the event is sent to the destination.|\n| drop_properties | Drop properties in the event by specifying nested JSON objects (for example, context, properties.productDetails, etc.) and a list of fields to drop from those nested objects before the event is sent to the destination. |\n\nThe `allow_properties` and `drop_properties` filters may only filter fields inside the following top-level fields of Segment events:\n\n- `properties`\n- `context`\n- `traits`\n\n## Filter order\n\nFilters are applied in the following order for each event:\n\n1. `drop`\n2. `sample`\n3. `allow_properties`\n4. `drop_properties`\n\n## Conditional filters\n\nFilters can optionally be applied to an event by writing an \"if\" statement using Filter Query Language (\"FQL\"), Segment’s simple query language for streaming JSON. FQL statements evaluate to true or false based on the contents of each event, allowing you to only apply filters to specific events.\n\nFor example, given the following event payload:\n\n```\n{\n  \"event\": \"Button Clicked\",\n  \"type\": \"track\",\n  \"context\": {\n    \"library\": {\n      \"name\": \"analytics.js\",\n      \"version\": \"1.0\",\n    }\n  }\n}\n```\n\nThe following FQL statements will evaluate to \"true\", causing the filter to be applied:\n\n- `event = 'Button Clicked'`\n- `event = 'Button Clicked' and type = 'track'`\n- `match(context.library.version, '1.*')`\n- `type = 'identify' or type = 'track'`\n\nAnd the following FQL statements will evaluate to \"false\", causing the filter to be skipped:\n\n- `event = 'Screen Tapped'`\n- `context.path.path = '/login'`\n- `match (context.library.version, '2.*')`\n\nFor more detailed documentation including a list of all operators and functions, see the [FQL Documentation](https://segment.com/docs/api/public-api/fql).\n\n## Universal filters\n\nTo apply a filter to all events going to a destination, you can supply an \"if\" statement of \"all\". All actions in that filter will be applied to events before being delivered to that destination.\n\n## Limits\n\nDestination Filters currently have the following limits:\n\n- Each Destination may have no more than 10 filters.\n- FQL \"if\" statements may be a maximum of 3Kb in size.\n- Filters may have a maximum of 4 actions.\n- Allow / Drop properties filters may target a maximum of 8 objects and each object may have a maximum of 64 fields in the allow or drop.\n- The Preview API \"input\" payload may be a maximum of 128Kb.\n\nIf you would like any of these limits lifted, please reach out to Segment at friends@segment.com.\n\n## API models\n\n### Filter\n\n| Attribute   | Type     | Description                                                                                                                                       |           |\n| ----------- | -------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\n| name        | string   | The URL path of this filter.                                                                                                                      | read-only |\n| enabled     | boolean  | Whether or not this filter should be active.                                                                                                      |           |\n| title       | string   | A human-readable title for this filter.                                                                                                           |           |\n| description | string   | A longer human-readable description of this filter.                                                                                               |           |\n| if          | string   | A FQL statement that causes this filter’s action to be applied if it evaluates to true. \"all\" will cause the filter to be applied to all events   | required  |\n| actions     | []action | The filtering action to take on events that match the \"if\" statement. Must be one of: \"drop\", \"sample\", \"allow_properties\", or \"drop_properties\". | required  |\n\n## Action\n\n### Drop\n\nThe `drop` action will cause the event to be dropped and not sent to the destination if the \"if\" statement evaluates to true.\n\n| Attribute | Type   | Description                                                |          |\n| --------- | ------ | ---------------------------------------------------------- | -------- |\n| type      | string | The action name. For the drop action, this must be \"drop\". | required |\n\n### Sample\n\nThe `sample` action will allow only a percentage of events through. It can sample randomly or, if given a path attribute, it can sample a percentage of events based on the contents of a field. This is useful for sampling all events for a percentage of users rather than a percentage of all events for all users.\n\n| Attribute | Type   | Description                                                                                                                                                                            |          |\n| --------- | ------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- |\n| type      | string | The action name. For the sample action, this must be \"sample\".                                                                                                                         | required |\n| percent   | float  | A percentage in the range [0.0, 1.0] that determines the percent of events to allow through. 0.0 will allow no events and 1.0 will allow all events. The default is 0.0.               | required |\n| path      | string | If non-empty, events will be sampled based on the value at this path. For example, if path is userId, a percentage of users will have their events allowed through to the destination. |          |\n\n### Allow properties\n\nThe allow_properties action takes a list of nested objects (for example, `context`, `properties.orderDetails`) and a list of fields for each object that should be allowed, with all other fields in those objects dropped.\n| Attribute | Type | Description | |\n| --------- | ------ | ---------------------------------------------------------------------------------------------------------- | -------- |\n| type | string | The action name. For the allow properties action, this must be \"allow_properties\". | required |\n| fields | map of string → list of string | A map of nested JSON objects that should have their properties filtered. The map key is the path to the nested JSON object (for example, context.ip, properties, etc.) and the value is a list of string that specifies which fields within the object to allow. Nested JSON objects not specified in this map will be untouched by this filter | required |\n\n### Drop properties\n\nThe drop_properties action takes a list of nested objects (for example, `context`, `properties.orderDetails`) and a list of fields for each object that should be dropped, with all other fields in those objects untouched.\n| Attribute | Type | Description | |\n| --------- | ------------------------------ | ---------------------------------------------------------------------------------- | -------- |\n| type | string | The action name. For the drop properties action, this must be \"drop_properties\". | required |\n| fields | map of string → list of string | A map of nested JSON objects that should have their properties filtered. The map key is the path to the nested JSON object (for example, context.ip, properties, etc.) and the value is a list of string that specifies which fields within the object to drop. Nested JSON objects not specified in this map will be untouched by this filter | required |\n\n## Migrate from the Config API\n\n## Destination filter model\n\n| Config API field | Public API counterpart     |\n| ---------------- | -------------------------- |\n| name             | Use the `id` field instead |\n| enabled          | `enabled`                  |\n| title            | `title`                    |\n| description      | `description`              |\n| if               | `if`                       |\n| actions          | `actions`                  |\n\n## Action model differences\n\n### Type property\n\n| Config API       | Public API counterpart |\n| ---------------- | ---------------------- |\n| drop_event       | `drop`                 |\n| sample_event     | `sample`               |\n| whitelist_fields | `allow_properties`     |\n| blacklist_fields | `drop_properties`      |\n\n### Fields property\n\nThe type of `fields` property has been changed:\n\n| Config API                             | Public API counterpart         |\n| -------------------------------------- | ------------------------------ |\n| map of string → Field List (see below) | map of string → list of string |\n\n#### Field list\n\n| Attribute | Type     | Description                                                                                                |\n| --------- | -------- | ---------------------------------------------------------------------------------------------------------- |\n| fields    | []string | One or more JSON object field names. Nested fields (that is, dot-separated field names) are not supported. |\n\nTo migrate, replace any usages of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Space Filters",
      "description": "The Space Filters API provides fine-grained controls that allow you to conditionally prevent data delivery to spaces to ensure only relevant events and profile data are processed, stored and activated on. A space filter applies to events coming from all sources connected to a space. You can conditionally apply filters to each event based on the contents of that event’s payload. For example, you could apply a filter to Track events with a `plan` property equal to `Professional`, or you could apply a filter to events with a user email address that does not match `*@example.com`.\n\n## Availability\n\nSpace Filters API are available to all Unify and Engage customers.\n\n> **Note**: The Filters API is currently in a Private Beta. If you are interested in joining the Private Beta, please reach out to your customer success manager or friends@segment.com\n\n## Permissions\n\nEither an “Identity admin” or “Profiles and Engage admin” role is required to be able to create, update and delete filters. “Profiles and Engage Read-only” and “Profiles Read-only, Engage User” roles are restricted to preview, get and list filters operations. For more details, see the [Segment Roles Documentation](https://segment.com/docs/segment-app/iam/roles/)\n\n## Types of filters\n\nThere is a drop filter that can be applied to events:\n| Type | Action |\n| ---------------- | ---------------------------------------- |\n| drop | Do not send the event to the space. |\n\n## Conditional filters\n\nFilters can optionally be applied to an event by writing an `\"if\"` statement using [Filter Query Language (\"FQL\")](https://segment.com/docs/api/public-api/fql/), Segment’s simple query language for streaming JSON. FQL statements evaluate to true or false based on the contents of each event, allowing you to only apply filters to specific events.\n\nFor example, given the following event payload:\n\n```\n{\n  \"event\": \"Button Clicked\",\n  \"type\": \"track\",\n  \"context\": {\n    \"library\": {\n      \"name\": \"analytics.js\",\n      \"version\": \"1.0\",\n    }\n  }\n}\n```\n\nThe following FQL statements will evaluate to `\"true\"`, causing the filter to be applied:\n\n- `event = 'Button Clicked'`\n- `event = 'Button Clicked' and type = 'track'`\n- `match(context.library.version, '1.*')`\n- `type = 'identify' or type = 'track'`\n\nAnd the following FQL statements will evaluate to `\"false\"`, causing the filter to be skipped:\n\n- `event = 'Screen Tapped'`\n- `context.path.path = '/login'`\n- `match (context.library.version, '2.*')`\n\nFor more detailed documentation including a list of all operators and functions, see the [FQL Documentation](https://segment.com/docs/api/public-api/fql).\n\n## Universal filters\n\nTo apply a filter to all events going to a space, you can supply an `\"if\"` statement of `\"all\"`. All actions in that filter will be applied to events before being delivered to that space.\n\n## Limits\n\nFilters currently have the following limits:\n\n- **Each Space may have no more than 10 filters**.\n\nIf you would like any of these limits lifted, please reach out to Segment at friends@segment.com.\n\n## API models\n\n### Filter\n\n| Attribute     | Type    | Description                                                                                                                                        |\n| ------------- | ------- | -------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id            | string  | The unique identifier of this filter.                                                                                                              |\n| workspaceId   | string  | The workspace id of this filter.                                                                                                                   |\n| integrationId | string  | The space id of this filter.                                                                                                                       |\n| name          | string  | The name of this filter.                                                                                                                           |\n| enabled       | boolean | Whether or not this filter should be active.                                                                                                       |\n| title         | string  | A human-readable title for this filter.                                                                                                            |\n| description   | string  | A longer human-readable description of this filter.                                                                                                |\n| if            | string  | A FQL statement that causes this filter’s action to be applied if it evaluates to true. `\"all\"` will cause the filter to be applied to all events. |\n| drop          | boolean | The `drop` action will cause the event to be dropped and not sent to the space if the \"if\" statement evaluates to true.                            |\n\n## Preview filter\n\nTo simulate the application of a Space filter to a provided JSON payload, please use the [Preview Destination Filter endpoint](https://docs.segmentapis.com/tag/Destination-Filters#operation/previewDestinationFilter).\n"
    },
    {
      "name": "Functions",
      "description": "Functions let you create your own Sources and Destinations directly within your Workspace to bring new types of data into Segment and send data to new tools with JavaScript - no extra infrastructure required.\n\n## Migrate from the Config API\n\nThe [getFunction endpoint](https://reference.segmentapis.com/#7963d88e-2e1b-41eb-9fa2-66a113c12f1c) returns the following fields:\n\n| Config API    | Public API     |\n| ------------- | -------------- |\n| `id`          | `id`           |\n| `type`        | `resourceType` |\n| `created_at`  | `createdAt`    |\n| `created_by`  | `createdBy`    |\n| `description` | `description`  |\n| `logo_url`    | `logoUrl`      |\n| `catalog_id`  | `catalogId`    |\n"
    },
    {
      "name": "Labels",
      "description": "Workspace owners can use Labels to grant users access to groups of resources. When you add a Label to a Source or Personas Space, any users to whom you assign that Label gain access to those resources.\n\nTo create or configure labels, go to the Labels tab in your Workspace settings. Only Workspace Owners can manage labels for the entire Workspace.\n"
    },
    {
      "name": "Profiles Sync",
      "description": "A Profiles Sync Warehouse is a central repository of data collected from your workspace. It is what commonly comes to mind when you think about a relational database: structured data that fits into rows and columns.\n\nUsing Segment’s Public API, you can create, delete, update, and list Spaces Warehouses connections.\n"
    },
    {
      "name": "Transformations",
      "description": "With Transformations, you can change data as it flows through Segment to:\n- Correct bad data\n- Customize data for a specific destination\n- Align events with your tracking plan\n\nWith Segment's Public API, you can use Transformations for several use cases:\n1. Rename Track events\n- Use `newEventName` in the `createTransformation` or `updateTransformation` API call.\n2. Rename a property (Track events) or a trait (Identify or Group events)\n- Use `propertyRenames` in the `createTransformation` or `updateTransformation` API call.\n3. Update a property value to a different static value or add a new property and set a static value\n- Use `propertyValueTransformations` in the `createTransformation` or `updateTransformation` API call.\n- Segment currently supports setting static values for top-level fields with `propertyValueTransformations`. However, Segment doesn't support changing fields outside the properties or traits object with `propertyRenames`.\n\nVisit [Segment's Transformations docs](https://segment.com/docs/protocols/transform/) to learn more.\n"
    },
    {
      "name": "Testing",
      "description": "The `echo` endpoint lets you test Segment Public API connectivity, responses, versioning, and error handling.\n"
    },
    {
      "name": "Selective Sync",
      "description": "Warehouse Selective Sync allows you to manage the data that you send to your Warehouses. You can use this feature to stop syncing specific events (also known as collections) or properties that aren’t relevant, and may slow down your Warehouse syncs.\n"
    },
    {
      "name": "API Calls",
      "description": "The Segment Public API lets you get cumulative API call counts for a usage period.\n"
    },
    {
      "name": "Monthly Tracked Users",
      "description": ""
    },
    {
      "name": "Catalog",
      "description": "These endpoints let you list all the Sources, Destinations, and Destination settings that Segment supports.\n\n## Migrate from the Config API\n\nLike the Segment Public API, the Config API has endpoints to navigate the catalog of Integrations supported by Segment. See the sections below for some key differences:\n\n### Source catalog items\n\n| Config API  | Public API                                      |\n| ----------- | ----------------------------------------------- |\n| name        | See note on names vs IDs in the migration guide |\n| displayName | `name`                                          |\n| description | `description`                                   |\n| categories  | `categories`                                    |\n| logos       | `logos`                                         |\n| type        | Removed                                         |\n\n### Destination catalog items\n\n| Config API                 | Public API                                      |\n| -------------------------- | ----------------------------------------------- |\n| browserUnbundlingPublic    | `supportedFeatures.browserUnbundlingPublic`     |\n| browserUnbundlingSupported | `supportedFeatures.browserUnbundling`           |\n| categories                 | `categories`                                    |\n| components                 | `components`                                    |\n| description                | `description`                                   |\n| displayName                | `name`,                                         |\n| id                         | `id`                                            |\n| logos                      | `logos`                                         |\n| methods                    | `supportedMethods`                              |\n| name                       | See note on names vs IDs in the migration guide |\n| platforms                  | `supportedPlatforms`                            |\n| previousNames              | `previousNames`                                 |\n| settings                   | `options`                                       |\n| slug                       | `slug`                                          |\n| status                     | `status`                                        |\n| type                       | Not returned                                    |\n| website                    | `website`                                       |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Delivery Overview",
      "description": "With Delivery Overview Public API, customers can query their data directly instead of going through the Segment app. They can inspect their data with more granularity by specifying custom time periods, and grouping or filtering their data by discard reasons, event names, event types, app versions, and other fields specific to Streaming Destinations, Actions Destinations, or Linked Audiences.\n\nPublic API support for Storage Destinations and RETL is currently in development.\n"
    },
    {
      "name": "Events",
      "description": ""
    },
    {
      "name": "Workspaces",
      "description": "A Workspace is a group of Sources that you administer and Segment bills together. Workspaces help companies manage access for different users and data Sources and let you collaborate with team members, add permissions, and share Sources across your team using a shared billing account.\n\nWhen you first log in to your Segment account, you can create a new Workspace, or choose to log into an existing Workspace if your account is part of an existing organization.\n\nAs the Segment Public API scopes tokens to a Workspace, all operations within the API are also limited to the Workspace to which that token belongs.\n\n## Migrate from the Config API\n\nLike the Segment Public API, the Config API has one endpoint to retrieve details about a Workspace. The [getWorkspace endpoint](https://reference.segmentapis.com/#7ed2968b-c4a5-4cfb-b4bf-7d28c7b38bd2) returns the following fields:\n\n| Config API     | Public API                           |\n| -------------- | ------------------------------------ |\n| `create_time`  | Not returned                         |\n| `display_name` | `name`                               |\n| `id`           | `id`                                 |\n| `name`         | `slug` (`workspace/` prefix removed) |\n\nTo migrate, replace any use of the Config API endpoints with the Segment Public API counterparts, using the field mappings in the table above.\n"
    },
    {
      "name": "Audit Trail",
      "description": "Segment offers an in-app 90 day Audit Trail for Business Tier accounts.\n\nThe Segment Public API lets you automate consuming these Audit Trail events.\n"
    },
    {
      "name": "IAM Roles",
      "description": "A role gives a user access to resources within a Workspace. Roles are additive, and can combine to configure a custom policy for a Team Member or a Group. A policy is at least one role plus one resource applied to an individual user or group.\n"
    }
  ],
  "paths": {
    "/spaces/{spaceId}/audiences/{audienceId}/{connectionId}/activations": {
      "post": {
        "summary": "Add Activation to Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spa_9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "audienceId",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "connectionId",
            "required": true,
            "example": "ii_123456789",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates Activation.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Activation Created` event in the [audit trail](/tag/Audit-Trail).\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addActivationToAudience",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddActivationToAudienceAlphaInput"
              },
              "example": {
                "versionSchema": "v1",
                "workspaceId": "LF4DPqW",
                "destinationId": "684758860892086596310ac",
                "enabled": true,
                "hasEnabledResync": false,
                "emitEntityContext": "on_profile_change",
                "eventEmitter": {
                  "name": "Test Event Emitter",
                  "description": "Test event emitter for activation"
                },
                "subscription": {
                  "name": "Test Subscription",
                  "trigger": "audienceEntered"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddActivationToAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "activation": {
                      "id": "act_987654321",
                      "enabled": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences",
          "Activations"
        ],
        "tags": [
          "Activations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.activations.addActivationToAudience('spa_9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS', 'ii_123456789', {\n      versionSchema: 'v1',\n      workspaceId: 'LF4DPqW',\n      destinationId: '684758860892086596310ac',\n      enabled: true,\n      hasEnabledResync: false,\n      emitEntityContext: 'on_profile_change',\n      eventEmitter: { name: 'Test Event Emitter', description: 'Test event emitter for activation' },\n      subscription: { name: 'Test Subscription', trigger: 'audienceEntered' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ActivationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ActivationsApi apiInstance = new ActivationsApi(defaultClient);\n        String spaceId = \"spa_9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String audienceId = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String connectionId = \"ii_123456789\"; // String | \n        AddActivationToAudienceAlphaInput addActivationToAudienceAlphaInput = new AddActivationToAudienceAlphaInput(); // AddActivationToAudienceAlphaInput | \n        try {\n            AddActivationToAudience200Response result = apiInstance.addActivationToAudience(spaceId, audienceId, connectionId, addActivationToAudienceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ActivationsApi#addActivationToAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_activation_to_audience200_response import AddActivationToAudience200Response\nfrom segment_public_api.models.add_activation_to_audience_alpha_input import AddActivationToAudienceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ActivationsApi(api_client)\n    space_id = 'spa_9aQ1Lj62S4bomZKLF4DPqW' # str | \n    audience_id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    connection_id = 'ii_123456789' # str | \n    add_activation_to_audience_alpha_input = {\"versionSchema\":\"v1\",\"workspaceId\":\"LF4DPqW\",\"destinationId\":\"684758860892086596310ac\",\"enabled\":true,\"hasEnabledResync\":false,\"emitEntityContext\":\"on_profile_change\",\"eventEmitter\":{\"name\":\"Test Event Emitter\",\"description\":\"Test event emitter for activation\"},\"subscription\":{\"name\":\"Test Subscription\",\"trigger\":\"audienceEntered\"}} # AddActivationToAudienceAlphaInput | \n\n    try:\n        # Add Activation to Audience\n        api_response = api_instance.add_activation_to_audience(space_id, audience_id, connection_id, add_activation_to_audience_alpha_input)\n        print(\"The response of ActivationsApi->add_activation_to_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ActivationsApi->add_activation_to_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spa_9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    audienceId := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    connectionId := \"ii_123456789\" // string | \n    addActivationToAudienceAlphaInput := *api.NewAddActivationToAudienceAlphaInput(\"VersionSchema_example\", \"WorkspaceId_example\", \"DestinationId_example\", interface{}(123), interface{}(123)) // AddActivationToAudienceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ActivationsAPI.AddActivationToAudience(ctx, spaceId, audienceId, connectionId).AddActivationToAudienceAlphaInput(addActivationToAudienceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ActivationsAPI.AddActivationToAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddActivationToAudience`: AddActivationToAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ActivationsAPI.AddActivationToAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}": {
      "post": {
        "summary": "Add Connection from Source to Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Connects a Source to a Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Modified` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "addConnectionFromSourceToWarehouse",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddConnectionFromSourceToWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.addConnectionFromSourceToWarehouse('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        try {\n            AddConnectionFromSourceToWarehouse201Response result = apiInstance.addConnectionFromSourceToWarehouse(warehouseId, sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#addConnectionFromSourceToWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_connection_from_source_to_warehouse201_response import AddConnectionFromSourceToWarehouse201Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | \n\n    try:\n        # Add Connection from Source to Warehouse\n        api_response = api_instance.add_connection_from_source_to_warehouse(warehouse_id, source_id)\n        print(\"The response of WarehousesApi->add_connection_from_source_to_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->add_connection_from_source_to_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.AddConnectionFromSourceToWarehouse(ctx, warehouseId, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.AddConnectionFromSourceToWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddConnectionFromSourceToWarehouse`: AddConnectionFromSourceToWarehouse201Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.AddConnectionFromSourceToWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Source Connection from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Disconnects a Source from a Warehouse.",
        "operationId": "removeSourceConnectionFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceConnectionFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.removeSourceConnectionFromWarehouse('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        try {\n            RemoveSourceConnectionFromWarehouse200Response result = apiInstance.removeSourceConnectionFromWarehouse(warehouseId, sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#removeSourceConnectionFromWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_source_connection_from_warehouse200_response import RemoveSourceConnectionFromWarehouse200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | \n\n    try:\n        # Remove Source Connection from Warehouse\n        api_response = api_instance.remove_source_connection_from_warehouse(warehouse_id, source_id)\n        print(\"The response of WarehousesApi->remove_source_connection_from_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->remove_source_connection_from_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.RemoveSourceConnectionFromWarehouse(ctx, warehouseId, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.RemoveSourceConnectionFromWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveSourceConnectionFromWarehouse`: RemoveSourceConnectionFromWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.RemoveSourceConnectionFromWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{audienceId}/destinations": {
      "post": {
        "summary": "Add Destination to Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spa_9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "audienceId",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a Destination to an Audience.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Destination Added into Audience` event in the [audit trail](/tag/Audit-Trail).",
        "operationId": "addDestinationToAudience",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddDestinationToAudienceAlphaInput"
              },
              "example": {
                "versionSchema": "v1",
                "workspaceId": "LF4DPqW",
                "destination": {
                  "id": "684758860892086596310ac",
                  "type": "destination"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddDestinationToAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connection": {
                      "id": "ii_123456789"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences",
          "Activations"
        ],
        "tags": [
          "Activations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.activations.addDestinationToAudience('spa_9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS', {\n      versionSchema: 'v1',\n      workspaceId: 'LF4DPqW',\n      destination: { id: '684758860892086596310ac', type: 'destination' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ActivationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ActivationsApi apiInstance = new ActivationsApi(defaultClient);\n        String spaceId = \"spa_9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String audienceId = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        AddDestinationToAudienceAlphaInput addDestinationToAudienceAlphaInput = new AddDestinationToAudienceAlphaInput(); // AddDestinationToAudienceAlphaInput | \n        try {\n            AddDestinationToAudience200Response result = apiInstance.addDestinationToAudience(spaceId, audienceId, addDestinationToAudienceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ActivationsApi#addDestinationToAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_destination_to_audience200_response import AddDestinationToAudience200Response\nfrom segment_public_api.models.add_destination_to_audience_alpha_input import AddDestinationToAudienceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ActivationsApi(api_client)\n    space_id = 'spa_9aQ1Lj62S4bomZKLF4DPqW' # str | \n    audience_id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    add_destination_to_audience_alpha_input = {\"versionSchema\":\"v1\",\"workspaceId\":\"LF4DPqW\",\"destination\":{\"id\":\"684758860892086596310ac\",\"type\":\"destination\"}} # AddDestinationToAudienceAlphaInput | \n\n    try:\n        # Add Destination to Audience\n        api_response = api_instance.add_destination_to_audience(space_id, audience_id, add_destination_to_audience_alpha_input)\n        print(\"The response of ActivationsApi->add_destination_to_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ActivationsApi->add_destination_to_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spa_9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    audienceId := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    addDestinationToAudienceAlphaInput := *api.NewAddDestinationToAudienceAlphaInput(\"VersionSchema_example\", \"WorkspaceId_example\", *api.NewDestinationInput(\"Id_example\", \"Type_example\")) // AddDestinationToAudienceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ActivationsAPI.AddDestinationToAudience(ctx, spaceId, audienceId).AddDestinationToAudienceAlphaInput(addDestinationToAudienceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ActivationsAPI.AddDestinationToAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddDestinationToAudience`: AddDestinationToAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ActivationsAPI.AddDestinationToAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/labels": {
      "post": {
        "summary": "Add Labels to Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds an existing label to a Source.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "addLabelsToSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLabelsToSourceAlphaInput"
              },
              "example": {
                "labels": [
                  {
                    "key": "type",
                    "value": "web"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      },
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      },
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      },
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddLabelsToSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "type",
                        "value": "web"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.addLabelsToSource('rh5BDZp6QDHvXFCkibm1pR', { labels: [{ key: 'type', value: 'web' }] }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        AddLabelsToSourceV1Input addLabelsToSourceV1Input = new AddLabelsToSourceV1Input(); // AddLabelsToSourceV1Input | \n        try {\n            AddLabelsToSource200Response result = apiInstance.addLabelsToSource(sourceId, addLabelsToSourceV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#addLabelsToSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_labels_to_source200_response import AddLabelsToSource200Response\nfrom segment_public_api.models.add_labels_to_source_v1_input import AddLabelsToSourceV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | \n    add_labels_to_source_v1_input = {\"labels\":[{\"key\":\"type\",\"value\":\"web\"}]} # AddLabelsToSourceV1Input | \n\n    try:\n        # Add Labels to Source\n        api_response = api_instance.add_labels_to_source(source_id, add_labels_to_source_v1_input)\n        print(\"The response of SourcesApi->add_labels_to_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->add_labels_to_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | \n    addLabelsToSourceV1Input := *api.NewAddLabelsToSourceV1Input([]api.LabelV1{*api.NewLabelV1(\"Key_example\", \"Value_example\")}) // AddLabelsToSourceV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.AddLabelsToSource(ctx, sourceId).AddLabelsToSourceV1Input(addLabelsToSourceV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.AddLabelsToSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddLabelsToSource`: AddLabelsToSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.AddLabelsToSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "put": {
        "summary": "Replace Labels in Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replaces all labels in a Source.",
        "operationId": "replaceLabelsInSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Input"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceLabelsInSourceAlphaInput"
              },
              "example": {
                "labels": [
                  {
                    "key": "environment",
                    "value": "prod"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceLabelsInSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "prod"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.sources.replaceLabelsInSource('rh5BDZp6QDHvXFCkibm1pR', { labels: [{ key: 'environment', value: 'prod' }] })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        ReplaceLabelsInSourceV1Input replaceLabelsInSourceV1Input = new ReplaceLabelsInSourceV1Input(); // ReplaceLabelsInSourceV1Input | \n        try {\n            ReplaceLabelsInSource200Response result = apiInstance.replaceLabelsInSource(sourceId, replaceLabelsInSourceV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#replaceLabelsInSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_labels_in_source200_response import ReplaceLabelsInSource200Response\nfrom segment_public_api.models.replace_labels_in_source_v1_input import ReplaceLabelsInSourceV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | \n    replace_labels_in_source_v1_input = {\"labels\":[{\"key\":\"environment\",\"value\":\"prod\"}]} # ReplaceLabelsInSourceV1Input | \n\n    try:\n        # Replace Labels in Source\n        api_response = api_instance.replace_labels_in_source(source_id, replace_labels_in_source_v1_input)\n        print(\"The response of SourcesApi->replace_labels_in_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->replace_labels_in_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | \n    replaceLabelsInSourceV1Input := *api.NewReplaceLabelsInSourceV1Input([]api.LabelV1{*api.NewLabelV1(\"Key_example\", \"Value_example\")}) // ReplaceLabelsInSourceV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.ReplaceLabelsInSource(ctx, sourceId).ReplaceLabelsInSourceV1Input(replaceLabelsInSourceV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.ReplaceLabelsInSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplaceLabelsInSource`: ReplaceLabelsInSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.ReplaceLabelsInSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/users/{userId}/permissions": {
      "post": {
        "summary": "Add Permissions to User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of access permissions to a user.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Policy Created\n* User Policy Updated\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addPermissionsToUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vbJcxowv7x1gyOp45ObHFqoQ",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vbJcxowv7x1gyOp45ObHFqoQ",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vZssGHwzBpVGk7KrMu5TDlAI",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "55P3eB1tNooNfXyitxYC9C",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "sgJDWk3K21k6LE3tLU9nRK",
                        "subjectType": "user",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamUsers.addPermissionsToUser('sgJDWk3K21k6LE3tLU9nRK', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        String userId = \"sgJDWk3K21k6LE3tLU9nRK\"; // String | \n        AddPermissionsToUserV1Input addPermissionsToUserV1Input = new AddPermissionsToUserV1Input(); // AddPermissionsToUserV1Input | \n        try {\n            AddPermissionsToUser200Response result = apiInstance.addPermissionsToUser(userId, addPermissionsToUserV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#addPermissionsToUser\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_permissions_to_user200_response import AddPermissionsToUser200Response\nfrom segment_public_api.models.add_permissions_to_user_v1_input import AddPermissionsToUserV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    user_id = 'sgJDWk3K21k6LE3tLU9nRK' # str | \n    add_permissions_to_user_v1_input = {\"permissions\":[{\"roleId\":\"1WDUuRLxv84rrfCNUwvkrRtkxnS\",\"resources\":[{\"id\":\"9aQ1Lj62S4bomZKLF4DPqW\",\"type\":\"WORKSPACE\"}]}]} # AddPermissionsToUserV1Input | \n\n    try:\n        # Add Permissions to User\n        api_response = api_instance.add_permissions_to_user(user_id, add_permissions_to_user_v1_input)\n        print(\"The response of IAMUsersApi->add_permissions_to_user:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->add_permissions_to_user: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userId := \"sgJDWk3K21k6LE3tLU9nRK\" // string | \n    addPermissionsToUserV1Input := *api.NewAddPermissionsToUserV1Input([]api.PermissionInputV1{*api.NewPermissionInputV1(\"RoleId_example\", []api.PermissionResourceV1{*api.NewPermissionResourceV1(\"Id_example\", \"Type_example\")})}) // AddPermissionsToUserV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.AddPermissionsToUser(ctx, userId).AddPermissionsToUserV1Input(addPermissionsToUserV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.AddPermissionsToUser``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddPermissionsToUser`: AddPermissionsToUser200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.AddPermissionsToUser`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "put": {
        "summary": "Replace Permissions for User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the list of access permissions for a user.\n\n\n\n• When called, this endpoint may generate the `Policy Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replacePermissionsForUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamUsers.replacePermissionsForUser('sgJDWk3K21k6LE3tLU9nRK', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        String userId = \"sgJDWk3K21k6LE3tLU9nRK\"; // String | \n        ReplacePermissionsForUserV1Input replacePermissionsForUserV1Input = new ReplacePermissionsForUserV1Input(); // ReplacePermissionsForUserV1Input | \n        try {\n            ReplacePermissionsForUser200Response result = apiInstance.replacePermissionsForUser(userId, replacePermissionsForUserV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#replacePermissionsForUser\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_permissions_for_user200_response import ReplacePermissionsForUser200Response\nfrom segment_public_api.models.replace_permissions_for_user_v1_input import ReplacePermissionsForUserV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    user_id = 'sgJDWk3K21k6LE3tLU9nRK' # str | \n    replace_permissions_for_user_v1_input = {\"permissions\":[{\"roleId\":\"1WDUuRLxv84rrfCNUwvkrRtkxnS\",\"resources\":[{\"id\":\"9aQ1Lj62S4bomZKLF4DPqW\",\"type\":\"WORKSPACE\"}]}]} # ReplacePermissionsForUserV1Input | \n\n    try:\n        # Replace Permissions for User\n        api_response = api_instance.replace_permissions_for_user(user_id, replace_permissions_for_user_v1_input)\n        print(\"The response of IAMUsersApi->replace_permissions_for_user:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->replace_permissions_for_user: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userId := \"sgJDWk3K21k6LE3tLU9nRK\" // string | \n    replacePermissionsForUserV1Input := *api.NewReplacePermissionsForUserV1Input([]api.PermissionInputV1{*api.NewPermissionInputV1(\"RoleId_example\", []api.PermissionResourceV1{*api.NewPermissionResourceV1(\"Id_example\", \"Type_example\")})}) // ReplacePermissionsForUserV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.ReplacePermissionsForUser(ctx, userId).ReplacePermissionsForUserV1Input(replacePermissionsForUserV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.ReplacePermissionsForUser``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplacePermissionsForUser`: ReplacePermissionsForUser200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.ReplacePermissionsForUser`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/groups/{userGroupId}/permissions": {
      "post": {
        "summary": "Add Permissions to User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of access permissions to a user group.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Policy Created\n* User Group Policy Updated\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addPermissionsToUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vcbHoTzptxMbf7CMQTfNBkPt",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vcbHoTzptxMbf7CMQTfNBkPt",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vbVFc3U3GCgw9X7P6obb69Ti",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddPermissionsToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "policyId": "2c0vZxFj88N9xHW8Qb2BY5OpL4f",
                        "roleName": "Workspace Owner",
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "subjectId": "bBABwqbaDf2QdwTbW8bNEm",
                        "subjectType": "group",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamGroups.addPermissionsToUserGroup('bBABwqbaDf2QdwTbW8bNEm', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        AddPermissionsToUserGroupV1Input addPermissionsToUserGroupV1Input = new AddPermissionsToUserGroupV1Input(); // AddPermissionsToUserGroupV1Input | \n        try {\n            AddPermissionsToUserGroup200Response result = apiInstance.addPermissionsToUserGroup(userGroupId, addPermissionsToUserGroupV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#addPermissionsToUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_permissions_to_user_group200_response import AddPermissionsToUserGroup200Response\nfrom segment_public_api.models.add_permissions_to_user_group_v1_input import AddPermissionsToUserGroupV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    add_permissions_to_user_group_v1_input = {\"permissions\":[{\"roleId\":\"1WDUuRLxv84rrfCNUwvkrRtkxnS\",\"resources\":[{\"id\":\"9aQ1Lj62S4bomZKLF4DPqW\",\"type\":\"WORKSPACE\"}]}]} # AddPermissionsToUserGroupV1Input | \n\n    try:\n        # Add Permissions to User Group\n        api_response = api_instance.add_permissions_to_user_group(user_group_id, add_permissions_to_user_group_v1_input)\n        print(\"The response of IAMGroupsApi->add_permissions_to_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->add_permissions_to_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    addPermissionsToUserGroupV1Input := *api.NewAddPermissionsToUserGroupV1Input([]api.PermissionInputV1{*api.NewPermissionInputV1(\"RoleId_example\", []api.PermissionResourceV1{*api.NewPermissionResourceV1(\"Id_example\", \"Type_example\")})}) // AddPermissionsToUserGroupV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.AddPermissionsToUserGroup(ctx, userGroupId).AddPermissionsToUserGroupV1Input(addPermissionsToUserGroupV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.AddPermissionsToUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddPermissionsToUserGroup`: AddPermissionsToUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.AddPermissionsToUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "put": {
        "summary": "Replace Permissions for User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the list of access permissions for a user group.\n\n\n\n• When called, this endpoint may generate the `Policy Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replacePermissionsForUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Input"
              },
              "example": {
                "permissions": [
                  {
                    "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                    "resources": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "type": "WORKSPACE"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplacePermissionsForUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "roleName": "Workspace Owner",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE",
                            "labels": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamGroups.replacePermissionsForUserGroup('bBABwqbaDf2QdwTbW8bNEm', {\n      permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        ReplacePermissionsForUserGroupV1Input replacePermissionsForUserGroupV1Input = new ReplacePermissionsForUserGroupV1Input(); // ReplacePermissionsForUserGroupV1Input | \n        try {\n            ReplacePermissionsForUserGroup200Response result = apiInstance.replacePermissionsForUserGroup(userGroupId, replacePermissionsForUserGroupV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#replacePermissionsForUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_permissions_for_user_group200_response import ReplacePermissionsForUserGroup200Response\nfrom segment_public_api.models.replace_permissions_for_user_group_v1_input import ReplacePermissionsForUserGroupV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    replace_permissions_for_user_group_v1_input = {\"permissions\":[{\"roleId\":\"1WDUuRLxv84rrfCNUwvkrRtkxnS\",\"resources\":[{\"id\":\"9aQ1Lj62S4bomZKLF4DPqW\",\"type\":\"WORKSPACE\"}]}]} # ReplacePermissionsForUserGroupV1Input | \n\n    try:\n        # Replace Permissions for User Group\n        api_response = api_instance.replace_permissions_for_user_group(user_group_id, replace_permissions_for_user_group_v1_input)\n        print(\"The response of IAMGroupsApi->replace_permissions_for_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->replace_permissions_for_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    replacePermissionsForUserGroupV1Input := *api.NewReplacePermissionsForUserGroupV1Input([]api.PermissionInputV1{*api.NewPermissionInputV1(\"RoleId_example\", []api.PermissionResourceV1{*api.NewPermissionResourceV1(\"Id_example\", \"Type_example\")})}) // ReplacePermissionsForUserGroupV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.ReplacePermissionsForUserGroup(ctx, userGroupId).ReplacePermissionsForUserGroupV1Input(replacePermissionsForUserGroupV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.ReplacePermissionsForUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplacePermissionsForUserGroup`: ReplacePermissionsForUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.ReplacePermissionsForUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/tracking-plans/{trackingPlanId}/sources": {
      "post": {
        "summary": "Add Source to Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Connects a Source to a Tracking Plan.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "addSourceToTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Input"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddSourceToTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.addSourceToTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', { sourceId: 'qQEHquLrjRDN9j1ByrChyn' })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        AddSourceToTrackingPlanV1Input addSourceToTrackingPlanV1Input = new AddSourceToTrackingPlanV1Input(); // AddSourceToTrackingPlanV1Input | \n        try {\n            AddSourceToTrackingPlan200Response result = apiInstance.addSourceToTrackingPlan(trackingPlanId, addSourceToTrackingPlanV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#addSourceToTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_source_to_tracking_plan200_response import AddSourceToTrackingPlan200Response\nfrom segment_public_api.models.add_source_to_tracking_plan_v1_input import AddSourceToTrackingPlanV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    add_source_to_tracking_plan_v1_input = {\"sourceId\":\"qQEHquLrjRDN9j1ByrChyn\"} # AddSourceToTrackingPlanV1Input | \n\n    try:\n        # Add Source to Tracking Plan\n        api_response = api_instance.add_source_to_tracking_plan(tracking_plan_id, add_source_to_tracking_plan_v1_input)\n        print(\"The response of TrackingPlansApi->add_source_to_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->add_source_to_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    addSourceToTrackingPlanV1Input := *api.NewAddSourceToTrackingPlanV1Input(\"SourceId_example\") // AddSourceToTrackingPlanV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.AddSourceToTrackingPlan(ctx, trackingPlanId).AddSourceToTrackingPlanV1Input(addSourceToTrackingPlanV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.AddSourceToTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddSourceToTrackingPlan`: AddSourceToTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.AddSourceToTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Sources from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Lists Sources connected to a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\n\nThis endpoint requires the user to have at least the following permission(s): \n * Source Read-only\n * Tracking Plan Read-only",
        "operationId": "listSourcesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.listSourcesFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination options.  This parameter exists in v1.\n        try {\n            ListSourcesFromTrackingPlan200Response result = apiInstance.listSourcesFromTrackingPlan(trackingPlanId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#listSourcesFromTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_sources_from_tracking_plan200_response import ListSourcesFromTrackingPlan200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    try:\n        # List Sources from Tracking Plan\n        api_response = api_instance.list_sources_from_tracking_plan(tracking_plan_id, pagination=pagination)\n        print(\"The response of TrackingPlansApi->list_sources_from_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->list_sources_from_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.ListSourcesFromTrackingPlan(ctx, trackingPlanId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.ListSourcesFromTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSourcesFromTrackingPlan`: ListSourcesFromTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.ListSourcesFromTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Source from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The id of the Source associated with the Tracking Plan.\n\nConfig API note: analogous to `sourceName`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The id of the Source associated with the Tracking Plan.\n\nConfig API note: analogous to `sourceName`.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "qQEHquLrjRDN9j1ByrChyn"
          }
        ],
        "deprecated": false,
        "description": "Disconnects a Source from a Tracking Plan.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeSourceFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSourceFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.removeSourceFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', 'qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | The id of the Source associated with the Tracking Plan.  Config API note: analogous to `sourceName`.  This parameter exists in v1.\n        try {\n            RemoveSourceFromTrackingPlan200Response result = apiInstance.removeSourceFromTrackingPlan(trackingPlanId, sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#removeSourceFromTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_source_from_tracking_plan200_response import RemoveSourceFromTrackingPlan200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | The id of the Source associated with the Tracking Plan.  Config API note: analogous to `sourceName`.  This parameter exists in v1.\n\n    try:\n        # Remove Source from Tracking Plan\n        api_response = api_instance.remove_source_from_tracking_plan(tracking_plan_id, source_id)\n        print(\"The response of TrackingPlansApi->remove_source_from_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->remove_source_from_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | The id of the Source associated with the Tracking Plan.  Config API note: analogous to `sourceName`.  This parameter exists in v1.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.RemoveSourceFromTrackingPlan(ctx, trackingPlanId).SourceId(sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.RemoveSourceFromTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveSourceFromTrackingPlan`: RemoveSourceFromTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.RemoveSourceFromTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/groups/{userGroupId}/users": {
      "post": {
        "summary": "Add Users to User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Adds a list of users or invites to a user group.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Subjects Added to Group\n* User Added To User Group\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "addUsersToUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUsersToUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddUsersToUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.addUsersToUserGroup('bBABwqbaDf2QdwTbW8bNEm', { emails: ['foo@example.com'] }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        AddUsersToUserGroupV1Input addUsersToUserGroupV1Input = new AddUsersToUserGroupV1Input(); // AddUsersToUserGroupV1Input | \n        try {\n            AddUsersToUserGroup200Response result = apiInstance.addUsersToUserGroup(userGroupId, addUsersToUserGroupV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#addUsersToUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.add_users_to_user_group200_response import AddUsersToUserGroup200Response\nfrom segment_public_api.models.add_users_to_user_group_v1_input import AddUsersToUserGroupV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    add_users_to_user_group_v1_input = {\"emails\":[\"foo@example.com\"]} # AddUsersToUserGroupV1Input | \n\n    try:\n        # Add Users to User Group\n        api_response = api_instance.add_users_to_user_group(user_group_id, add_users_to_user_group_v1_input)\n        print(\"The response of IAMGroupsApi->add_users_to_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->add_users_to_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    addUsersToUserGroupV1Input := *api.NewAddUsersToUserGroupV1Input([]string{\"Emails_example\"}) // AddUsersToUserGroupV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.AddUsersToUserGroup(ctx, userGroupId).AddUsersToUserGroupV1Input(addUsersToUserGroupV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.AddUsersToUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `AddUsersToUserGroup`: AddUsersToUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.AddUsersToUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Users from User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for members of a group.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns users belonging to a user group.",
        "operationId": "listUsersFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "email": "papi@segment.com",
                        "name": ""
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.listUsersFromUserGroup('bBABwqbaDf2QdwTbW8bNEm'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination for members of a group.  This parameter exists in v1.\n        try {\n            ListUsersFromUserGroup200Response result = apiInstance.listUsersFromUserGroup(userGroupId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#listUsersFromUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_users_from_user_group200_response import ListUsersFromUserGroup200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination for members of a group.  This parameter exists in v1. (optional)\n\n    try:\n        # List Users from User Group\n        api_response = api_instance.list_users_from_user_group(user_group_id, pagination=pagination)\n        print(\"The response of IAMGroupsApi->list_users_from_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->list_users_from_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination for members of a group.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.ListUsersFromUserGroup(ctx, userGroupId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.ListUsersFromUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListUsersFromUserGroup`: ListUsersFromUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.ListUsersFromUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/messaging-subscriptions/batch": {
      "post": {
        "summary": "Batch Query Messaging Subscriptions for Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "\n<div style=\"background-color: #fff3cd; border: 1px solid #ffc107; border-radius: 6px; padding: 16px; margin: 16px 0; color: #856404; display: flex; align-items: center; gap: 12px; line-height: 1.5;\">\n  <span style=\"color: #ff9800; font-size: 16px; flex-shrink: 0;\">⚠️</span>\n  <div style=\"line-height: 1.5;\">\n    <div style=\"font-weight: 600; font-size: 14px; margin-bottom: 6px;\">\n      Engage Premier features will no longer be available after December 15, 2025.\n    </div>\n    <div style=\"font-size: 13px;\">\n      This API will be deactivated after this date.\n    </div>\n  </div>\n</div>\nGet Messaging Subscriptions for space.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "batchQueryMessagingSubscriptionsForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/BatchQueryMessagingSubscriptionsForSpaceAlphaInput"
              },
              "example": {
                "subscriptions": [
                  {
                    "key": "jacob@exmple.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "jane@exmple.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "pgibbonsexample.com",
                    "type": "EMAIL"
                  },
                  {
                    "key": "+12162226233",
                    "type": "SMS"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchQueryMessagingSubscriptionsForSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "successes": [
                      {
                        "key": "jacob@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "key": "jane@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "groups": [
                          {
                            "name": "promotions",
                            "id": "grp_id",
                            "status": "SUBSCRIBED",
                            "updatedAt": "2006-01-02T15:04:05.000Z"
                          }
                        ]
                      },
                      {
                        "key": "2162226233",
                        "type": "SMS",
                        "status": "DID_NOT_SUBSCRIBE",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "failures": [
                      {
                        "key": "pgibbonsexample.com",
                        "type": "EMAIL",
                        "errors": [
                          {
                            "code": "INVALID_EMAIL",
                            "message": "Email is not valid"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.spaces.batchQueryMessagingSubscriptionsForSpace('9aQ1Lj62S4bomZKLF4DPqW', {\n      subscriptions: [\n        { key: 'jacob@exmple.com', type: 'EMAIL' },\n        { key: 'jane@exmple.com', type: 'EMAIL' },\n        { key: 'pgibbonsexample.com', type: 'EMAIL' },\n        { key: '+12162226233', type: 'SMS' },\n      ],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpacesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpacesApi apiInstance = new SpacesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        BatchQueryMessagingSubscriptionsForSpaceAlphaInput batchQueryMessagingSubscriptionsForSpaceAlphaInput = new BatchQueryMessagingSubscriptionsForSpaceAlphaInput(); // BatchQueryMessagingSubscriptionsForSpaceAlphaInput | \n        try {\n            BatchQueryMessagingSubscriptionsForSpace200Response result = apiInstance.batchQueryMessagingSubscriptionsForSpace(spaceId, batchQueryMessagingSubscriptionsForSpaceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpacesApi#batchQueryMessagingSubscriptionsForSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.batch_query_messaging_subscriptions_for_space200_response import BatchQueryMessagingSubscriptionsForSpace200Response\nfrom segment_public_api.models.batch_query_messaging_subscriptions_for_space_alpha_input import BatchQueryMessagingSubscriptionsForSpaceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpacesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    batch_query_messaging_subscriptions_for_space_alpha_input = {\"subscriptions\":[{\"key\":\"jacob@exmple.com\",\"type\":\"EMAIL\"},{\"key\":\"jane@exmple.com\",\"type\":\"EMAIL\"},{\"key\":\"pgibbonsexample.com\",\"type\":\"EMAIL\"},{\"key\":\"+12162226233\",\"type\":\"SMS\"}]} # BatchQueryMessagingSubscriptionsForSpaceAlphaInput | \n\n    try:\n        # Batch Query Messaging Subscriptions for Space\n        api_response = api_instance.batch_query_messaging_subscriptions_for_space(space_id, batch_query_messaging_subscriptions_for_space_alpha_input)\n        print(\"The response of SpacesApi->batch_query_messaging_subscriptions_for_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpacesApi->batch_query_messaging_subscriptions_for_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    batchQueryMessagingSubscriptionsForSpaceAlphaInput := *api.NewBatchQueryMessagingSubscriptionsForSpaceAlphaInput([]api.GetSubscriptionRequest{*api.NewGetSubscriptionRequest(\"Key_example\", \"Type_example\")}) // BatchQueryMessagingSubscriptionsForSpaceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpacesAPI.BatchQueryMessagingSubscriptionsForSpace(ctx, spaceId).BatchQueryMessagingSubscriptionsForSpaceAlphaInput(batchQueryMessagingSubscriptionsForSpaceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpacesAPI.BatchQueryMessagingSubscriptionsForSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `BatchQueryMessagingSubscriptionsForSpace`: BatchQueryMessagingSubscriptionsForSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpacesAPI.BatchQueryMessagingSubscriptionsForSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/reverse-etl-models/{modelId}/syncs/{syncId}/cancel": {
      "post": {
        "summary": "Cancel Reverse ETL Sync for Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "modelId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "syncId",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Cancels a sync for a Reverse ETL Connection. It might take a few seconds to completely cancel the sync. \n\nWill return an error if the sync is already completed or cancelled.",
        "operationId": "cancelReverseETLSyncForModel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelReverseETLSyncForModelInput"
              },
              "example": {
                "reasonForCanceling": 0
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CancelReverseETLSyncForModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CANCELLING"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.cancelReverseETLSyncForModel('modelId', '1', { reasonForCanceling: 0 }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        String modelId = \"modelId\"; // String | \n        String syncId = \"1\"; // String | \n        CancelReverseETLSyncForModelInput cancelReverseETLSyncForModelInput = new CancelReverseETLSyncForModelInput(); // CancelReverseETLSyncForModelInput | \n        try {\n            CancelReverseETLSyncForModel200Response result = apiInstance.cancelReverseETLSyncForModel(modelId, syncId, cancelReverseETLSyncForModelInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#cancelReverseETLSyncForModel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.cancel_reverse_etl_sync_for_model200_response import CancelReverseETLSyncForModel200Response\nfrom segment_public_api.models.cancel_reverse_etl_sync_for_model_input import CancelReverseETLSyncForModelInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    model_id = 'modelId' # str | \n    sync_id = '1' # str | \n    cancel_reverse_etl_sync_for_model_input = {\"reasonForCanceling\":0} # CancelReverseETLSyncForModelInput | \n\n    try:\n        # Cancel Reverse ETL Sync for Model\n        api_response = api_instance.cancel_reverse_etl_sync_for_model(model_id, sync_id, cancel_reverse_etl_sync_for_model_input)\n        print(\"The response of ReverseETLApi->cancel_reverse_etl_sync_for_model:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->cancel_reverse_etl_sync_for_model: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    modelId := \"modelId\" // string | \n    syncId := \"1\" // string | \n    cancelReverseETLSyncForModelInput := *api.NewCancelReverseETLSyncForModelInput() // CancelReverseETLSyncForModelInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.CancelReverseETLSyncForModel(ctx, modelId, syncId).CancelReverseETLSyncForModelInput(cancelReverseETLSyncForModelInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.CancelReverseETLSyncForModel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CancelReverseETLSyncForModel`: CancelReverseETLSyncForModel200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.CancelReverseETLSyncForModel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences": {
      "post": {
        "summary": "Create Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates Audience.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Audience Created` event in the [audit trail](/tag/Audit-Trail).\n Note: The definition for an Audience created using the API is not editable through the Segment App.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createAudience",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAudienceAlphaInput"
              },
              "example": {
                "name": "name",
                "description": "description",
                "enabled": false,
                "definition": {
                  "query": "event('Shoes Bought').count() >= 1",
                  "type": "USERS"
                },
                "options": {
                  "includeAnonymousUsers": true,
                  "includeHistoricalData": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audience": {
                      "id": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "name",
                      "description": "find shoe bought users",
                      "key": "key",
                      "enabled": false,
                      "definition": {
                        "query": "event('Shoes Bought').count() >= 1",
                        "type": "USERS"
                      },
                      "audienceType": "USERS",
                      "status": "Live",
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "options": {
                        "includeAnonymousUsers": true,
                        "includeHistoricalData": true,
                        "filterByExternalIds": [
                          "anonymous_id"
                        ],
                        "backfillEventDataDays": 7
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.createAudience('9aQ1Lj62S4bomZKLF4DPqW', {\n      name: 'name',\n      description: 'description',\n      enabled: false,\n      definition: { query: \"event('Shoes Bought').count() >= 1\", type: 'USERS' },\n      options: { includeAnonymousUsers: true, includeHistoricalData: true },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        CreateAudienceAlphaInput createAudienceAlphaInput = new CreateAudienceAlphaInput(); // CreateAudienceAlphaInput | \n        try {\n            CreateAudience200Response result = apiInstance.createAudience(spaceId, createAudienceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#createAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_audience200_response import CreateAudience200Response\nfrom segment_public_api.models.create_audience_alpha_input import CreateAudienceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    create_audience_alpha_input = {\"name\":\"name\",\"description\":\"description\",\"enabled\":false,\"definition\":{\"query\":\"event('Shoes Bought').count() >= 1\",\"type\":\"USERS\"},\"options\":{\"includeAnonymousUsers\":true,\"includeHistoricalData\":true}} # CreateAudienceAlphaInput | \n\n    try:\n        # Create Audience\n        api_response = api_instance.create_audience(space_id, create_audience_alpha_input)\n        print(\"The response of AudiencesApi->create_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->create_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    createAudienceAlphaInput := *api.NewCreateAudienceAlphaInput(\"Name_example\", *api.NewAudienceDefinition(\"Type_example\", \"Query_example\")) // CreateAudienceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.CreateAudience(ctx, spaceId).CreateAudienceAlphaInput(createAudienceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.CreateAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateAudience`: CreateAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.CreateAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Audiences",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "search",
            "description": "Optional search criteria\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/ListAudienceSearchInput"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/ListAudiencesPaginationInput"
            },
            "example": "pagination.count=1"
          },
          {
            "in": "query",
            "required": false,
            "name": "include",
            "description": "Additional resource to include, support schedules only.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "Additional resource to include, support schedules only.",
              "enum": [
                "schedules"
              ],
              "type": "string",
              "title": "include"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns Audiences by spaceId. Supports including audience schedules via `?include=schedules`.\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listAudiences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAudiencesBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audiences": [
                      {
                        "status": "Live",
                        "size": {
                          "count": 1,
                          "type": "USERS"
                        },
                        "id": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
                        "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "name",
                        "description": "find shoe bought users",
                        "key": "key",
                        "enabled": false,
                        "definition": {
                          "query": "event('Shoes Bought').count() >= 1",
                          "type": "USERS"
                        },
                        "createdBy": "createdBy",
                        "updatedBy": "updatedBy",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "audienceType": "USERS",
                        "computeCadence": {
                          "type": "REALTIME"
                        },
                        "options": {
                          "includeAnonymousUsers": true,
                          "includeHistoricalData": true,
                          "filterByExternalIds": [
                            "android.idfa",
                            "anonymous_id",
                            "email",
                            "ios.idfa",
                            "user_id"
                          ],
                          "backfillEventDataDays": 1
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAudiencesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audiences": [
                      {
                        "status": "Live",
                        "size": {
                          "count": 1,
                          "type": "USERS"
                        },
                        "id": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
                        "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "name",
                        "description": "find shoe bought users",
                        "key": "key",
                        "enabled": false,
                        "definition": {
                          "query": "event('Shoes Bought').count() >= 1",
                          "type": "USERS"
                        },
                        "createdBy": "createdBy",
                        "updatedBy": "updatedBy",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "audienceType": "USERS",
                        "computeCadence": {
                          "type": "REALTIME"
                        },
                        "options": {
                          "includeAnonymousUsers": true,
                          "includeHistoricalData": true,
                          "filterByExternalIds": [
                            "android.idfa",
                            "anonymous_id",
                            "email",
                            "ios.idfa",
                            "user_id"
                          ],
                          "backfillEventDataDays": 1
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.listAudiences('9aQ1Lj62S4bomZKLF4DPqW'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        ListAudienceSearchInput search = new ListAudienceSearchInput(); // ListAudienceSearchInput | Optional search criteria  This parameter exists in alpha.\n        ListAudiencesPaginationInput pagination = new ListAudiencesPaginationInput(); // ListAudiencesPaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha.\n        String include = \"schedules\"; // String | Additional resource to include, support schedules only.  This parameter exists in alpha.\n        try {\n            ListAudiences200Response result = apiInstance.listAudiences(spaceId, search, pagination, include);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#listAudiences\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_audience_search_input import ListAudienceSearchInput\nfrom segment_public_api.models.list_audiences200_response import ListAudiences200Response\nfrom segment_public_api.models.list_audiences_pagination_input import ListAudiencesPaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    search = segment_public_api.ListAudienceSearchInput() # ListAudienceSearchInput | Optional search criteria  This parameter exists in alpha. (optional)\n    pagination = segment_public_api.ListAudiencesPaginationInput() # ListAudiencesPaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)\n    include = 'include_example' # str | Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Audiences\n        api_response = api_instance.list_audiences(space_id, search=search, pagination=pagination, include=include)\n        print(\"The response of AudiencesApi->list_audiences:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->list_audiences: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    search := *api.NewListAudienceSearchInput(\"Type_example\", \"Query_example\") // ListAudienceSearchInput | Optional search criteria  This parameter exists in alpha. (optional)\n    pagination := *api.NewListAudiencesPaginationInput(float32(123)) // ListAudiencesPaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)\n    include := \"include_example\" // string | Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.ListAudiences(ctx, spaceId).Search(search).Pagination(pagination).Include(include).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.ListAudiences``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListAudiences`: ListAudiences200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.ListAudiences`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/previews": {
      "post": {
        "summary": "Create Audience Preview",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Previews Audience.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Audience Preview Created` event in the [audit trail](/tag/Audit-Trail).\n\n\nThe rate limit for this endpoint is 5 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.\nThis endpoint also has a rate limit of 700 requests per month per spaceId, which is lower than the default due to access pattern restrictions.",
        "operationId": "createAudiencePreview",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAudiencePreviewAlphaInput"
              },
              "example": {
                "definition": {
                  "query": "event('Shoes Bought').count() >= 1"
                },
                "audienceType": "USERS",
                "options": {
                  "filterByExternalIds": [
                    "android.idfa",
                    "anonymous_id",
                    "email",
                    "ios.idfa",
                    "user_id"
                  ],
                  "backfillEventDataDays": 7
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateAudiencePreviewAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audiencePreview": {
                      "id": "previewId_123"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.createAudiencePreview('9aQ1Lj62S4bomZKLF4DPqW', {\n      definition: { query: \"event('Shoes Bought').count() >= 1\" },\n      audienceType: 'USERS',\n      options: { filterByExternalIds: ['android.idfa', 'anonymous_id', 'email', 'ios.idfa', 'user_id'], backfillEventDataDays: 7 },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        CreateAudiencePreviewAlphaInput createAudiencePreviewAlphaInput = new CreateAudiencePreviewAlphaInput(); // CreateAudiencePreviewAlphaInput | \n        try {\n            CreateAudiencePreview200Response result = apiInstance.createAudiencePreview(spaceId, createAudiencePreviewAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#createAudiencePreview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_audience_preview200_response import CreateAudiencePreview200Response\nfrom segment_public_api.models.create_audience_preview_alpha_input import CreateAudiencePreviewAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    create_audience_preview_alpha_input = {\"definition\":{\"query\":\"event('Shoes Bought').count() >= 1\"},\"audienceType\":\"USERS\",\"options\":{\"filterByExternalIds\":[\"android.idfa\",\"anonymous_id\",\"email\",\"ios.idfa\",\"user_id\"],\"backfillEventDataDays\":7}} # CreateAudiencePreviewAlphaInput | \n\n    try:\n        # Create Audience Preview\n        api_response = api_instance.create_audience_preview(space_id, create_audience_preview_alpha_input)\n        print(\"The response of AudiencesApi->create_audience_preview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->create_audience_preview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    createAudiencePreviewAlphaInput := *api.NewCreateAudiencePreviewAlphaInput(*api.NewAudienceDefinitionWithoutType(\"Query_example\"), \"AudienceType_example\") // CreateAudiencePreviewAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.CreateAudiencePreview(ctx, spaceId).CreateAudiencePreviewAlphaInput(createAudiencePreviewAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.CreateAudiencePreview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateAudiencePreview`: CreateAudiencePreview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.CreateAudiencePreview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/regulations/cloudsources/{sourceId}": {
      "post": {
        "summary": "Create Cloud Source Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a Source-scoped regulation. \n\n Please Note: Suppression rules at the Workspace level take precedence over those at the Source level. If a user has been suppressed at the Workspace level, any attempt to un-suppress at the Source level is not supported and the processing of the request will fail in Segment\n\n      Config API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createCloudSourceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "OBJECT_ID",
                "subjectIds": [
                  "test_object_id"
                ],
                "collection": "some-app-collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateCloudSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deletionAndSuppression.createCloudSourceRegulation('qQEHquLrjRDN9j1ByrChyn', {\n      regulationType: 'SUPPRESS_ONLY',\n      subjectType: 'OBJECT_ID',\n      subjectIds: ['test_object_id'],\n      collection: 'some-app-collection',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        CreateCloudSourceRegulationV1Input createCloudSourceRegulationV1Input = new CreateCloudSourceRegulationV1Input(); // CreateCloudSourceRegulationV1Input | \n        try {\n            CreateCloudSourceRegulation200Response result = apiInstance.createCloudSourceRegulation(sourceId, createCloudSourceRegulationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#createCloudSourceRegulation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_cloud_source_regulation200_response import CreateCloudSourceRegulation200Response\nfrom segment_public_api.models.create_cloud_source_regulation_v1_input import CreateCloudSourceRegulationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    create_cloud_source_regulation_v1_input = {\"regulationType\":\"SUPPRESS_ONLY\",\"subjectType\":\"OBJECT_ID\",\"subjectIds\":[\"test_object_id\"],\"collection\":\"some-app-collection\"} # CreateCloudSourceRegulationV1Input | \n\n    try:\n        # Create Cloud Source Regulation\n        api_response = api_instance.create_cloud_source_regulation(source_id, create_cloud_source_regulation_v1_input)\n        print(\"The response of DeletionAndSuppressionApi->create_cloud_source_regulation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->create_cloud_source_regulation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    createCloudSourceRegulationV1Input := *api.NewCreateCloudSourceRegulationV1Input(\"RegulationType_example\", \"SubjectType_example\", []string{\"SubjectIds_example\"}, \"Collection_example\") // CreateCloudSourceRegulationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.CreateCloudSourceRegulation(ctx, sourceId).CreateCloudSourceRegulationV1Input(createCloudSourceRegulationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.CreateCloudSourceRegulation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateCloudSourceRegulation`: CreateCloudSourceRegulation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.CreateCloudSourceRegulation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/computed-traits": {
      "post": {
        "summary": "Create Computed Trait",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a Computed Trait\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Computed Trait Created` event in the [audit trail](/tag/Audit-Trail).\n Note: The definition for a Computed Trait created using the API is not editable through the Segment App.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createComputedTrait",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComputedTraitAlphaInput"
              },
              "example": {
                "name": "name",
                "description": "description",
                "enabled": false,
                "definition": {
                  "query": "event('Shoes Bought').count() >= 1",
                  "type": "USERS"
                },
                "options": {
                  "includeAnonymousUsers": true,
                  "includeHistoricalData": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateComputedTraitAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTrait": {
                      "id": "id",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "definition": {
                        "query": "event('Shoes Bought').where(property('price') >= 100).count()",
                        "type": "USERS"
                      },
                      "status": "Live",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.computedTraits.createComputedTrait('spaceId', {\n      name: 'name',\n      description: 'description',\n      enabled: false,\n      definition: { query: \"event('Shoes Bought').count() >= 1\", type: 'USERS' },\n      options: { includeAnonymousUsers: true, includeHistoricalData: true },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ComputedTraitsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ComputedTraitsApi apiInstance = new ComputedTraitsApi(defaultClient);\n        String spaceId = \"spaceId\"; // String | \n        CreateComputedTraitAlphaInput createComputedTraitAlphaInput = new CreateComputedTraitAlphaInput(); // CreateComputedTraitAlphaInput | \n        try {\n            CreateComputedTrait200Response result = apiInstance.createComputedTrait(spaceId, createComputedTraitAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ComputedTraitsApi#createComputedTrait\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_computed_trait200_response import CreateComputedTrait200Response\nfrom segment_public_api.models.create_computed_trait_alpha_input import CreateComputedTraitAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ComputedTraitsApi(api_client)\n    space_id = 'spaceId' # str | \n    create_computed_trait_alpha_input = {\"name\":\"name\",\"description\":\"description\",\"enabled\":false,\"definition\":{\"query\":\"event('Shoes Bought').count() >= 1\",\"type\":\"USERS\"},\"options\":{\"includeAnonymousUsers\":true,\"includeHistoricalData\":true}} # CreateComputedTraitAlphaInput | \n\n    try:\n        # Create Computed Trait\n        api_response = api_instance.create_computed_trait(space_id, create_computed_trait_alpha_input)\n        print(\"The response of ComputedTraitsApi->create_computed_trait:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ComputedTraitsApi->create_computed_trait: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spaceId\" // string | \n    createComputedTraitAlphaInput := *api.NewCreateComputedTraitAlphaInput(\"Name_example\", *api.NewTraitDefinition(\"Type_example\", \"Query_example\")) // CreateComputedTraitAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ComputedTraitsAPI.CreateComputedTrait(ctx, spaceId).CreateComputedTraitAlphaInput(createComputedTraitAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ComputedTraitsAPI.CreateComputedTrait``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateComputedTrait`: CreateComputedTrait200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ComputedTraitsAPI.CreateComputedTrait`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Computed Traits",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Returns Computed Traits by spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listComputedTraits",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListComputedTraitsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTraits": [
                      {
                        "id": "id",
                        "spaceId": "spaceId",
                        "name": "name",
                        "description": "description",
                        "key": "key",
                        "definition": {
                          "query": "event('Shoes Bought').where(property('price') >= 100).count()",
                          "type": "USERS"
                        },
                        "status": "Live",
                        "enabled": false,
                        "createdBy": "createdBy",
                        "updatedBy": "updatedBy",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.listComputedTraits('spaceId'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ComputedTraitsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ComputedTraitsApi apiInstance = new ComputedTraitsApi(defaultClient);\n        String spaceId = \"spaceId\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha.\n        try {\n            ListComputedTraits200Response result = apiInstance.listComputedTraits(spaceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ComputedTraitsApi#listComputedTraits\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_computed_traits200_response import ListComputedTraits200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ComputedTraitsApi(api_client)\n    space_id = 'spaceId' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Computed Traits\n        api_response = api_instance.list_computed_traits(space_id, pagination=pagination)\n        print(\"The response of ComputedTraitsApi->list_computed_traits:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ComputedTraitsApi->list_computed_traits: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spaceId\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ComputedTraitsAPI.ListComputedTraits(ctx, spaceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ComputedTraitsAPI.ListComputedTraits``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListComputedTraits`: ListComputedTraits200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ComputedTraitsAPI.ListComputedTraits`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/dbt-model-syncs/trigger": {
      "post": {
        "summary": "Create Dbt Model Sync Trigger",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a trigger for a new dbt model sync for a Source.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createDbtModelSyncTrigger",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDbtModelSyncTriggerInput"
              },
              "example": {
                "sourceId": "source-id"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDbtModelSyncTriggerOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dbtModelSyncTrigger": {
                      "id": "dbt_model_sync_1",
                      "sourceId": "source_id_1",
                      "status": "created"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "dbt"
        ],
        "tags": [
          "dbt"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.dbt.createDbtModelSyncTrigger({ sourceId: 'source-id' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DbtApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DbtApi apiInstance = new DbtApi(defaultClient);\n        CreateDbtModelSyncTriggerInput createDbtModelSyncTriggerInput = new CreateDbtModelSyncTriggerInput(); // CreateDbtModelSyncTriggerInput | \n        try {\n            CreateDbtModelSyncTrigger200Response result = apiInstance.createDbtModelSyncTrigger(createDbtModelSyncTriggerInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DbtApi#createDbtModelSyncTrigger\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_dbt_model_sync_trigger200_response import CreateDbtModelSyncTrigger200Response\nfrom segment_public_api.models.create_dbt_model_sync_trigger_input import CreateDbtModelSyncTriggerInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DbtApi(api_client)\n    create_dbt_model_sync_trigger_input = {\"sourceId\":\"source-id\"} # CreateDbtModelSyncTriggerInput | \n\n    try:\n        # Create Dbt Model Sync Trigger\n        api_response = api_instance.create_dbt_model_sync_trigger(create_dbt_model_sync_trigger_input)\n        print(\"The response of DbtApi->create_dbt_model_sync_trigger:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DbtApi->create_dbt_model_sync_trigger: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createDbtModelSyncTriggerInput := *api.NewCreateDbtModelSyncTriggerInput(\"SourceId_example\") // CreateDbtModelSyncTriggerInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DbtAPI.CreateDbtModelSyncTrigger(ctx).CreateDbtModelSyncTriggerInput(createDbtModelSyncTriggerInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DbtAPI.CreateDbtModelSyncTrigger``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateDbtModelSyncTrigger`: CreateDbtModelSyncTrigger200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DbtAPI.CreateDbtModelSyncTrigger`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destinations": {
      "post": {
        "summary": "Create Destination",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Destination.\n\n\n\n• When called, this endpoint may generate the `Integration Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "54521fd525e721e32a72ee91",
                "name": "my destination v1",
                "settings": {
                  "apiKey": "3cb9b589437d3904f19b2b791c2cdada",
                  "retarget": true
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "54521fd525e721e32a72ee91",
                "name": "my destination v1",
                "settings": {
                  "apiKey": "3cb9b589437d3904f19b2b791c2cdada",
                  "retarget": true
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "54521fd525e721e32a72ee91",
                "name": "my destination beta",
                "settings": {
                  "apiKey": "3cb9b589437d3904f19b2b791c2cdada",
                  "retarget": true
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "metadataId": "54521fd525e721e32a72ee91",
                "name": "Example destination",
                "settings": {
                  "apiKey": "3cb9b589437d3904f19b2b791c2cdada",
                  "retarget": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "66be7aeca665bd11f8908630",
                      "enabled": true,
                      "name": "my destination v1",
                      "settings": {
                        "apiKey": "••••••••••dada",
                        "appendFieldsToEventProps": {},
                        "batchEvents": false,
                        "deviceIdFromUrlParam": false,
                        "enableLocationListening": true,
                        "endpoint": "",
                        "eventUploadPeriodMillis": 30000,
                        "eventUploadThreshold": 30,
                        "forceHttps": false,
                        "groupTypeTrait": "",
                        "groupValueTrait": "",
                        "mapQueryParams": {},
                        "preferAnonymousIdForDeviceId": false,
                        "retarget": true,
                        "saveParamsReferrerOncePerSession": true,
                        "secretKey": "",
                        "sendAlias": false,
                        "sendToBatchEndpoint": false,
                        "trackAllPages": false,
                        "trackAllPagesV2": false,
                        "trackCategorizedPages": true,
                        "trackGclid": false,
                        "trackNamedPages": true,
                        "trackProductsOnce": false,
                        "trackReferrer": true,
                        "trackRevenuePerProduct": false,
                        "trackSessionEvents": false,
                        "trackUtmProperties": true,
                        "traitsToAppend": [],
                        "traitsToIncrement": [],
                        "traitsToPrepend": [],
                        "traitsToSetOnce": [],
                        "unsetParamsReferrerOnNewSession": false,
                        "useAdvertisingIdForDeviceId": false,
                        "useAmplitudeReferral": false,
                        "useCustomAmplitudeProperties": false,
                        "useLogRevenueV2": true,
                        "versionName": ""
                      },
                      "metadata": {
                        "id": "54521fd525e721e32a72ee91",
                        "name": "Amplitude",
                        "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                        "slug": "amplitude",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "appendFieldsToEventProps",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                            "required": false,
                            "label": "Append Fields To Event Properties"
                          },
                          {
                            "name": "batchEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                            "required": false,
                            "label": "Batch Events"
                          },
                          {
                            "name": "deviceIdFromUrlParam",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                            "required": false,
                            "label": "Set Device ID From URL Parameter amp_device_id"
                          },
                          {
                            "name": "enableLocationListening",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                            "required": false,
                            "label": "Enable Location Listening"
                          },
                          {
                            "name": "endpoint",
                            "type": "select",
                            "defaultValue": "",
                            "description": "Cloud-mode Only (will not work in device-mode). Choose the endpoint corresponding to your region.",
                            "required": false,
                            "label": "Endpoint"
                          },
                          {
                            "name": "eventUploadPeriodMillis",
                            "type": "number",
                            "defaultValue": 30000,
                            "description": "Amount of time in milliseconds that the SDK waits before uploading events if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Period Millis (for batching events)"
                          },
                          {
                            "name": "eventUploadThreshold",
                            "type": "number",
                            "defaultValue": 30,
                            "description": "Minimum number of events to batch together per request if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Threshold (for batching events)"
                          },
                          {
                            "name": "forceHttps",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the events will always be uploaded to HTTPS endpoint. Otherwise the SDK will use the embedding site's protocol.",
                            "required": false,
                            "label": "Force Https"
                          },
                          {
                            "name": "groupTypeTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group type\" in group calls. If, for example, you set this to be `industry`, then `traits[\"industry\"]` will be sent as `groupType` to Amplitude.",
                            "required": false,
                            "label": "Group Type Trait"
                          },
                          {
                            "name": "groupValueTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group value\" in group calls. If, for example, you set this to be `plan`, then `traits[\"plan\"]` will be sent as `groupValue` to Amplitude.",
                            "required": false,
                            "label": "Group Value Trait"
                          },
                          {
                            "name": "mapQueryParams",
                            "type": "map",
                            "defaultValue": {},
                            "description": "When sending data via server side or Cloud Mode, you can send the custom query params that are automatically collected by `analytics.js` (or whatever you manually send under `context.page.search`), by entering a custom property name you would like to map that under on the left hand side. On the right hand side, please choose whether you want the query params to be set on the user profile or event metadata level. Whatever you put on the left hand side we will map the entire query parameters string from the `context.page.search`.",
                            "required": false,
                            "label": "Map Query Params to Custom Property"
                          },
                          {
                            "name": "preferAnonymousIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment will use `context.device.id` as the Amplitude `device_id`, using `anonymousId` if `context.device.id` isn't present.\n\nEnable this setting to flip this behavior; `anonymousId` will be used as the `device_id`, falling back to `context.device.id` if it isn't present.\n\nIn browsers, enabling this setting means the user's anonymous ID, which you can set using `analytics.user().anonymousId('ID_GOES_HERE')`, will be set as the Amplitude device ID. Otherwise, Amplitude's default logic for determining device IDs will be used.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Device ID"
                          },
                          {
                            "name": "saveParamsReferrerOncePerSession",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If true then includeGclid, includeReferrer, and includeUtm will only track their respective properties once per session. New values that come in during the middle of the user's session will be ignored. Set to false to always capture new values.",
                            "required": false,
                            "label": "Save Referrer, URL Params, GCLID Once Per Session"
                          },
                          {
                            "name": "secretKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Amplitude Secret Key (Only needed for user deletion)",
                            "required": false,
                            "label": "Secret Key"
                          },
                          {
                            "name": "sendAlias",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. Enabling this setting allows your Amplitude destination instance to send `alias` events to Amplitude's `usermap` endpoint. By default, Segment's Amplitude integration does not support `alias`, so when this setting is disabled, your Segment Amplitude destination will reject `alias` events as unsupported.",
                            "required": false,
                            "label": "Enable Alias"
                          },
                          {
                            "name": "sendToBatchEndpoint",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. If true, events are sent to Amplitude's `batch` endpoint rather than to their `httpapi` endpoint. Because Amplitude's `batch` endpoint throttles traffic less restrictively than the Amplitude `httpapi` endpoint, enabling this setting may help to reduce 429s - or throttling errors - from Amplitude. Amplitude's `batch` endpoint throttles data only when the rate of events sharing the same `user_id` or `device_id` exceeds an average of 1,000/second over a 30-second period. More information about Amplitude's throttling is available here in their docs: https://developers.amplitude.com/#429s-in-depth.",
                            "required": false,
                            "label": "Send To Batch Endpoint"
                          },
                          {
                            "name": "trackAllPages",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will track **Loaded a Page** events to Amplitude for all [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls. We keep this disabled by default, since Amplitude isn't generally used for pageview tracking.",
                            "required": false,
                            "label": "Track All Pages to Amplitude"
                          },
                          {
                            "name": "trackAllPagesV2",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile only. Sends a \"Loaded Screen\" event and the screen name as a property to Amplitude. Moving forward, this is the preferred method of tracking screen events in Amplitude.",
                            "required": false,
                            "label": "Track All Screens"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. For example `page('Docs', 'Index')` would translate to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages to Amplitude"
                          },
                          {
                            "name": "trackGclid",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, captures the gclid url parameter as well as the user's initial_gclid via a set once operation.",
                            "required": false,
                            "label": "Track GCLID"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. For example `page('Signup')` would translate to **Viewed Signup Page**. Remember that `name` includes `category`, so `page('Conversion', 'Signup')` would translate to a **Viewed Conversion Signup Page** event in Amplitude.",
                            "required": false,
                            "label": "Track Named Pages to Amplitude"
                          },
                          {
                            "name": "trackProductsOnce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Beta feature* Amplitude recently added support to submit an array of products on \"Order Completed\" events. If this setting is set to true, we will send all the products in one single event to Amplitude.",
                            "required": false,
                            "label": "Track products once"
                          },
                          {
                            "name": "trackReferrer",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Client Side Only - Enabling this will send referrer information as a user property to Amplitude when you call Segment's `page` method. ",
                            "required": false,
                            "label": "Track Referrer to Amplitude"
                          },
                          {
                            "name": "trackRevenuePerProduct",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Client and server only. This setting allows you to specify whether you would like to track an Amplitude Revenue event per individual product in a user transaction or a single Revenue event for the combined revenue of all products. This setting is only relevant if you are using our eCommerce spec and passing us an Order Completed event with a list of products.",
                            "required": false,
                            "label": "Track Revenue Per Product"
                          },
                          {
                            "name": "trackSessionEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "(Optional) This enables the sending of start and end session events for mobile products. Amplitude's libraries track sessions automatically and this option is not necessary for session tracking. ",
                            "required": false,
                            "label": "Track Session Events to Amplitude"
                          },
                          {
                            "name": "trackUtmProperties",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If Amplitude is connected in device-mode this will send the UTM properties found in the querystring. If Amplitude is connected in cloud-mode this will send the UTM properties found in the `context.campaign` object. (Note: The Analytics.js library [automatically collects](https://segment.com/docs/connections/spec/common/#context-fields-automatically-collected) the `context.campaign` object)",
                            "required": false,
                            "label": "Track UTM Properties to Amplitude."
                          },
                          {
                            "name": "traitsToAppend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be appended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Append"
                          },
                          {
                            "name": "traitsToIncrement",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Configure `trait` to increment on identify. If the trait is present, it will increment the trait given the numerical value passed in when you call `identify` with the trait.",
                            "required": false,
                            "label": "Traits To Increment"
                          },
                          {
                            "name": "traitsToPrepend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be prepended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Prepend"
                          },
                          {
                            "name": "traitsToSetOnce",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be set only once via identify.traits. ",
                            "required": false,
                            "label": "Traits to Set Once"
                          },
                          {
                            "name": "unsetParamsReferrerOnNewSession",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If false, the existing referrer and `utm_parameter` values will be carried through each new session. If set to true, the referrer and `utm_parameter` user properties, which include `referrer`, `utm_source`, `utm_medium`, `utm_campaign`, `utm_term`, and `utm_content`, will be set to null upon instantiating a new session. **Note**: This only works if Track Referrer or Track UTM Properties to Amplitude are set to true.",
                            "required": false,
                            "label": "Unset Params Referrer On New Session"
                          },
                          {
                            "name": "useAdvertisingIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile Only (will *not* work in cloud-mode). Allows users to use advertisingIdentifier instead of identifierForVendor as the Device ID.",
                            "required": false,
                            "label": "Use AdvertisingId for DeviceId"
                          },
                          {
                            "name": "useAmplitudeReferral",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Let Amplitude handle referral tracking behavior. If the \"Save Referrer, URL Params, GLCID Once Per Session\" setting isn't giving the desired behavior, this setting will fix it. Note: This setting may cause Amplitude to not fully respect the \"Prefer Anonymous ID for Device ID\" setting (Amplitude may set the device ID upon initialization before it gets set to the proper Anonymous ID) if using Analytics.js 1.0. Consider [updating to Analytics.js 2.0] (https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/upgrade-to-ajs2/) ",
                            "required": false,
                            "label": "Use Amplitude Referral"
                          },
                          {
                            "name": "useCustomAmplitudeProperties",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this option if you want to send additional 'language' and 'country' parameters inside of event_properties. This is separate from the language and country collected from your user's context. (For example, you want to send the language that a video is played in). You can send these in your properties, for example: `analytics.track('Video Played', {language: 'Japanese'});`",
                            "required": false,
                            "label": "Send Custom Language and Country Properties"
                          },
                          {
                            "name": "useLogRevenueV2",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Use Amplitude's logRevenueV2 API, which allows for the tracking of event properties with the revenue event. Track an event with \"price\" and \"quantity\" properties, and it will log total revenue = price * quantity. You may also set a revenueType property to designate the type of revenue (ex: purchase, refund, etc). Negative prices can be used to indicate revenue lost.",
                            "required": false,
                            "label": "Use Log Revenue V2 API"
                          },
                          {
                            "name": "versionName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Optional. You can assign a version name for your page, and we'll send it to Amplitude for more detailed events.",
                            "required": false,
                            "label": "Version Name"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://amplitude.com",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Amplitude"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Mike Ottavi-Brannon",
                            "email": "mike@amplitude.com",
                            "role": "Principle Product Manager",
                            "isPrimary": true
                          },
                          {
                            "name": "Kurt Norwood",
                            "email": "kurt@amplitude.com",
                            "role": "Software Engineer",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "eu-west-1",
                          "us-west-2"
                        ],
                        "regionEndpoints": [
                          "US",
                          "EU"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "66be7aeca665bd11f8908630",
                      "enabled": true,
                      "name": "my destination v1",
                      "settings": {
                        "apiKey": "••••••••••dada",
                        "appendFieldsToEventProps": {},
                        "batchEvents": false,
                        "deviceIdFromUrlParam": false,
                        "enableLocationListening": true,
                        "endpoint": "",
                        "eventUploadPeriodMillis": 30000,
                        "eventUploadThreshold": 30,
                        "forceHttps": false,
                        "groupTypeTrait": "",
                        "groupValueTrait": "",
                        "mapQueryParams": {},
                        "preferAnonymousIdForDeviceId": false,
                        "retarget": true,
                        "saveParamsReferrerOncePerSession": true,
                        "secretKey": "",
                        "sendAlias": false,
                        "sendToBatchEndpoint": false,
                        "trackAllPages": false,
                        "trackAllPagesV2": false,
                        "trackCategorizedPages": true,
                        "trackGclid": false,
                        "trackNamedPages": true,
                        "trackProductsOnce": false,
                        "trackReferrer": true,
                        "trackRevenuePerProduct": false,
                        "trackSessionEvents": false,
                        "trackUtmProperties": true,
                        "traitsToAppend": [],
                        "traitsToIncrement": [],
                        "traitsToPrepend": [],
                        "traitsToSetOnce": [],
                        "unsetParamsReferrerOnNewSession": false,
                        "useAdvertisingIdForDeviceId": false,
                        "useAmplitudeReferral": false,
                        "useCustomAmplitudeProperties": false,
                        "useLogRevenueV2": true,
                        "versionName": ""
                      },
                      "metadata": {
                        "id": "54521fd525e721e32a72ee91",
                        "name": "Amplitude",
                        "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                        "slug": "amplitude",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "appendFieldsToEventProps",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                            "required": false,
                            "label": "Append Fields To Event Properties"
                          },
                          {
                            "name": "batchEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                            "required": false,
                            "label": "Batch Events"
                          },
                          {
                            "name": "deviceIdFromUrlParam",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                            "required": false,
                            "label": "Set Device ID From URL Parameter amp_device_id"
                          },
                          {
                            "name": "enableLocationListening",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                            "required": false,
                            "label": "Enable Location Listening"
                          },
                          {
                            "name": "endpoint",
                            "type": "select",
                            "defaultValue": "",
                            "description": "Cloud-mode Only (will not work in device-mode). Choose the endpoint corresponding to your region.",
                            "required": false,
                            "label": "Endpoint"
                          },
                          {
                            "name": "eventUploadPeriodMillis",
                            "type": "number",
                            "defaultValue": 30000,
                            "description": "Amount of time in milliseconds that the SDK waits before uploading events if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Period Millis (for batching events)"
                          },
                          {
                            "name": "eventUploadThreshold",
                            "type": "number",
                            "defaultValue": 30,
                            "description": "Minimum number of events to batch together per request if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Threshold (for batching events)"
                          },
                          {
                            "name": "forceHttps",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the events will always be uploaded to HTTPS endpoint. Otherwise the SDK will use the embedding site's protocol.",
                            "required": false,
                            "label": "Force Https"
                          },
                          {
                            "name": "groupTypeTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group type\" in group calls. If, for example, you set this to be `industry`, then `traits[\"industry\"]` will be sent as `groupType` to Amplitude.",
                            "required": false,
                            "label": "Group Type Trait"
                          },
                          {
                            "name": "groupValueTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group value\" in group calls. If, for example, you set this to be `plan`, then `traits[\"plan\"]` will be sent as `groupValue` to Amplitude.",
                            "required": false,
                            "label": "Group Value Trait"
                          },
                          {
                            "name": "mapQueryParams",
                            "type": "map",
                            "defaultValue": {},
                            "description": "When sending data via server side or Cloud Mode, you can send the custom query params that are automatically collected by `analytics.js` (or whatever you manually send under `context.page.search`), by entering a custom property name you would like to map that under on the left hand side. On the right hand side, please choose whether you want the query params to be set on the user profile or event metadata level. Whatever you put on the left hand side we will map the entire query parameters string from the `context.page.search`.",
                            "required": false,
                            "label": "Map Query Params to Custom Property"
                          },
                          {
                            "name": "preferAnonymousIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment will use `context.device.id` as the Amplitude `device_id`, using `anonymousId` if `context.device.id` isn't present.\n\nEnable this setting to flip this behavior; `anonymousId` will be used as the `device_id`, falling back to `context.device.id` if it isn't present.\n\nIn browsers, enabling this setting means the user's anonymous ID, which you can set using `analytics.user().anonymousId('ID_GOES_HERE')`, will be set as the Amplitude device ID. Otherwise, Amplitude's default logic for determining device IDs will be used.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Device ID"
                          },
                          {
                            "name": "saveParamsReferrerOncePerSession",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If true then includeGclid, includeReferrer, and includeUtm will only track their respective properties once per session. New values that come in during the middle of the user's session will be ignored. Set to false to always capture new values.",
                            "required": false,
                            "label": "Save Referrer, URL Params, GCLID Once Per Session"
                          },
                          {
                            "name": "secretKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Amplitude Secret Key (Only needed for user deletion)",
                            "required": false,
                            "label": "Secret Key"
                          },
                          {
                            "name": "sendAlias",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. Enabling this setting allows your Amplitude destination instance to send `alias` events to Amplitude's `usermap` endpoint. By default, Segment's Amplitude integration does not support `alias`, so when this setting is disabled, your Segment Amplitude destination will reject `alias` events as unsupported.",
                            "required": false,
                            "label": "Enable Alias"
                          },
                          {
                            "name": "sendToBatchEndpoint",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. If true, events are sent to Amplitude's `batch` endpoint rather than to their `httpapi` endpoint. Because Amplitude's `batch` endpoint throttles traffic less restrictively than the Amplitude `httpapi` endpoint, enabling this setting may help to reduce 429s - or throttling errors - from Amplitude. Amplitude's `batch` endpoint throttles data only when the rate of events sharing the same `user_id` or `device_id` exceeds an average of 1,000/second over a 30-second period. More information about Amplitude's throttling is available here in their docs: https://developers.amplitude.com/#429s-in-depth.",
                            "required": false,
                            "label": "Send To Batch Endpoint"
                          },
                          {
                            "name": "trackAllPages",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will track **Loaded a Page** events to Amplitude for all [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls. We keep this disabled by default, since Amplitude isn't generally used for pageview tracking.",
                            "required": false,
                            "label": "Track All Pages to Amplitude"
                          },
                          {
                            "name": "trackAllPagesV2",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile only. Sends a \"Loaded Screen\" event and the screen name as a property to Amplitude. Moving forward, this is the preferred method of tracking screen events in Amplitude.",
                            "required": false,
                            "label": "Track All Screens"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. For example `page('Docs', 'Index')` would translate to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages to Amplitude"
                          },
                          {
                            "name": "trackGclid",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, captures the gclid url parameter as well as the user's initial_gclid via a set once operation.",
                            "required": false,
                            "label": "Track GCLID"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. For example `page('Signup')` would translate to **Viewed Signup Page**. Remember that `name` includes `category`, so `page('Conversion', 'Signup')` would translate to a **Viewed Conversion Signup Page** event in Amplitude.",
                            "required": false,
                            "label": "Track Named Pages to Amplitude"
                          },
                          {
                            "name": "trackProductsOnce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Beta feature* Amplitude recently added support to submit an array of products on \"Order Completed\" events. If this setting is set to true, we will send all the products in one single event to Amplitude.",
                            "required": false,
                            "label": "Track products once"
                          },
                          {
                            "name": "trackReferrer",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Client Side Only - Enabling this will send referrer information as a user property to Amplitude when you call Segment's `page` method. ",
                            "required": false,
                            "label": "Track Referrer to Amplitude"
                          },
                          {
                            "name": "trackRevenuePerProduct",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Client and server only. This setting allows you to specify whether you would like to track an Amplitude Revenue event per individual product in a user transaction or a single Revenue event for the combined revenue of all products. This setting is only relevant if you are using our eCommerce spec and passing us an Order Completed event with a list of products.",
                            "required": false,
                            "label": "Track Revenue Per Product"
                          },
                          {
                            "name": "trackSessionEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "(Optional) This enables the sending of start and end session events for mobile products. Amplitude's libraries track sessions automatically and this option is not necessary for session tracking. ",
                            "required": false,
                            "label": "Track Session Events to Amplitude"
                          },
                          {
                            "name": "trackUtmProperties",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If Amplitude is connected in device-mode this will send the UTM properties found in the querystring. If Amplitude is connected in cloud-mode this will send the UTM properties found in the `context.campaign` object. (Note: The Analytics.js library [automatically collects](https://segment.com/docs/connections/spec/common/#context-fields-automatically-collected) the `context.campaign` object)",
                            "required": false,
                            "label": "Track UTM Properties to Amplitude."
                          },
                          {
                            "name": "traitsToAppend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be appended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Append"
                          },
                          {
                            "name": "traitsToIncrement",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Configure `trait` to increment on identify. If the trait is present, it will increment the trait given the numerical value passed in when you call `identify` with the trait.",
                            "required": false,
                            "label": "Traits To Increment"
                          },
                          {
                            "name": "traitsToPrepend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be prepended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Prepend"
                          },
                          {
                            "name": "traitsToSetOnce",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be set only once via identify.traits. ",
                            "required": false,
                            "label": "Traits to Set Once"
                          },
                          {
                            "name": "unsetParamsReferrerOnNewSession",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If false, the existing referrer and `utm_parameter` values will be carried through each new session. If set to true, the referrer and `utm_parameter` user properties, which include `referrer`, `utm_source`, `utm_medium`, `utm_campaign`, `utm_term`, and `utm_content`, will be set to null upon instantiating a new session. **Note**: This only works if Track Referrer or Track UTM Properties to Amplitude are set to true.",
                            "required": false,
                            "label": "Unset Params Referrer On New Session"
                          },
                          {
                            "name": "useAdvertisingIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile Only (will *not* work in cloud-mode). Allows users to use advertisingIdentifier instead of identifierForVendor as the Device ID.",
                            "required": false,
                            "label": "Use AdvertisingId for DeviceId"
                          },
                          {
                            "name": "useAmplitudeReferral",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Let Amplitude handle referral tracking behavior. If the \"Save Referrer, URL Params, GLCID Once Per Session\" setting isn't giving the desired behavior, this setting will fix it. Note: This setting may cause Amplitude to not fully respect the \"Prefer Anonymous ID for Device ID\" setting (Amplitude may set the device ID upon initialization before it gets set to the proper Anonymous ID) if using Analytics.js 1.0. Consider [updating to Analytics.js 2.0] (https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/upgrade-to-ajs2/) ",
                            "required": false,
                            "label": "Use Amplitude Referral"
                          },
                          {
                            "name": "useCustomAmplitudeProperties",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this option if you want to send additional 'language' and 'country' parameters inside of event_properties. This is separate from the language and country collected from your user's context. (For example, you want to send the language that a video is played in). You can send these in your properties, for example: `analytics.track('Video Played', {language: 'Japanese'});`",
                            "required": false,
                            "label": "Send Custom Language and Country Properties"
                          },
                          {
                            "name": "useLogRevenueV2",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Use Amplitude's logRevenueV2 API, which allows for the tracking of event properties with the revenue event. Track an event with \"price\" and \"quantity\" properties, and it will log total revenue = price * quantity. You may also set a revenueType property to designate the type of revenue (ex: purchase, refund, etc). Negative prices can be used to indicate revenue lost.",
                            "required": false,
                            "label": "Use Log Revenue V2 API"
                          },
                          {
                            "name": "versionName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Optional. You can assign a version name for your page, and we'll send it to Amplitude for more detailed events.",
                            "required": false,
                            "label": "Version Name"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://amplitude.com",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Amplitude"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Mike Ottavi-Brannon",
                            "email": "mike@amplitude.com",
                            "role": "Principle Product Manager",
                            "isPrimary": true
                          },
                          {
                            "name": "Kurt Norwood",
                            "email": "kurt@amplitude.com",
                            "role": "Software Engineer",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "eu-west-1",
                          "us-west-2"
                        ],
                        "regionEndpoints": [
                          "US",
                          "EU"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "66be7adfa665bd11f890862e",
                      "enabled": true,
                      "name": "my destination beta",
                      "settings": {
                        "apiKey": "••••••••••dada",
                        "appendFieldsToEventProps": {},
                        "batchEvents": false,
                        "deviceIdFromUrlParam": false,
                        "enableLocationListening": true,
                        "endpoint": "",
                        "eventUploadPeriodMillis": 30000,
                        "eventUploadThreshold": 30,
                        "forceHttps": false,
                        "groupTypeTrait": "",
                        "groupValueTrait": "",
                        "mapQueryParams": {},
                        "preferAnonymousIdForDeviceId": false,
                        "retarget": true,
                        "saveParamsReferrerOncePerSession": true,
                        "secretKey": "",
                        "sendAlias": false,
                        "sendToBatchEndpoint": false,
                        "trackAllPages": false,
                        "trackAllPagesV2": false,
                        "trackCategorizedPages": true,
                        "trackGclid": false,
                        "trackNamedPages": true,
                        "trackProductsOnce": false,
                        "trackReferrer": true,
                        "trackRevenuePerProduct": false,
                        "trackSessionEvents": false,
                        "trackUtmProperties": true,
                        "traitsToAppend": [],
                        "traitsToIncrement": [],
                        "traitsToPrepend": [],
                        "traitsToSetOnce": [],
                        "unsetParamsReferrerOnNewSession": false,
                        "useAdvertisingIdForDeviceId": false,
                        "useAmplitudeReferral": false,
                        "useCustomAmplitudeProperties": false,
                        "useLogRevenueV2": true,
                        "versionName": ""
                      },
                      "metadata": {
                        "id": "54521fd525e721e32a72ee91",
                        "name": "Amplitude",
                        "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                        "slug": "amplitude",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "appendFieldsToEventProps",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                            "required": false,
                            "label": "Append Fields To Event Properties"
                          },
                          {
                            "name": "batchEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                            "required": false,
                            "label": "Batch Events"
                          },
                          {
                            "name": "deviceIdFromUrlParam",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                            "required": false,
                            "label": "Set Device ID From URL Parameter amp_device_id"
                          },
                          {
                            "name": "enableLocationListening",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                            "required": false,
                            "label": "Enable Location Listening"
                          },
                          {
                            "name": "endpoint",
                            "type": "select",
                            "defaultValue": "",
                            "description": "Cloud-mode Only (will not work in device-mode). Choose the endpoint corresponding to your region.",
                            "required": false,
                            "label": "Endpoint"
                          },
                          {
                            "name": "eventUploadPeriodMillis",
                            "type": "number",
                            "defaultValue": 30000,
                            "description": "Amount of time in milliseconds that the SDK waits before uploading events if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Period Millis (for batching events)"
                          },
                          {
                            "name": "eventUploadThreshold",
                            "type": "number",
                            "defaultValue": 30,
                            "description": "Minimum number of events to batch together per request if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Threshold (for batching events)"
                          },
                          {
                            "name": "forceHttps",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the events will always be uploaded to HTTPS endpoint. Otherwise the SDK will use the embedding site's protocol.",
                            "required": false,
                            "label": "Force Https"
                          },
                          {
                            "name": "groupTypeTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group type\" in group calls. If, for example, you set this to be `industry`, then `traits[\"industry\"]` will be sent as `groupType` to Amplitude.",
                            "required": false,
                            "label": "Group Type Trait"
                          },
                          {
                            "name": "groupValueTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group value\" in group calls. If, for example, you set this to be `plan`, then `traits[\"plan\"]` will be sent as `groupValue` to Amplitude.",
                            "required": false,
                            "label": "Group Value Trait"
                          },
                          {
                            "name": "mapQueryParams",
                            "type": "map",
                            "defaultValue": {},
                            "description": "When sending data via server side or Cloud Mode, you can send the custom query params that are automatically collected by `analytics.js` (or whatever you manually send under `context.page.search`), by entering a custom property name you would like to map that under on the left hand side. On the right hand side, please choose whether you want the query params to be set on the user profile or event metadata level. Whatever you put on the left hand side we will map the entire query parameters string from the `context.page.search`.",
                            "required": false,
                            "label": "Map Query Params to Custom Property"
                          },
                          {
                            "name": "preferAnonymousIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment will use `context.device.id` as the Amplitude `device_id`, using `anonymousId` if `context.device.id` isn't present.\n\nEnable this setting to flip this behavior; `anonymousId` will be used as the `device_id`, falling back to `context.device.id` if it isn't present.\n\nIn browsers, enabling this setting means the user's anonymous ID, which you can set using `analytics.user().anonymousId('ID_GOES_HERE')`, will be set as the Amplitude device ID. Otherwise, Amplitude's default logic for determining device IDs will be used.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Device ID"
                          },
                          {
                            "name": "saveParamsReferrerOncePerSession",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If true then includeGclid, includeReferrer, and includeUtm will only track their respective properties once per session. New values that come in during the middle of the user's session will be ignored. Set to false to always capture new values.",
                            "required": false,
                            "label": "Save Referrer, URL Params, GCLID Once Per Session"
                          },
                          {
                            "name": "secretKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Amplitude Secret Key (Only needed for user deletion)",
                            "required": false,
                            "label": "Secret Key"
                          },
                          {
                            "name": "sendAlias",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. Enabling this setting allows your Amplitude destination instance to send `alias` events to Amplitude's `usermap` endpoint. By default, Segment's Amplitude integration does not support `alias`, so when this setting is disabled, your Segment Amplitude destination will reject `alias` events as unsupported.",
                            "required": false,
                            "label": "Enable Alias"
                          },
                          {
                            "name": "sendToBatchEndpoint",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. If true, events are sent to Amplitude's `batch` endpoint rather than to their `httpapi` endpoint. Because Amplitude's `batch` endpoint throttles traffic less restrictively than the Amplitude `httpapi` endpoint, enabling this setting may help to reduce 429s - or throttling errors - from Amplitude. Amplitude's `batch` endpoint throttles data only when the rate of events sharing the same `user_id` or `device_id` exceeds an average of 1,000/second over a 30-second period. More information about Amplitude's throttling is available here in their docs: https://developers.amplitude.com/#429s-in-depth.",
                            "required": false,
                            "label": "Send To Batch Endpoint"
                          },
                          {
                            "name": "trackAllPages",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will track **Loaded a Page** events to Amplitude for all [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls. We keep this disabled by default, since Amplitude isn't generally used for pageview tracking.",
                            "required": false,
                            "label": "Track All Pages to Amplitude"
                          },
                          {
                            "name": "trackAllPagesV2",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile only. Sends a \"Loaded Screen\" event and the screen name as a property to Amplitude. Moving forward, this is the preferred method of tracking screen events in Amplitude.",
                            "required": false,
                            "label": "Track All Screens"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. For example `page('Docs', 'Index')` would translate to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages to Amplitude"
                          },
                          {
                            "name": "trackGclid",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, captures the gclid url parameter as well as the user's initial_gclid via a set once operation.",
                            "required": false,
                            "label": "Track GCLID"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. For example `page('Signup')` would translate to **Viewed Signup Page**. Remember that `name` includes `category`, so `page('Conversion', 'Signup')` would translate to a **Viewed Conversion Signup Page** event in Amplitude.",
                            "required": false,
                            "label": "Track Named Pages to Amplitude"
                          },
                          {
                            "name": "trackProductsOnce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Beta feature* Amplitude recently added support to submit an array of products on \"Order Completed\" events. If this setting is set to true, we will send all the products in one single event to Amplitude.",
                            "required": false,
                            "label": "Track products once"
                          },
                          {
                            "name": "trackReferrer",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Client Side Only - Enabling this will send referrer information as a user property to Amplitude when you call Segment's `page` method. ",
                            "required": false,
                            "label": "Track Referrer to Amplitude"
                          },
                          {
                            "name": "trackRevenuePerProduct",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Client and server only. This setting allows you to specify whether you would like to track an Amplitude Revenue event per individual product in a user transaction or a single Revenue event for the combined revenue of all products. This setting is only relevant if you are using our eCommerce spec and passing us an Order Completed event with a list of products.",
                            "required": false,
                            "label": "Track Revenue Per Product"
                          },
                          {
                            "name": "trackSessionEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "(Optional) This enables the sending of start and end session events for mobile products. Amplitude's libraries track sessions automatically and this option is not necessary for session tracking. ",
                            "required": false,
                            "label": "Track Session Events to Amplitude"
                          },
                          {
                            "name": "trackUtmProperties",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If Amplitude is connected in device-mode this will send the UTM properties found in the querystring. If Amplitude is connected in cloud-mode this will send the UTM properties found in the `context.campaign` object. (Note: The Analytics.js library [automatically collects](https://segment.com/docs/connections/spec/common/#context-fields-automatically-collected) the `context.campaign` object)",
                            "required": false,
                            "label": "Track UTM Properties to Amplitude."
                          },
                          {
                            "name": "traitsToAppend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be appended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Append"
                          },
                          {
                            "name": "traitsToIncrement",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Configure `trait` to increment on identify. If the trait is present, it will increment the trait given the numerical value passed in when you call `identify` with the trait.",
                            "required": false,
                            "label": "Traits To Increment"
                          },
                          {
                            "name": "traitsToPrepend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be prepended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Prepend"
                          },
                          {
                            "name": "traitsToSetOnce",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be set only once via identify.traits. ",
                            "required": false,
                            "label": "Traits to Set Once"
                          },
                          {
                            "name": "unsetParamsReferrerOnNewSession",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If false, the existing referrer and `utm_parameter` values will be carried through each new session. If set to true, the referrer and `utm_parameter` user properties, which include `referrer`, `utm_source`, `utm_medium`, `utm_campaign`, `utm_term`, and `utm_content`, will be set to null upon instantiating a new session. **Note**: This only works if Track Referrer or Track UTM Properties to Amplitude are set to true.",
                            "required": false,
                            "label": "Unset Params Referrer On New Session"
                          },
                          {
                            "name": "useAdvertisingIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile Only (will *not* work in cloud-mode). Allows users to use advertisingIdentifier instead of identifierForVendor as the Device ID.",
                            "required": false,
                            "label": "Use AdvertisingId for DeviceId"
                          },
                          {
                            "name": "useAmplitudeReferral",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Let Amplitude handle referral tracking behavior. If the \"Save Referrer, URL Params, GLCID Once Per Session\" setting isn't giving the desired behavior, this setting will fix it. Note: This setting may cause Amplitude to not fully respect the \"Prefer Anonymous ID for Device ID\" setting (Amplitude may set the device ID upon initialization before it gets set to the proper Anonymous ID) if using Analytics.js 1.0. Consider [updating to Analytics.js 2.0] (https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/upgrade-to-ajs2/) ",
                            "required": false,
                            "label": "Use Amplitude Referral"
                          },
                          {
                            "name": "useCustomAmplitudeProperties",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this option if you want to send additional 'language' and 'country' parameters inside of event_properties. This is separate from the language and country collected from your user's context. (For example, you want to send the language that a video is played in). You can send these in your properties, for example: `analytics.track('Video Played', {language: 'Japanese'});`",
                            "required": false,
                            "label": "Send Custom Language and Country Properties"
                          },
                          {
                            "name": "useLogRevenueV2",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Use Amplitude's logRevenueV2 API, which allows for the tracking of event properties with the revenue event. Track an event with \"price\" and \"quantity\" properties, and it will log total revenue = price * quantity. You may also set a revenueType property to designate the type of revenue (ex: purchase, refund, etc). Negative prices can be used to indicate revenue lost.",
                            "required": false,
                            "label": "Use Log Revenue V2 API"
                          },
                          {
                            "name": "versionName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Optional. You can assign a version name for your page, and we'll send it to Amplitude for more detailed events.",
                            "required": false,
                            "label": "Version Name"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://amplitude.com",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Amplitude"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Mike Ottavi-Brannon",
                            "email": "mike@amplitude.com",
                            "role": "Principle Product Manager",
                            "isPrimary": true
                          },
                          {
                            "name": "Kurt Norwood",
                            "email": "kurt@amplitude.com",
                            "role": "Software Engineer",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "eu-west-1",
                          "us-west-2"
                        ],
                        "regionEndpoints": [
                          "US",
                          "EU"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "66be7adba665bd11f890862c",
                      "enabled": true,
                      "name": "Example destination",
                      "settings": {
                        "apiKey": "••••••••••dada",
                        "appendFieldsToEventProps": {},
                        "batchEvents": false,
                        "deviceIdFromUrlParam": false,
                        "enableLocationListening": true,
                        "endpoint": "",
                        "eventUploadPeriodMillis": 30000,
                        "eventUploadThreshold": 30,
                        "forceHttps": false,
                        "groupTypeTrait": "",
                        "groupValueTrait": "",
                        "mapQueryParams": {},
                        "preferAnonymousIdForDeviceId": false,
                        "retarget": true,
                        "saveParamsReferrerOncePerSession": true,
                        "secretKey": "",
                        "sendAlias": false,
                        "sendToBatchEndpoint": false,
                        "trackAllPages": false,
                        "trackAllPagesV2": false,
                        "trackCategorizedPages": true,
                        "trackGclid": false,
                        "trackNamedPages": true,
                        "trackProductsOnce": false,
                        "trackReferrer": true,
                        "trackRevenuePerProduct": false,
                        "trackSessionEvents": false,
                        "trackUtmProperties": true,
                        "traitsToAppend": [],
                        "traitsToIncrement": [],
                        "traitsToPrepend": [],
                        "traitsToSetOnce": [],
                        "unsetParamsReferrerOnNewSession": false,
                        "useAdvertisingIdForDeviceId": false,
                        "useAmplitudeReferral": false,
                        "useCustomAmplitudeProperties": false,
                        "useLogRevenueV2": true,
                        "versionName": ""
                      },
                      "metadata": {
                        "id": "54521fd525e721e32a72ee91",
                        "name": "Amplitude",
                        "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                        "slug": "amplitude",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                        },
                        "options": [
                          {
                            "name": "apiKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                            "required": true,
                            "label": "API Key"
                          },
                          {
                            "name": "appendFieldsToEventProps",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                            "required": false,
                            "label": "Append Fields To Event Properties"
                          },
                          {
                            "name": "batchEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                            "required": false,
                            "label": "Batch Events"
                          },
                          {
                            "name": "deviceIdFromUrlParam",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                            "required": false,
                            "label": "Set Device ID From URL Parameter amp_device_id"
                          },
                          {
                            "name": "enableLocationListening",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                            "required": false,
                            "label": "Enable Location Listening"
                          },
                          {
                            "name": "endpoint",
                            "type": "select",
                            "defaultValue": "",
                            "description": "Cloud-mode Only (will not work in device-mode). Choose the endpoint corresponding to your region.",
                            "required": false,
                            "label": "Endpoint"
                          },
                          {
                            "name": "eventUploadPeriodMillis",
                            "type": "number",
                            "defaultValue": 30000,
                            "description": "Amount of time in milliseconds that the SDK waits before uploading events if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Period Millis (for batching events)"
                          },
                          {
                            "name": "eventUploadThreshold",
                            "type": "number",
                            "defaultValue": 30,
                            "description": "Minimum number of events to batch together per request if `batchEvents` is `true`.",
                            "required": false,
                            "label": "Event Upload Threshold (for batching events)"
                          },
                          {
                            "name": "forceHttps",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, the events will always be uploaded to HTTPS endpoint. Otherwise the SDK will use the embedding site's protocol.",
                            "required": false,
                            "label": "Force Https"
                          },
                          {
                            "name": "groupTypeTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group type\" in group calls. If, for example, you set this to be `industry`, then `traits[\"industry\"]` will be sent as `groupType` to Amplitude.",
                            "required": false,
                            "label": "Group Type Trait"
                          },
                          {
                            "name": "groupValueTrait",
                            "type": "string",
                            "defaultValue": "",
                            "description": "What trait Segment should use as your Amplitude \"group value\" in group calls. If, for example, you set this to be `plan`, then `traits[\"plan\"]` will be sent as `groupValue` to Amplitude.",
                            "required": false,
                            "label": "Group Value Trait"
                          },
                          {
                            "name": "mapQueryParams",
                            "type": "map",
                            "defaultValue": {},
                            "description": "When sending data via server side or Cloud Mode, you can send the custom query params that are automatically collected by `analytics.js` (or whatever you manually send under `context.page.search`), by entering a custom property name you would like to map that under on the left hand side. On the right hand side, please choose whether you want the query params to be set on the user profile or event metadata level. Whatever you put on the left hand side we will map the entire query parameters string from the `context.page.search`.",
                            "required": false,
                            "label": "Map Query Params to Custom Property"
                          },
                          {
                            "name": "preferAnonymousIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "By default, Segment will use `context.device.id` as the Amplitude `device_id`, using `anonymousId` if `context.device.id` isn't present.\n\nEnable this setting to flip this behavior; `anonymousId` will be used as the `device_id`, falling back to `context.device.id` if it isn't present.\n\nIn browsers, enabling this setting means the user's anonymous ID, which you can set using `analytics.user().anonymousId('ID_GOES_HERE')`, will be set as the Amplitude device ID. Otherwise, Amplitude's default logic for determining device IDs will be used.",
                            "required": false,
                            "label": "Prefer Anonymous ID for Device ID"
                          },
                          {
                            "name": "saveParamsReferrerOncePerSession",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If true then includeGclid, includeReferrer, and includeUtm will only track their respective properties once per session. New values that come in during the middle of the user's session will be ignored. Set to false to always capture new values.",
                            "required": false,
                            "label": "Save Referrer, URL Params, GCLID Once Per Session"
                          },
                          {
                            "name": "secretKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Amplitude Secret Key (Only needed for user deletion)",
                            "required": false,
                            "label": "Secret Key"
                          },
                          {
                            "name": "sendAlias",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. Enabling this setting allows your Amplitude destination instance to send `alias` events to Amplitude's `usermap` endpoint. By default, Segment's Amplitude integration does not support `alias`, so when this setting is disabled, your Segment Amplitude destination will reject `alias` events as unsupported.",
                            "required": false,
                            "label": "Enable Alias"
                          },
                          {
                            "name": "sendToBatchEndpoint",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Server-Side Only. If true, events are sent to Amplitude's `batch` endpoint rather than to their `httpapi` endpoint. Because Amplitude's `batch` endpoint throttles traffic less restrictively than the Amplitude `httpapi` endpoint, enabling this setting may help to reduce 429s - or throttling errors - from Amplitude. Amplitude's `batch` endpoint throttles data only when the rate of events sharing the same `user_id` or `device_id` exceeds an average of 1,000/second over a 30-second period. More information about Amplitude's throttling is available here in their docs: https://developers.amplitude.com/#429s-in-depth.",
                            "required": false,
                            "label": "Send To Batch Endpoint"
                          },
                          {
                            "name": "trackAllPages",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "This will track **Loaded a Page** events to Amplitude for all [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls. We keep this disabled by default, since Amplitude isn't generally used for pageview tracking.",
                            "required": false,
                            "label": "Track All Pages to Amplitude"
                          },
                          {
                            "name": "trackAllPagesV2",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile only. Sends a \"Loaded Screen\" event and the screen name as a property to Amplitude. Moving forward, this is the preferred method of tracking screen events in Amplitude.",
                            "required": false,
                            "label": "Track All Screens"
                          },
                          {
                            "name": "trackCategorizedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `category` associated with them. For example `page('Docs', 'Index')` would translate to **Viewed Docs Page**.",
                            "required": false,
                            "label": "Track Categorized Pages to Amplitude"
                          },
                          {
                            "name": "trackGclid",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If true, captures the gclid url parameter as well as the user's initial_gclid via a set once operation.",
                            "required": false,
                            "label": "Track GCLID"
                          },
                          {
                            "name": "trackNamedPages",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "This will track events to Amplitude for [`page` method](https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/#page) calls that have a `name` associated with them. For example `page('Signup')` would translate to **Viewed Signup Page**. Remember that `name` includes `category`, so `page('Conversion', 'Signup')` would translate to a **Viewed Conversion Signup Page** event in Amplitude.",
                            "required": false,
                            "label": "Track Named Pages to Amplitude"
                          },
                          {
                            "name": "trackProductsOnce",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Beta feature* Amplitude recently added support to submit an array of products on \"Order Completed\" events. If this setting is set to true, we will send all the products in one single event to Amplitude.",
                            "required": false,
                            "label": "Track products once"
                          },
                          {
                            "name": "trackReferrer",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Client Side Only - Enabling this will send referrer information as a user property to Amplitude when you call Segment's `page` method. ",
                            "required": false,
                            "label": "Track Referrer to Amplitude"
                          },
                          {
                            "name": "trackRevenuePerProduct",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Client and server only. This setting allows you to specify whether you would like to track an Amplitude Revenue event per individual product in a user transaction or a single Revenue event for the combined revenue of all products. This setting is only relevant if you are using our eCommerce spec and passing us an Order Completed event with a list of products.",
                            "required": false,
                            "label": "Track Revenue Per Product"
                          },
                          {
                            "name": "trackSessionEvents",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "(Optional) This enables the sending of start and end session events for mobile products. Amplitude's libraries track sessions automatically and this option is not necessary for session tracking. ",
                            "required": false,
                            "label": "Track Session Events to Amplitude"
                          },
                          {
                            "name": "trackUtmProperties",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "If Amplitude is connected in device-mode this will send the UTM properties found in the querystring. If Amplitude is connected in cloud-mode this will send the UTM properties found in the `context.campaign` object. (Note: The Analytics.js library [automatically collects](https://segment.com/docs/connections/spec/common/#context-fields-automatically-collected) the `context.campaign` object)",
                            "required": false,
                            "label": "Track UTM Properties to Amplitude."
                          },
                          {
                            "name": "traitsToAppend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be appended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Append"
                          },
                          {
                            "name": "traitsToIncrement",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Configure `trait` to increment on identify. If the trait is present, it will increment the trait given the numerical value passed in when you call `identify` with the trait.",
                            "required": false,
                            "label": "Traits To Increment"
                          },
                          {
                            "name": "traitsToPrepend",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be prepended to the user property array via identify.traits. ",
                            "required": false,
                            "label": "Traits to Prepend"
                          },
                          {
                            "name": "traitsToSetOnce",
                            "type": "array",
                            "defaultValue": [],
                            "description": "Server-Side and Mobile Only. Configure values to be set only once via identify.traits. ",
                            "required": false,
                            "label": "Traits to Set Once"
                          },
                          {
                            "name": "unsetParamsReferrerOnNewSession",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "If false, the existing referrer and `utm_parameter` values will be carried through each new session. If set to true, the referrer and `utm_parameter` user properties, which include `referrer`, `utm_source`, `utm_medium`, `utm_campaign`, `utm_term`, and `utm_content`, will be set to null upon instantiating a new session. **Note**: This only works if Track Referrer or Track UTM Properties to Amplitude are set to true.",
                            "required": false,
                            "label": "Unset Params Referrer On New Session"
                          },
                          {
                            "name": "useAdvertisingIdForDeviceId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Mobile Only (will *not* work in cloud-mode). Allows users to use advertisingIdentifier instead of identifierForVendor as the Device ID.",
                            "required": false,
                            "label": "Use AdvertisingId for DeviceId"
                          },
                          {
                            "name": "useAmplitudeReferral",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Let Amplitude handle referral tracking behavior. If the \"Save Referrer, URL Params, GLCID Once Per Session\" setting isn't giving the desired behavior, this setting will fix it. Note: This setting may cause Amplitude to not fully respect the \"Prefer Anonymous ID for Device ID\" setting (Amplitude may set the device ID upon initialization before it gets set to the proper Anonymous ID) if using Analytics.js 1.0. Consider [updating to Analytics.js 2.0] (https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/upgrade-to-ajs2/) ",
                            "required": false,
                            "label": "Use Amplitude Referral"
                          },
                          {
                            "name": "useCustomAmplitudeProperties",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "Enable this option if you want to send additional 'language' and 'country' parameters inside of event_properties. This is separate from the language and country collected from your user's context. (For example, you want to send the language that a video is played in). You can send these in your properties, for example: `analytics.track('Video Played', {language: 'Japanese'});`",
                            "required": false,
                            "label": "Send Custom Language and Country Properties"
                          },
                          {
                            "name": "useLogRevenueV2",
                            "type": "boolean",
                            "defaultValue": true,
                            "description": "Use Amplitude's logRevenueV2 API, which allows for the tracking of event properties with the revenue event. Track an event with \"price\" and \"quantity\" properties, and it will log total revenue = price * quantity. You may also set a revenueType property to designate the type of revenue (ex: purchase, refund, etc). Negative prices can be used to indicate revenue lost.",
                            "required": false,
                            "label": "Use Log Revenue V2 API"
                          },
                          {
                            "name": "versionName",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Optional. You can assign a version name for your page, and we'll send it to Amplitude for more detailed events.",
                            "required": false,
                            "label": "Version Name"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "http://amplitude.com",
                        "components": [
                          {
                            "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "BROWSER"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                            "owner": "SEGMENT",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "Amplitude"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": true,
                          "server": true,
                          "warehouse": false,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": true,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Mike Ottavi-Brannon",
                            "email": "mike@amplitude.com",
                            "role": "Principle Product Manager",
                            "isPrimary": true
                          },
                          {
                            "name": "Kurt Norwood",
                            "email": "kurt@amplitude.com",
                            "role": "Software Engineer",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "eu-west-1",
                          "us-west-2"
                        ],
                        "regionEndpoints": [
                          "US",
                          "EU"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.createDestination({\n      sourceId: 'rh5BDZp6QDHvXFCkibm1pR',\n      metadataId: '54521fd525e721e32a72ee91',\n      name: 'my destination v1',\n      settings: { apiKey: '3cb9b589437d3904f19b2b791c2cdada', retarget: true },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        CreateDestinationV1Input createDestinationV1Input = new CreateDestinationV1Input(); // CreateDestinationV1Input | \n        try {\n            CreateDestination200Response result = apiInstance.createDestination(createDestinationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#createDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_destination200_response import CreateDestination200Response\nfrom segment_public_api.models.create_destination_v1_input import CreateDestinationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    create_destination_v1_input = {\"sourceId\":\"rh5BDZp6QDHvXFCkibm1pR\",\"metadataId\":\"54521fd525e721e32a72ee91\",\"name\":\"my destination v1\",\"settings\":{\"apiKey\":\"3cb9b589437d3904f19b2b791c2cdada\",\"retarget\":true}} # CreateDestinationV1Input | \n\n    try:\n        # Create Destination\n        api_response = api_instance.create_destination(create_destination_v1_input)\n        print(\"The response of DestinationsApi->create_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->create_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createDestinationV1Input := *api.NewCreateDestinationV1Input(\"SourceId_example\", \"MetadataId_example\", map[string]interface{}{\"key\": interface{}(123)}) // CreateDestinationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.CreateDestination(ctx).CreateDestinationV1Input(createDestinationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.CreateDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateDestination`: CreateDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.CreateDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Destinations",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params for the request.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Destinations.",
        "operationId": "listDestinations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDestinationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [
                      {
                        "id": "5GFhvtz8fha42Cm4B9E6L8",
                        "enabled": true,
                        "name": "",
                        "settings": {
                          "region": "us-west",
                          "roleAddress": "arn::...",
                          "secretId": "secrettt",
                          "stream": "bla"
                        },
                        "metadata": {
                          "id": "57da359580412f644ff33fb9",
                          "name": "Amazon Kinesis",
                          "description": "Amazon Kinesis Streams enables you to build custom applications that process or analyze streaming data for specialized needs. Amazon Kinesis Streams can continuously capture and store terabytes of data per hour from hundreds of thousands of sources such as website clickstreams, financial transactions, social media feeds, IT logs, and location-tracking events.",
                          "slug": "amazon-kinesis",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qr7D6jkLQvd1KAJlY8Zp",
                            "mark": "https://cdn.filepicker.io/api/file/zLZbfcBeSZTfX4CsgBvA"
                          },
                          "options": [
                            {
                              "name": "region",
                              "type": "string",
                              "defaultValue": "us-west-2",
                              "description": "The Kinesis Stream's AWS region key",
                              "required": true,
                              "label": "AWS Kinesis Stream Region"
                            },
                            {
                              "name": "roleAddress",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The address of the AWS role that will be writing to Kinesis (ex: arn:aws:iam::874699288871:role/example-role)",
                              "required": true,
                              "label": "Role Address"
                            },
                            {
                              "name": "secretId",
                              "type": "string",
                              "defaultValue": "#SEGMENT_WORKSPACE_ID",
                              "description": "The External ID to your IAM role. This value is read-only. Reach out to support if you wish to change it. This value is also a secret and should be treated as a password.",
                              "required": true,
                              "label": "Secret ID (Read-Only)"
                            },
                            {
                              "name": "stream",
                              "type": "string",
                              "defaultValue": "",
                              "description": "The Kinesis Stream Name",
                              "required": true,
                              "label": "AWS Kinesis Stream Name"
                            },
                            {
                              "name": "useMessageId",
                              "type": "boolean",
                              "defaultValue": false,
                              "description": "You can enable this option if you want to use the Segment generated `messageId` for the **Partition Key**. If you have issues with too many `provisionedthroughputexceededexceptions` errors, this means that your Segment events are not being evenly distributed across your buckets as you do not have even user event distribution (*default partition key is `userId` or `anonymousId`*). This option should provide much more stable and even distribution.",
                              "required": false,
                              "label": "Use Segment Message ID"
                            }
                          ],
                          "status": "PUBLIC",
                          "categories": [
                            "Analytics",
                            "Raw Data"
                          ],
                          "website": "https://aws.amazon.com/kinesis/streams/",
                          "components": [
                            {
                              "code": "https://github.com/segmentio/integrations/tree/master/integrations/amazon-kinesis",
                              "type": "SERVER"
                            }
                          ],
                          "previousNames": [
                            "Amazon Kinesis"
                          ],
                          "supportedMethods": {
                            "track": true,
                            "pageview": true,
                            "identify": true,
                            "group": true,
                            "alias": true
                          },
                          "supportedPlatforms": {
                            "browser": true,
                            "mobile": true,
                            "server": true,
                            "warehouse": false
                          },
                          "supportedFeatures": {
                            "cloudModeInstances": "0",
                            "deviceModeInstances": "0",
                            "replay": true,
                            "browserUnbundling": false,
                            "browserUnbundlingPublic": true
                          },
                          "actions": [],
                          "presets": [],
                          "contacts": [],
                          "partnerOwned": false
                        },
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.listDestinations())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Required pagination params for the request.  This parameter exists in v1.\n        try {\n            ListDestinations200Response result = apiInstance.listDestinations(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#listDestinations\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_destinations200_response import ListDestinations200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Required pagination params for the request.  This parameter exists in v1. (optional)\n\n    try:\n        # List Destinations\n        api_response = api_instance.list_destinations(pagination=pagination)\n        print(\"The response of DestinationsApi->list_destinations:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->list_destinations: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Required pagination params for the request.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.ListDestinations(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.ListDestinations``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListDestinations`: ListDestinations200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.ListDestinations`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destinations/{destinationId}/subscriptions": {
      "post": {
        "summary": "Create Destination Subscription",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a new Destination subscription.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 5 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createDestinationSubscription",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationSubscriptionAlphaInput"
              },
              "example": {
                "name": "Example Subscription",
                "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                "trigger": "type = \"track\"",
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDestinationSubscriptionAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationSubscription": {
                      "id": "5LMtids98TMVeiir4HKeD3",
                      "name": "Example Subscription",
                      "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                      "actionSlug": "someActionSlug",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "modelId": "",
                      "enabled": false,
                      "trigger": "type = \"track\"",
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.createDestinationSubscription('fP7qoQw2HTWt9WdMr718gn', {\n      name: 'Example Subscription',\n      actionId: 'jiMz7MfHNeHmUckzRnUGkU',\n      trigger: 'type = \"track\"',\n      enabled: false,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        CreateDestinationSubscriptionAlphaInput createDestinationSubscriptionAlphaInput = new CreateDestinationSubscriptionAlphaInput(); // CreateDestinationSubscriptionAlphaInput | \n        try {\n            CreateDestinationSubscription200Response result = apiInstance.createDestinationSubscription(destinationId, createDestinationSubscriptionAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#createDestinationSubscription\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_destination_subscription200_response import CreateDestinationSubscription200Response\nfrom segment_public_api.models.create_destination_subscription_alpha_input import CreateDestinationSubscriptionAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    create_destination_subscription_alpha_input = {\"name\":\"Example Subscription\",\"actionId\":\"jiMz7MfHNeHmUckzRnUGkU\",\"trigger\":\"type = \\\"track\\\"\",\"enabled\":false} # CreateDestinationSubscriptionAlphaInput | \n\n    try:\n        # Create Destination Subscription\n        api_response = api_instance.create_destination_subscription(destination_id, create_destination_subscription_alpha_input)\n        print(\"The response of DestinationsApi->create_destination_subscription:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->create_destination_subscription: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    createDestinationSubscriptionAlphaInput := *api.NewCreateDestinationSubscriptionAlphaInput(\"Name_example\", \"ActionId_example\", \"Trigger_example\", false) // CreateDestinationSubscriptionAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.CreateDestinationSubscription(ctx, destinationId).CreateDestinationSubscriptionAlphaInput(createDestinationSubscriptionAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.CreateDestinationSubscription``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateDestinationSubscription`: CreateDestinationSubscription200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.CreateDestinationSubscription`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Subscriptions from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=3"
          }
        ],
        "deprecated": false,
        "description": "Lists subscriptions for a Destination.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listSubscriptionsFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSubscriptionsFromDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "subscriptions": [
                      {
                        "id": "eoeXaMeAYcB2XvEApJDrQs",
                        "name": "Test Subscription",
                        "actionId": "uD9jEQ4DxJZzhzVqppM7UD",
                        "actionSlug": "Public API Slug",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "modelId": "",
                        "enabled": true,
                        "trigger": "type = \"track\"",
                        "settings": {}
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.listSubscriptionsFromDestination('fP7qoQw2HTWt9WdMr718gn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination options.  This parameter exists in alpha.\n        try {\n            ListSubscriptionsFromDestination200Response result = apiInstance.listSubscriptionsFromDestination(destinationId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#listSubscriptionsFromDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_subscriptions_from_destination200_response import ListSubscriptionsFromDestination200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination options.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Subscriptions from Destination\n        api_response = api_instance.list_subscriptions_from_destination(destination_id, pagination=pagination)\n        print(\"The response of DestinationsApi->list_subscriptions_from_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->list_subscriptions_from_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination options.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.ListSubscriptionsFromDestination(ctx, destinationId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.ListSubscriptionsFromDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSubscriptionsFromDestination`: ListSubscriptionsFromDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.ListSubscriptionsFromDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/customer-insights/download": {
      "post": {
        "summary": "Create Download",
        "parameters": [],
        "deprecated": false,
        "description": "Create Customer Insights Presigned URLsThe rate limit for this endpoint is 120 requests per day per workspaceId, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createDownload",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDownloadAlphaInput"
              },
              "example": {
                "collectionId": "2wmpXTGB69A8BwGJ4hD5XvQ03aD",
                "hour": "2006-01-02T15:04:05.000Z"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateDownloadAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "download": {
                      "urls": [
                        "http://gran-obs-collections.s3.dualstack.us-west-2.amazonaws.com/collections/v1/9y433Y71snvrWKfchyBbu9/2wmpXTGB69A8BwGJ4hD5XvQ03aD/2025-05-07/23/1746660916489.granular-obs-collection-archiver-0..c32d1a32-8c80-4c86-823c-49a4446d43b7.gz?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAVFNABYVJRJ4XBOIS%2F20250520%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250520T162448Z&X-Amz-Expires=7200&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEPH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIFbzWLOBMoyNc56Rw85O7zGJyKkGHBBMwUXHL2aPBdCRAiEApkc2l2mmKcZpi4xZJBSokzkakmtSjpoEjtaDLoEhGikqiwUIqv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAFGgwzNTUyMDczMzMyMDMiDJREWhd98U2OwbZZlCrfBCPT0K%2B%2BSzEiie9dtOC%2FRUvE%2Fz7EUHCP5oAgO5K16Z2ruRtz4lXdJC0gfhUQNIu31yMOubvjy9QA%2BC1hY2EqCwBr%2FIylxOD7OUQmO9CxJCVBZi%2B1kl0IdgaClucvp1vFPTFQUcDmAbXD%2FSmvdRAfWoU5qTBBbPKf2gAcKOPG4j6VzywpEI%2Ba0XzTch7pcTUDCk9VgdbOQKgJkUZGZolXhb5wxDscciq%2BAo3w1NRgF3gb9nCUtLKlQ0lKJL34GnE9r2xMESVF9glQ2XX%2FdHsG2jcaHJpts56eYvRujGORnb2noYHzjCzoDovrpafETBwj3Y1bp4ul9rlv2EqyQT75LFzZYp0AdD1kIqLmS7Iory75ZIAezDM0GgQcCZ6lW%2Bxogekw46L726wje8oXBFJZ1xISBAAoQ%2Fsx76OpMy%2BlCeIVJ5hs10PlDTbDPcT%2Bausf%2BE9ANz%2FPxYzcW9Kg5O5h5fp10M5%2FQKH7hbL0dAWpfXpTsu%2FgAzC8tt0oX9wSGD%2FRkp%2FH7wgbcgYk9g6%2BwVvyCHgfNDZva9ElUmeRc7xoZ9FkIbPEwPkVwPu%2FGTTkpO%2BohriNrdAK9pEDXHSg9AQJ1JFo4AWh%2F%2Bc5FEFP3h4%2BWlbSI13S%2BDU7GhP8NFZ8TNfFZo%2BFZVOd5SeKDXVj970Zad1ZxRHENqbLh5VrkRb196IbyKSOZ5%2FbEEZySp6oYKWNOZqugilhLvqBEqhWcwN%2FRgvm9a1YaDg63RUNmsAgq4%2FS%2BrO6p%2B%2BdN299u6mO10RtniNSBbuEQA%2FUZKydjwxmvEmD74wBJRHemARbMO%2FBC%2F4w0NmywQY6mwGJY%2FPHQoBv9H4rw8sl8y8kUejknGAbe4VI70HmKp59tliuqdmdjykdKxiPNZeZEu2Z%2BHwMadUi46teuqZWzVp3SkT2FoGSR%2FO%2Fy0gY3ukqoLkOLH8QngrJNDwo4%2BEKjaTDB8WYscPCKF%2Fapq7qiYBImw4YFlbIShCdjGNgiOnjBgCxjvqACjP3qR4Dq84AcmZ1WpPLTGwjrwYiDQ%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a159cd651058b010c752936fadf9665c2ddd9df1d992da374b9db62ec2a536a0"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "customer-insights"
        ],
        "tags": [
          "customer-insights"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.customerInsights.createDownload({ collectionId: '2wmpXTGB69A8BwGJ4hD5XvQ03aD', hour: '2006-01-02T15:04:05.000Z' })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CustomerInsightsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CustomerInsightsApi apiInstance = new CustomerInsightsApi(defaultClient);\n        CreateDownloadAlphaInput createDownloadAlphaInput = new CreateDownloadAlphaInput(); // CreateDownloadAlphaInput | \n        try {\n            CreateDownload200Response result = apiInstance.createDownload(createDownloadAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CustomerInsightsApi#createDownload\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_download200_response import CreateDownload200Response\nfrom segment_public_api.models.create_download_alpha_input import CreateDownloadAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CustomerInsightsApi(api_client)\n    create_download_alpha_input = {\"collectionId\":\"2wmpXTGB69A8BwGJ4hD5XvQ03aD\",\"hour\":\"2006-01-02T15:04:05.000Z\"} # CreateDownloadAlphaInput | \n\n    try:\n        # Create Download\n        api_response = api_instance.create_download(create_download_alpha_input)\n        print(\"The response of CustomerInsightsApi->create_download:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CustomerInsightsApi->create_download: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createDownloadAlphaInput := *api.NewCreateDownloadAlphaInput(\"CollectionId_example\", \"Hour_example\") // CreateDownloadAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CustomerInsightsAPI.CreateDownload(ctx).CreateDownloadAlphaInput(createDownloadAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CustomerInsightsAPI.CreateDownload``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateDownload`: CreateDownload200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CustomerInsightsAPI.CreateDownload`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions": {
      "post": {
        "summary": "Create Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Create EdgeFunctions for your Source given a valid upload URL for an Edge Functions bundle.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createEdgeFunctions",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEdgeFunctionsAlphaInput"
              },
              "example": {
                "uploadURL": "<upload_url>"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "edgeFunctions": {
                      "id": "4a502354-637c-4b5f-bd46-281f7c973fbd",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "downloadURL": "https://cdn.edgefn.segment.build/qQEHquLrjRDN9j1ByrChyn/4a502354-637c-4b5f-bd46-281f7c973fbd.js",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.createEdgeFunctions('qQEHquLrjRDN9j1ByrChyn', { uploadURL: '<upload_url>' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.EdgeFunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        EdgeFunctionsApi apiInstance = new EdgeFunctionsApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        CreateEdgeFunctionsAlphaInput createEdgeFunctionsAlphaInput = new CreateEdgeFunctionsAlphaInput(); // CreateEdgeFunctionsAlphaInput | \n        try {\n            CreateEdgeFunctions200Response result = apiInstance.createEdgeFunctions(sourceId, createEdgeFunctionsAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling EdgeFunctionsApi#createEdgeFunctions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_edge_functions200_response import CreateEdgeFunctions200Response\nfrom segment_public_api.models.create_edge_functions_alpha_input import CreateEdgeFunctionsAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.EdgeFunctionsApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    create_edge_functions_alpha_input = {\"uploadURL\":\"<upload_url>\"} # CreateEdgeFunctionsAlphaInput | \n\n    try:\n        # Create Edge Functions\n        api_response = api_instance.create_edge_functions(source_id, create_edge_functions_alpha_input)\n        print(\"The response of EdgeFunctionsApi->create_edge_functions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling EdgeFunctionsApi->create_edge_functions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    createEdgeFunctionsAlphaInput := *api.NewCreateEdgeFunctionsAlphaInput(\"UploadURL_example\") // CreateEdgeFunctionsAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.EdgeFunctionsAPI.CreateEdgeFunctions(ctx, sourceId).CreateEdgeFunctionsAlphaInput(createEdgeFunctionsAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `EdgeFunctionsAPI.CreateEdgeFunctions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateEdgeFunctions`: CreateEdgeFunctions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `EdgeFunctionsAPI.CreateEdgeFunctions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destination/{destinationId}/filters": {
      "post": {
        "summary": "Create Filter for Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a filter in a Destination.\n\n\n\n• When called, this endpoint may generate the `Destination Filter Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createFilterForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForDestinationV1Input"
              },
              "example": {
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "title": "Filter \"Identify\" events",
                "description": "Drop Identify tracking from this destination",
                "if": "type = \"identify\"",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2c0vbh2htbJmSvPJSeDypz3CjVg",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2c0vbh2htbJmSvPJSeDypz3CjVg",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2c0vbLHKox2UkEw578lvdk03leL",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "2c0vatbrE0P57F16BGV9xrA0aOn",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "type = \"identify\"",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Filter \"Identify\" events",
                      "description": "Drop Identify tracking from this destination",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinationFilters.createFilterForDestination('fP7qoQw2HTWt9WdMr718gn', {\n      sourceId: 'rh5BDZp6QDHvXFCkibm1pR',\n      title: 'Filter \"Identify\" events',\n      description: 'Drop Identify tracking from this destination',\n      if: 'type = \"identify\"',\n      actions: [{ type: 'DROP' }],\n      enabled: true,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationFiltersApi apiInstance = new DestinationFiltersApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        CreateFilterForDestinationV1Input createFilterForDestinationV1Input = new CreateFilterForDestinationV1Input(); // CreateFilterForDestinationV1Input | \n        try {\n            CreateFilterForDestination200Response result = apiInstance.createFilterForDestination(destinationId, createFilterForDestinationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationFiltersApi#createFilterForDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_filter_for_destination200_response import CreateFilterForDestination200Response\nfrom segment_public_api.models.create_filter_for_destination_v1_input import CreateFilterForDestinationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationFiltersApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    create_filter_for_destination_v1_input = {\"sourceId\":\"rh5BDZp6QDHvXFCkibm1pR\",\"title\":\"Filter \\\"Identify\\\" events\",\"description\":\"Drop Identify tracking from this destination\",\"if\":\"type = \\\"identify\\\"\",\"actions\":[{\"type\":\"DROP\"}],\"enabled\":true} # CreateFilterForDestinationV1Input | \n\n    try:\n        # Create Filter for Destination\n        api_response = api_instance.create_filter_for_destination(destination_id, create_filter_for_destination_v1_input)\n        print(\"The response of DestinationFiltersApi->create_filter_for_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationFiltersApi->create_filter_for_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    createFilterForDestinationV1Input := *api.NewCreateFilterForDestinationV1Input(\"SourceId_example\", \"If_example\", []api.DestinationFilterActionV1{*api.NewDestinationFilterActionV1(\"Type_example\")}, \"Title_example\", false) // CreateFilterForDestinationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationFiltersAPI.CreateFilterForDestination(ctx, destinationId).CreateFilterForDestinationV1Input(createFilterForDestinationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationFiltersAPI.CreateFilterForDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateFilterForDestination`: CreateFilterForDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationFiltersAPI.CreateFilterForDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Filters from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "qtiZHLLqqsHmpvLXNtP5du",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=3"
          }
        ],
        "deprecated": false,
        "description": "Lists filters for a Destination.",
        "operationId": "listFiltersFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "py8vAgox9DyyJfgYcWY8Bd",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "qtiZHLLqqsHmpvLXNtP5du",
                        "if": "!(type = \"track\")",
                        "actions": [
                          {
                            "type": "DROP"
                          }
                        ],
                        "title": "Allow Track",
                        "description": "Allows track calls through to the destination.",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "py8vAgox9DyyJfgYcWY8Bd",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "qtiZHLLqqsHmpvLXNtP5du",
                        "if": "!(type = \"track\")",
                        "actions": [
                          {
                            "type": "DROP"
                          }
                        ],
                        "title": "Allow Track",
                        "description": "Allows track calls through to the destination.",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "py8vAgox9DyyJfgYcWY8Bd",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "qtiZHLLqqsHmpvLXNtP5du",
                        "if": "!(type = \"track\")",
                        "actions": [
                          {
                            "type": "DROP"
                          }
                        ],
                        "title": "Allow Track",
                        "description": "Allows track calls through to the destination.",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "py8vAgox9DyyJfgYcWY8Bd",
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationId": "qtiZHLLqqsHmpvLXNtP5du",
                        "if": "event = \"Order Completed\"",
                        "actions": [
                          {
                            "type": "DROP_PROPERTIES",
                            "fields": {
                              "properties": [
                                "userId",
                                "secretValue"
                              ]
                            }
                          }
                        ],
                        "title": "Order Completed",
                        "description": "This filter probably does nothing",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinationFilters.listFiltersFromDestination('qtiZHLLqqsHmpvLXNtP5du'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationFiltersApi apiInstance = new DestinationFiltersApi(defaultClient);\n        String destinationId = \"qtiZHLLqqsHmpvLXNtP5du\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination options.  This parameter exists in v1.\n        try {\n            ListFiltersFromDestination200Response result = apiInstance.listFiltersFromDestination(destinationId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationFiltersApi#listFiltersFromDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_filters_from_destination200_response import ListFiltersFromDestination200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationFiltersApi(api_client)\n    destination_id = 'qtiZHLLqqsHmpvLXNtP5du' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    try:\n        # List Filters from Destination\n        api_response = api_instance.list_filters_from_destination(destination_id, pagination=pagination)\n        print(\"The response of DestinationFiltersApi->list_filters_from_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationFiltersApi->list_filters_from_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"qtiZHLLqqsHmpvLXNtP5du\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationFiltersAPI.ListFiltersFromDestination(ctx, destinationId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationFiltersAPI.ListFiltersFromDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListFiltersFromDestination`: ListFiltersFromDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationFiltersAPI.ListFiltersFromDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/filters": {
      "post": {
        "summary": "Create Filter for Space",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a filter for a space. A space filter applies to events coming from all Sources connected to a space.\n\n\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Space Filters feature enabled. Please reach out to your customer success manager for more information.\n\n\n• When called, this endpoint may generate the `Filter Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createFilterForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForSpaceInput"
              },
              "example": {
                "integrationId": "<id>",
                "name": "Test filter",
                "if": "type = \"track\""
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFilterForSpaceInput"
              },
              "example": {
                "integrationId": "<id>",
                "name": "Test filter",
                "if": "type = \"track\""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForSpaceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "<id>",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "integrationId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "test",
                      "if": "all",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFilterForSpaceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "<id>",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "integrationId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "test",
                      "if": "all",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Space Filters"
        ],
        "tags": [
          "Space Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaceFilters.createFilterForSpace({ integrationId: '<id>', name: 'Test filter', if: 'type = \"track\"' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpaceFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpaceFiltersApi apiInstance = new SpaceFiltersApi(defaultClient);\n        CreateFilterForSpaceInput createFilterForSpaceInput = new CreateFilterForSpaceInput(); // CreateFilterForSpaceInput | \n        try {\n            CreateFilterForSpace200Response result = apiInstance.createFilterForSpace(createFilterForSpaceInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpaceFiltersApi#createFilterForSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_filter_for_space200_response import CreateFilterForSpace200Response\nfrom segment_public_api.models.create_filter_for_space_input import CreateFilterForSpaceInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpaceFiltersApi(api_client)\n    create_filter_for_space_input = {\"integrationId\":\"<id>\",\"name\":\"Test filter\",\"if\":\"type = \\\"track\\\"\"} # CreateFilterForSpaceInput | \n\n    try:\n        # Create Filter for Space\n        api_response = api_instance.create_filter_for_space(create_filter_for_space_input)\n        print(\"The response of SpaceFiltersApi->create_filter_for_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpaceFiltersApi->create_filter_for_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createFilterForSpaceInput := *api.NewCreateFilterForSpaceInput(\"IntegrationId_example\", \"Name_example\", \"If_example\") // CreateFilterForSpaceInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpaceFiltersAPI.CreateFilterForSpace(ctx).CreateFilterForSpaceInput(createFilterForSpaceInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpaceFiltersAPI.CreateFilterForSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateFilterForSpace`: CreateFilterForSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpaceFiltersAPI.CreateFilterForSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Filters for Space",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "integrationId",
            "description": "The Space Id for which to fetch filters\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The Space Id for which to fetch filters",
              "type": "string",
              "title": "integrationId"
            },
            "example": "<id>"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/ListFiltersPaginationInput"
            },
            "example": "pagination.count=3"
          }
        ],
        "deprecated": false,
        "description": "Lists filters for a space.\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Space Filters feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listFiltersForSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersForSpaceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "test",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "integrationId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Test filter",
                        "if": "type = 'track'",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFiltersForSpaceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filters": [
                      {
                        "id": "test",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "integrationId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Test filter",
                        "if": "type = 'track'",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Space Filters"
        ],
        "tags": [
          "Space Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaceFilters.listFiltersForSpace('<id>'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpaceFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpaceFiltersApi apiInstance = new SpaceFiltersApi(defaultClient);\n        String integrationId = \"<id>\"; // String | The Space Id for which to fetch filters  This parameter exists in beta.\n        ListFiltersPaginationInput pagination = new ListFiltersPaginationInput(); // ListFiltersPaginationInput | Pagination parameters.  This parameter exists in beta.\n        try {\n            ListFiltersForSpace200Response result = apiInstance.listFiltersForSpace(integrationId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpaceFiltersApi#listFiltersForSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_filters_for_space200_response import ListFiltersForSpace200Response\nfrom segment_public_api.models.list_filters_pagination_input import ListFiltersPaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpaceFiltersApi(api_client)\n    integration_id = '<id>' # str | The Space Id for which to fetch filters  This parameter exists in beta.\n    pagination = segment_public_api.ListFiltersPaginationInput() # ListFiltersPaginationInput | Pagination parameters.  This parameter exists in beta. (optional)\n\n    try:\n        # List Filters for Space\n        api_response = api_instance.list_filters_for_space(integration_id, pagination=pagination)\n        print(\"The response of SpaceFiltersApi->list_filters_for_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpaceFiltersApi->list_filters_for_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    integrationId := \"<id>\" // string | The Space Id for which to fetch filters  This parameter exists in beta.\n    pagination := *api.NewListFiltersPaginationInput(float32(123)) // ListFiltersPaginationInput | Pagination parameters.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpaceFiltersAPI.ListFiltersForSpace(ctx).IntegrationId(integrationId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpaceFiltersAPI.ListFiltersForSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListFiltersForSpace`: ListFiltersForSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpaceFiltersAPI.ListFiltersForSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/functions": {
      "post": {
        "summary": "Create Function",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "settings": [
                  {
                    "name": "apiKey",
                    "label": "api key",
                    "type": "STRING",
                    "description": "api key",
                    "required": false,
                    "sensitive": false
                  },
                  {
                    "name": "mySecret",
                    "label": "my secret key",
                    "type": "STRING",
                    "description": "secret key",
                    "required": false,
                    "sensitive": true
                  }
                ],
                "displayName": "PAPI Source Function",
                "resourceType": "SOURCE",
                "logoUrl": "https://placekitten.com/200/139",
                "description": "My source function"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.createFunction({\n      code: '// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions',\n      settings: [\n        { name: 'apiKey', label: 'api key', type: 'STRING', description: 'api key', required: false, sensitive: false },\n        { name: 'mySecret', label: 'my secret key', type: 'STRING', description: 'secret key', required: false, sensitive: true },\n      ],\n      displayName: 'PAPI Source Function',\n      resourceType: 'SOURCE',\n      logoUrl: 'https://placekitten.com/200/139',\n      description: 'My source function',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        CreateFunctionV1Input createFunctionV1Input = new CreateFunctionV1Input(); // CreateFunctionV1Input | \n        try {\n            CreateFunction200Response result = apiInstance.createFunction(createFunctionV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#createFunction\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_function200_response import CreateFunction200Response\nfrom segment_public_api.models.create_function_v1_input import CreateFunctionV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    create_function_v1_input = {\"code\":\"// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions\",\"settings\":[{\"name\":\"apiKey\",\"label\":\"api key\",\"type\":\"STRING\",\"description\":\"api key\",\"required\":false,\"sensitive\":false},{\"name\":\"mySecret\",\"label\":\"my secret key\",\"type\":\"STRING\",\"description\":\"secret key\",\"required\":false,\"sensitive\":true}],\"displayName\":\"PAPI Source Function\",\"resourceType\":\"SOURCE\",\"logoUrl\":\"https://placekitten.com/200/139\",\"description\":\"My source function\"} # CreateFunctionV1Input | \n\n    try:\n        # Create Function\n        api_response = api_instance.create_function(create_function_v1_input)\n        print(\"The response of FunctionsApi->create_function:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->create_function: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createFunctionV1Input := *api.NewCreateFunctionV1Input(\"Code_example\", \"DisplayName_example\", \"ResourceType_example\") // CreateFunctionV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.CreateFunction(ctx).CreateFunctionV1Input(createFunctionV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.CreateFunction``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateFunction`: CreateFunction200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.CreateFunction`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Functions",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          },
          {
            "in": "query",
            "required": true,
            "name": "resourceType",
            "description": "The Function type.\n\nConfig API note: equal to `type`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The Function type.\n\nConfig API note: equal to `type`.",
              "enum": [
                "DESTINATION",
                "INSERT_DESTINATION",
                "INSERT_SOURCE",
                "SOURCE"
              ],
              "type": "string",
              "title": "resourceType"
            },
            "example": "SOURCE"
          }
        ],
        "deprecated": false,
        "description": "Lists all Functions in a Workspace.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functions": [
                      {
                        "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                        "displayName": "PAPI Source Function",
                        "description": "My source function",
                        "logoUrl": "https://placekitten.com/200/139",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                        "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                        "resourceType": "SOURCE"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.listFunctions('SOURCE'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination parameters.  This parameter exists in v1.\n        String resourceType = \"DESTINATION\"; // String | The Function type.  Config API note: equal to `type`.  This parameter exists in v1.\n        try {\n            ListFunctions200Response result = apiInstance.listFunctions(pagination, resourceType);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#listFunctions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_functions200_response import ListFunctions200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    resource_type = 'SOURCE' # str | The Function type.  Config API note: equal to `type`.  This parameter exists in v1.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Functions\n        api_response = api_instance.list_functions(resource_type, pagination=pagination)\n        print(\"The response of FunctionsApi->list_functions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->list_functions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    resourceType := \"SOURCE\" // string | The Function type.  Config API note: equal to `type`.  This parameter exists in v1.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.ListFunctions(ctx).ResourceType(resourceType).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.ListFunctions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListFunctions`: ListFunctions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.ListFunctions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/functions/{functionId}/deploy": {
      "post": {
        "summary": "Create Function Deployment",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfn_rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deploys a Function. Only applicable to Source Function instances.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createFunctionDeployment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateFunctionDeploymentV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "functionDeployment": {
                      "status": "SUCCESS"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.createFunctionDeployment('sfn_rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfn_rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        try {\n            CreateFunctionDeployment200Response result = apiInstance.createFunctionDeployment(functionId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#createFunctionDeployment\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_function_deployment200_response import CreateFunctionDeployment200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfn_rh5BDZp6QDHvXFCkibm1pR' # str | \n\n    try:\n        # Create Function Deployment\n        api_response = api_instance.create_function_deployment(function_id)\n        print(\"The response of FunctionsApi->create_function_deployment:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->create_function_deployment: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfn_rh5BDZp6QDHvXFCkibm1pR\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.CreateFunctionDeployment(ctx, functionId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.CreateFunctionDeployment``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateFunctionDeployment`: CreateFunctionDeployment200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.CreateFunctionDeployment`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/insert-function-instances": {
      "post": {
        "summary": "Create Insert Function Instance",
        "parameters": [],
        "deprecated": false,
        "description": "Creates an insert Function instance connected to the given Destination.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createInsertFunctionInstance",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInsertFunctionInstanceAlphaInput"
              },
              "example": {
                "functionId": "76365637324e715a67535831",
                "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                "name": "Example insert function instance",
                "settings": {
                  "apiKey": "XYZ"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "insertFunctionInstance": {
                      "id": "65c2bdbade6f2d8297f943d5",
                      "name": "Example insert function instance",
                      "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                      "classId": "76365637324e715a67535831",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "settings": {
                        "apiKey": "XYZ"
                      },
                      "encryptedSettings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.createInsertFunctionInstance({\n      functionId: '76365637324e715a67535831',\n      integrationId: 'fP7qoQw2HTWt9WdMr718gn',\n      name: 'Example insert function instance',\n      settings: { apiKey: 'XYZ' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        CreateInsertFunctionInstanceAlphaInput createInsertFunctionInstanceAlphaInput = new CreateInsertFunctionInstanceAlphaInput(); // CreateInsertFunctionInstanceAlphaInput | \n        try {\n            CreateInsertFunctionInstance200Response result = apiInstance.createInsertFunctionInstance(createInsertFunctionInstanceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#createInsertFunctionInstance\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_insert_function_instance200_response import CreateInsertFunctionInstance200Response\nfrom segment_public_api.models.create_insert_function_instance_alpha_input import CreateInsertFunctionInstanceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    create_insert_function_instance_alpha_input = {\"functionId\":\"76365637324e715a67535831\",\"integrationId\":\"fP7qoQw2HTWt9WdMr718gn\",\"name\":\"Example insert function instance\",\"settings\":{\"apiKey\":\"XYZ\"}} # CreateInsertFunctionInstanceAlphaInput | \n\n    try:\n        # Create Insert Function Instance\n        api_response = api_instance.create_insert_function_instance(create_insert_function_instance_alpha_input)\n        print(\"The response of FunctionsApi->create_insert_function_instance:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->create_insert_function_instance: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createInsertFunctionInstanceAlphaInput := *api.NewCreateInsertFunctionInstanceAlphaInput(\"FunctionId_example\", \"IntegrationId_example\", \"Name_example\", map[string]interface{}{\"key\": interface{}(123)}) // CreateInsertFunctionInstanceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.CreateInsertFunctionInstance(ctx).CreateInsertFunctionInstanceAlphaInput(createInsertFunctionInstanceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.CreateInsertFunctionInstance``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateInsertFunctionInstance`: CreateInsertFunctionInstance200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.CreateInsertFunctionInstance`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Insert Function Instances",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          },
          {
            "in": "query",
            "required": true,
            "name": "functionId",
            "description": "The insert Function class id to lookup.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The insert Function class id to lookup.",
              "type": "string",
              "title": "functionId"
            },
            "example": "76365637324e715a67535831"
          }
        ],
        "deprecated": false,
        "description": "Lists all insert Function instances connected to the given insert Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listInsertFunctionInstances",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInsertFunctionInstancesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "instances": [
                      {
                        "id": "65c2bdbbde6f2d8297f943d6",
                        "name": "Example insert function instance",
                        "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                        "classId": "76365637324e715a67535831",
                        "enabled": true,
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "settings": {
                          "apiKey": "XYZ"
                        },
                        "encryptedSettings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.listInsertFunctionInstances('76365637324e715a67535831'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination parameters.  This parameter exists in alpha.\n        String functionId = \"76365637324e715a67535831\"; // String | The insert Function class id to lookup.  This parameter exists in alpha.\n        try {\n            ListInsertFunctionInstances200Response result = apiInstance.listInsertFunctionInstances(pagination, functionId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#listInsertFunctionInstances\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_insert_function_instances200_response import ListInsertFunctionInstances200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = '76365637324e715a67535831' # str | The insert Function class id to lookup.  This parameter exists in alpha.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination parameters.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Insert Function Instances\n        api_response = api_instance.list_insert_function_instances(function_id, pagination=pagination)\n        print(\"The response of FunctionsApi->list_insert_function_instances:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->list_insert_function_instances: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"76365637324e715a67535831\" // string | The insert Function class id to lookup.  This parameter exists in alpha.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination parameters.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.ListInsertFunctionInstances(ctx).FunctionId(functionId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.ListInsertFunctionInstances``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListInsertFunctionInstances`: ListInsertFunctionInstances200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.ListInsertFunctionInstances`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/invites": {
      "post": {
        "summary": "Create Invites",
        "parameters": [],
        "deprecated": false,
        "description": "Invites a list of users to join a Workspace.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Non-Segment User Invited to Workspace\n* Policy Created\n* New Segment User Invited to Workspace\n\nConfig API omitted fields:\n- `parent`\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createInvites",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitesV1Input"
              },
              "example": {
                "invites": [
                  {
                    "email": "foo@example.com",
                    "permissions": [
                      {
                        "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "resources": [
                          {
                            "id": "9aQ1Lj62S4bomZKLF4DPqW",
                            "type": "WORKSPACE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [
                      "foo@example.com"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.iamUsers.createInvites({\n      invites: [\n        {\n          email: 'foo@example.com',\n          permissions: [{ roleId: '1WDUuRLxv84rrfCNUwvkrRtkxnS', resources: [{ id: '9aQ1Lj62S4bomZKLF4DPqW', type: 'WORKSPACE' }] }],\n        },\n      ],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        CreateInvitesV1Input createInvitesV1Input = new CreateInvitesV1Input(); // CreateInvitesV1Input | \n        try {\n            CreateInvites201Response result = apiInstance.createInvites(createInvitesV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#createInvites\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_invites201_response import CreateInvites201Response\nfrom segment_public_api.models.create_invites_v1_input import CreateInvitesV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    create_invites_v1_input = {\"invites\":[{\"email\":\"foo@example.com\",\"permissions\":[{\"roleId\":\"1WDUuRLxv84rrfCNUwvkrRtkxnS\",\"resources\":[{\"id\":\"9aQ1Lj62S4bomZKLF4DPqW\",\"type\":\"WORKSPACE\"}]}]}]} # CreateInvitesV1Input | \n\n    try:\n        # Create Invites\n        api_response = api_instance.create_invites(create_invites_v1_input)\n        print(\"The response of IAMUsersApi->create_invites:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->create_invites: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createInvitesV1Input := *api.NewCreateInvitesV1Input([]api.InviteV1{*api.NewInviteV1(\"Email_example\")}) // CreateInvitesV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.CreateInvites(ctx).CreateInvitesV1Input(createInvitesV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.CreateInvites``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateInvites`: CreateInvites201Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.CreateInvites`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Delete Invites",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "emails",
            "description": "The list of emails to delete invites for.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The list of emails to delete invites for.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "emails"
            },
            "example": "emails.0=foo%40example.com"
          }
        ],
        "deprecated": false,
        "description": "Removes a list of invitations to join a Workspace.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Invite Deleted\n* Group Memberships Deleted\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteInvites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.deleteInvites('emails.0=foo%40example.com'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        List<String> emails = Arrays.asList(); // List<String> | The list of emails to delete invites for.  This parameter exists in v1.\n        try {\n            DeleteInvites200Response result = apiInstance.deleteInvites(emails);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#deleteInvites\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_invites200_response import DeleteInvites200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    emails = ['emails.0=foo%40example.com'] # List[str] | The list of emails to delete invites for.  This parameter exists in v1.\n\n    try:\n        # Delete Invites\n        api_response = api_instance.delete_invites(emails)\n        print(\"The response of IAMUsersApi->delete_invites:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->delete_invites: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    emails := []string{\"Inner_example\"} // []string | The list of emails to delete invites for.  This parameter exists in v1.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.DeleteInvites(ctx).Emails(emails).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.DeleteInvites``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteInvites`: DeleteInvites200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.DeleteInvites`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Invites",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of invitations to join a Workspace.\n\nConfig API omitted fields:\n- `parent`\n",
        "operationId": "listInvites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "invites": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "invites": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    },
                    "invites": [
                      "foo@example.com"
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    },
                    "invites": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.listInvites())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListInvites200Response result = apiInstance.listInvites(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#listInvites\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_invites200_response import ListInvites200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Invites\n        api_response = api_instance.list_invites(pagination=pagination)\n        print(\"The response of IAMUsersApi->list_invites:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->list_invites: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.ListInvites(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.ListInvites``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListInvites`: ListInvites200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.ListInvites`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/labels": {
      "post": {
        "summary": "Create Label",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new label.\n\n\n\n• When called, this endpoint may generate the `Label Created` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createLabel",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLabelV1Input"
              },
              "example": {
                "label": {
                  "key": "environment",
                  "value": "yolo",
                  "description": "an environment for courageous devs"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "label": {
                      "key": "environment",
                      "value": "yolo",
                      "description": "an environment for courageous devs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Labels"
        ],
        "tags": [
          "Labels"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.labels.createLabel({ label: { key: 'environment', value: 'yolo', description: 'an environment for courageous devs' } })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.LabelsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        LabelsApi apiInstance = new LabelsApi(defaultClient);\n        CreateLabelV1Input createLabelV1Input = new CreateLabelV1Input(); // CreateLabelV1Input | \n        try {\n            CreateLabel201Response result = apiInstance.createLabel(createLabelV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling LabelsApi#createLabel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_label201_response import CreateLabel201Response\nfrom segment_public_api.models.create_label_v1_input import CreateLabelV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.LabelsApi(api_client)\n    create_label_v1_input = {\"label\":{\"key\":\"environment\",\"value\":\"yolo\",\"description\":\"an environment for courageous devs\"}} # CreateLabelV1Input | \n\n    try:\n        # Create Label\n        api_response = api_instance.create_label(create_label_v1_input)\n        print(\"The response of LabelsApi->create_label:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling LabelsApi->create_label: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createLabelV1Input := *api.NewCreateLabelV1Input(*api.NewLabelV1(\"Key_example\", \"Value_example\")) // CreateLabelV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.LabelsAPI.CreateLabel(ctx).CreateLabelV1Input(createLabelV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `LabelsAPI.CreateLabel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateLabel`: CreateLabel201Response\n    fmt.Fprintf(os.Stdout, \"Response from `LabelsAPI.CreateLabel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Labels",
        "parameters": [],
        "deprecated": false,
        "description": "Returns a list of all available labels.",
        "operationId": "listLabels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      },
                      {
                        "key": "type",
                        "value": "web",
                        "description": "labels source as web"
                      }
                    ]
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      },
                      {
                        "key": "type",
                        "value": "web",
                        "description": "labels source as web"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      },
                      {
                        "key": "type",
                        "value": "web",
                        "description": "labels source as web"
                      }
                    ]
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListLabelsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "labels": [
                      {
                        "key": "environment",
                        "value": "dev",
                        "description": ""
                      },
                      {
                        "key": "environment",
                        "value": "prod",
                        "description": ""
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Labels"
        ],
        "tags": [
          "Labels"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.labels.listLabels())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.LabelsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        LabelsApi apiInstance = new LabelsApi(defaultClient);\n        try {\n            ListLabels200Response result = apiInstance.listLabels();\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling LabelsApi#listLabels\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_labels200_response import ListLabels200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.LabelsApi(api_client)\n\n    try:\n        # List Labels\n        api_response = api_instance.list_labels()\n        print(\"The response of LabelsApi->list_labels:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling LabelsApi->list_labels: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.LabelsAPI.ListLabels(ctx).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `LabelsAPI.ListLabels``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListLabels`: ListLabels200Response\n    fmt.Fprintf(os.Stdout, \"Response from `LabelsAPI.ListLabels`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/profiles-warehouses": {
      "post": {
        "summary": "Create Profiles Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a new Profiles Warehouse.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createProfilesWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProfilesWarehouseAlphaInput"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {
                  "username": "CONNECTOR_UNIT_TEST_USER",
                  "password": "test_password",
                  "auth_type": "password_auth",
                  "account": "segment",
                  "warehouse": "ENGINEERING",
                  "database": "TEST_DB"
                },
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateProfilesWarehouseAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "profilesWarehouse": {
                      "id": "qABd3NVTPfTLQ3kXWoBhgi",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.createProfilesWarehouse('9aQ1Lj62S4bomZKLF4DPqW', {\n      metadataId: 'CCIl4HLQPz',\n      settings: {\n        username: 'CONNECTOR_UNIT_TEST_USER',\n        password: 'test_password',\n        auth_type: 'password_auth',\n        account: 'segment',\n        warehouse: 'ENGINEERING',\n        database: 'TEST_DB',\n      },\n      enabled: true,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ProfilesSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ProfilesSyncApi apiInstance = new ProfilesSyncApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        CreateProfilesWarehouseAlphaInput createProfilesWarehouseAlphaInput = new CreateProfilesWarehouseAlphaInput(); // CreateProfilesWarehouseAlphaInput | \n        try {\n            CreateProfilesWarehouse201Response result = apiInstance.createProfilesWarehouse(spaceId, createProfilesWarehouseAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ProfilesSyncApi#createProfilesWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_profiles_warehouse201_response import CreateProfilesWarehouse201Response\nfrom segment_public_api.models.create_profiles_warehouse_alpha_input import CreateProfilesWarehouseAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ProfilesSyncApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    create_profiles_warehouse_alpha_input = {\"metadataId\":\"CCIl4HLQPz\",\"settings\":{\"username\":\"CONNECTOR_UNIT_TEST_USER\",\"password\":\"test_password\",\"auth_type\":\"password_auth\",\"account\":\"segment\",\"warehouse\":\"ENGINEERING\",\"database\":\"TEST_DB\"},\"enabled\":true} # CreateProfilesWarehouseAlphaInput | \n\n    try:\n        # Create Profiles Warehouse\n        api_response = api_instance.create_profiles_warehouse(space_id, create_profiles_warehouse_alpha_input)\n        print(\"The response of ProfilesSyncApi->create_profiles_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProfilesSyncApi->create_profiles_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    createProfilesWarehouseAlphaInput := *api.NewCreateProfilesWarehouseAlphaInput(\"MetadataId_example\", map[string]interface{}{\"key\": interface{}(123)}) // CreateProfilesWarehouseAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ProfilesSyncAPI.CreateProfilesWarehouse(ctx, spaceId).CreateProfilesWarehouseAlphaInput(createProfilesWarehouseAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ProfilesSyncAPI.CreateProfilesWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateProfilesWarehouse`: CreateProfilesWarehouse201Response\n    fmt.Fprintf(os.Stdout, \"Response from `ProfilesSyncAPI.CreateProfilesWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Profiles Warehouse in Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            }
          }
        ],
        "deprecated": false,
        "description": "Lists all Profile Warehouses for a given space id.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Retrieved` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "listProfilesWarehouseInSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListProfilesWarehouseInSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "profilesWarehouses": [
                      {
                        "id": "qABd3NVTPfTLQ3kXWoBhgi",
                        "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "CCIl4HLQPz",
                          "slug": "snowflake",
                          "name": "Snowflake",
                          "description": "Data warehouse built for the cloud",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                            "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                            "alt": ""
                          },
                          "options": []
                        },
                        "settings": {
                          "name": "Snowflake"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.profilesSync.listProfilesWarehouseInSpace('9aQ1Lj62S4bomZKLF4DPqW'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ProfilesSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ProfilesSyncApi apiInstance = new ProfilesSyncApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha.\n        try {\n            ListProfilesWarehouseInSpace200Response result = apiInstance.listProfilesWarehouseInSpace(spaceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ProfilesSyncApi#listProfilesWarehouseInSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_profiles_warehouse_in_space200_response import ListProfilesWarehouseInSpace200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ProfilesSyncApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Profiles Warehouse in Space\n        api_response = api_instance.list_profiles_warehouse_in_space(space_id, pagination=pagination)\n        print(\"The response of ProfilesSyncApi->list_profiles_warehouse_in_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProfilesSyncApi->list_profiles_warehouse_in_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ProfilesSyncAPI.ListProfilesWarehouseInSpace(ctx, spaceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ProfilesSyncAPI.ListProfilesWarehouseInSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListProfilesWarehouseInSpace`: ListProfilesWarehouseInSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ProfilesSyncAPI.ListProfilesWarehouseInSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/reverse-etl-syncs": {
      "post": {
        "summary": "Create Reverse ETL Manual Sync",
        "parameters": [],
        "deprecated": false,
        "description": "Triggers a manual sync for a Reverse ETL Connection. \n\nIn the request body, the `subscription id` is the id that follows after `/mappings/` portion in the URL of the sync. \n\nFor example, the `subscription id` would be `2` for this sync: https://app.Segment.com/example-workspace/reverse-etl/destinations/example-destination/sources/example-source/instances/1/mappings/2/source-id/3/model-id/4/sync-details\n\n\nThe rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createReverseETLManualSync",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReverseETLManualSyncInput"
              },
              "example": {
                "sourceId": "sourceId",
                "modelId": "modelId",
                "subscriptionId": "subscriptionId"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateReverseETLManualSyncOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseETLManualSync": {
                      "startedAt": "2023-11-22T01:07:19.571346969Z",
                      "syncId": "startjob-2YVeaiMPrApykGSvVlY6bCcEtvd"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.reverseEtl.createReverseETLManualSync({ sourceId: 'sourceId', modelId: 'modelId', subscriptionId: 'subscriptionId' })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        CreateReverseETLManualSyncInput createReverseETLManualSyncInput = new CreateReverseETLManualSyncInput(); // CreateReverseETLManualSyncInput | \n        try {\n            CreateReverseETLManualSync200Response result = apiInstance.createReverseETLManualSync(createReverseETLManualSyncInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#createReverseETLManualSync\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_reverse_etl_manual_sync200_response import CreateReverseETLManualSync200Response\nfrom segment_public_api.models.create_reverse_etl_manual_sync_input import CreateReverseETLManualSyncInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    create_reverse_etl_manual_sync_input = {\"sourceId\":\"sourceId\",\"modelId\":\"modelId\",\"subscriptionId\":\"subscriptionId\"} # CreateReverseETLManualSyncInput | \n\n    try:\n        # Create Reverse ETL Manual Sync\n        api_response = api_instance.create_reverse_etl_manual_sync(create_reverse_etl_manual_sync_input)\n        print(\"The response of ReverseETLApi->create_reverse_etl_manual_sync:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->create_reverse_etl_manual_sync: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createReverseETLManualSyncInput := *api.NewCreateReverseETLManualSyncInput(\"SourceId_example\", \"ModelId_example\", \"SubscriptionId_example\") // CreateReverseETLManualSyncInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.CreateReverseETLManualSync(ctx).CreateReverseETLManualSyncInput(createReverseETLManualSyncInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.CreateReverseETLManualSync``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateReverseETLManualSync`: CreateReverseETLManualSync200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.CreateReverseETLManualSync`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/reverse-etl-models": {
      "post": {
        "summary": "Create Reverse Etl Model",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Reverse ETL Model.\n\n      \n\n• When called, this endpoint may generate the `Model Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createReverseEtlModel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReverseEtlModelInput"
              },
              "example": {
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "name": "Model 1",
                "description": "This model is very useful.",
                "enabled": true,
                "query": "SELECT 'user_1' AS id",
                "queryIdentifierColumn": "id"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseEtlModel": {
                      "id": "pmoNLgeTB2AGfSDgoTT6qA",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "name": "Model 1",
                      "description": "This model is very useful.",
                      "enabled": true,
                      "query": "SELECT 'user_1' AS id",
                      "queryIdentifierColumn": "id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.reverseEtl.createReverseEtlModel({\n      sourceId: 'qQEHquLrjRDN9j1ByrChyn',\n      name: 'Model 1',\n      description: 'This model is very useful.',\n      enabled: true,\n      query: \"SELECT 'user_1' AS id\",\n      queryIdentifierColumn: 'id',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        CreateReverseEtlModelInput createReverseEtlModelInput = new CreateReverseEtlModelInput(); // CreateReverseEtlModelInput | \n        try {\n            CreateReverseEtlModel201Response result = apiInstance.createReverseEtlModel(createReverseEtlModelInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#createReverseEtlModel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_reverse_etl_model201_response import CreateReverseEtlModel201Response\nfrom segment_public_api.models.create_reverse_etl_model_input import CreateReverseEtlModelInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    create_reverse_etl_model_input = {\"sourceId\":\"qQEHquLrjRDN9j1ByrChyn\",\"name\":\"Model 1\",\"description\":\"This model is very useful.\",\"enabled\":true,\"query\":\"SELECT 'user_1' AS id\",\"queryIdentifierColumn\":\"id\"} # CreateReverseEtlModelInput | \n\n    try:\n        # Create Reverse Etl Model\n        api_response = api_instance.create_reverse_etl_model(create_reverse_etl_model_input)\n        print(\"The response of ReverseETLApi->create_reverse_etl_model:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->create_reverse_etl_model: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createReverseEtlModelInput := *api.NewCreateReverseEtlModelInput(\"SourceId_example\", \"Name_example\", \"Description_example\", false, \"Query_example\", \"QueryIdentifierColumn_example\") // CreateReverseEtlModelInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.CreateReverseEtlModel(ctx).CreateReverseEtlModelInput(createReverseEtlModelInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.CreateReverseEtlModel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateReverseEtlModel`: CreateReverseEtlModel201Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.CreateReverseEtlModel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Reverse Etl Models",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Reverse ETL Models.",
        "operationId": "listReverseEtlModels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListReverseEtlModelsOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "models": [
                      {
                        "id": "2QfwyeQY3Keba1qZx3BNbp",
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "name": "Model 1",
                        "description": "This model is very useful.",
                        "enabled": true,
                        "query": "SELECT 'user_1' AS id",
                        "queryIdentifierColumn": "id"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.listReverseEtlModels())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha.\n        try {\n            ListReverseEtlModels200Response result = apiInstance.listReverseEtlModels(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#listReverseEtlModels\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_reverse_etl_models200_response import ListReverseEtlModels200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Reverse Etl Models\n        api_response = api_instance.list_reverse_etl_models(pagination=pagination)\n        print(\"The response of ReverseETLApi->list_reverse_etl_models:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->list_reverse_etl_models: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.ListReverseEtlModels(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.ListReverseEtlModels``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListReverseEtlModels`: ListReverseEtlModels200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.ListReverseEtlModels`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources": {
      "post": {
        "summary": "Create Source",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Source.\n\n\n\n• When called, this endpoint may generate the `Source Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceV1Input"
              },
              "example": {
                "slug": "my-test-source-2gwoon",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceV1Input"
              },
              "example": {
                "slug": "my-test-source-2gwoon",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceV1Input"
              },
              "example": {
                "slug": "my-test-source-ydw29x",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceAlphaInput"
              },
              "example": {
                "slug": "my-test-source-egfsfe",
                "name": "My Source",
                "enabled": true,
                "metadataId": "IqDTy1TpoU",
                "settings": {}
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "9btKuCR4Wq674VajpuLDNV",
                      "slug": "my-test-source-2gwoon",
                      "name": "my-test-source-2gwoon",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "3qvaDYqXPZjAcVM0nAPlfQrREHEFTcVz"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "9btKuCR4Wq674VajpuLDNV",
                      "slug": "my-test-source-2gwoon",
                      "name": "my-test-source-2gwoon",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "3qvaDYqXPZjAcVM0nAPlfQrREHEFTcVz"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "XuSrrLPwgKpJUMhYo8Evs",
                      "slug": "my-test-source-ydw29x",
                      "name": "my-test-source-ydw29x",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "73bH2aRYIyuxr9uTcA9LYM6g4MlMB1yL"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "6vqREqT87Bq4CfcCjwkrPz",
                      "slug": "my-test-source-egfsfe",
                      "name": "My Source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "BgfVXlNu1oRMeG5Szbd8bMtHK8lM0cDF"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.sources.createSource({ slug: 'my-test-source-2gwoon', enabled: true, metadataId: 'IqDTy1TpoU', settings: {} })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        CreateSourceV1Input createSourceV1Input = new CreateSourceV1Input(); // CreateSourceV1Input | \n        try {\n            CreateSource201Response result = apiInstance.createSource(createSourceV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#createSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_source201_response import CreateSource201Response\nfrom segment_public_api.models.create_source_v1_input import CreateSourceV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    create_source_v1_input = {\"slug\":\"my-test-source-2gwoon\",\"enabled\":true,\"metadataId\":\"IqDTy1TpoU\",\"settings\":{}} # CreateSourceV1Input | \n\n    try:\n        # Create Source\n        api_response = api_instance.create_source(create_source_v1_input)\n        print(\"The response of SourcesApi->create_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->create_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createSourceV1Input := *api.NewCreateSourceV1Input(\"Slug_example\", false, \"MetadataId_example\") // CreateSourceV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.CreateSource(ctx).CreateSourceV1Input(createSourceV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.CreateSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateSource`: CreateSource201Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.CreateSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Sources",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Sources.",
        "operationId": "listSources",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSourcesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      },
                      {
                        "id": "rh5BDZp6QDHvXFCkibm1pR",
                        "slug": "web",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "dfL8upyPumumx23SjgwHjs"
                        ],
                        "metadata": {
                          "id": "IqDTy1TpoU",
                          "slug": "javascript",
                          "name": "Javascript",
                          "categories": [
                            "Website"
                          ],
                          "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                            "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listSources())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha.\n        try {\n            ListSources200Response result = apiInstance.listSources(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#listSources\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_sources200_response import ListSources200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Sources\n        api_response = api_instance.list_sources(pagination=pagination)\n        print(\"The response of SourcesApi->list_sources:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->list_sources: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.ListSources(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.ListSources``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSources`: ListSources200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.ListSources`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/regulations/sources/{sourceId}": {
      "post": {
        "summary": "Create Source Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a Source-scoped regulation. \n\n Please Note: Suppression rules at the Workspace level take precedence over those at the Source level. If a user has been suppressed at the Workspace level, any attempt to un-suppress at the Source level is not supported and the processing of the request will fail in Segment\n\n\n\n• When called, this endpoint may generate the `Source Regulation Created` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createSourceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateSourceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deletionAndSuppression.createSourceRegulation('qQEHquLrjRDN9j1ByrChyn', {\n      regulationType: 'SUPPRESS_ONLY',\n      subjectType: 'USER_ID',\n      subjectIds: ['test_user_id_1'],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        CreateSourceRegulationV1Input createSourceRegulationV1Input = new CreateSourceRegulationV1Input(); // CreateSourceRegulationV1Input | \n        try {\n            CreateSourceRegulation200Response result = apiInstance.createSourceRegulation(sourceId, createSourceRegulationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#createSourceRegulation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_source_regulation200_response import CreateSourceRegulation200Response\nfrom segment_public_api.models.create_source_regulation_v1_input import CreateSourceRegulationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    create_source_regulation_v1_input = {\"regulationType\":\"SUPPRESS_ONLY\",\"subjectType\":\"USER_ID\",\"subjectIds\":[\"test_user_id_1\"]} # CreateSourceRegulationV1Input | \n\n    try:\n        # Create Source Regulation\n        api_response = api_instance.create_source_regulation(source_id, create_source_regulation_v1_input)\n        print(\"The response of DeletionAndSuppressionApi->create_source_regulation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->create_source_regulation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    createSourceRegulationV1Input := *api.NewCreateSourceRegulationV1Input(\"RegulationType_example\", \"SubjectType_example\", []string{\"SubjectIds_example\"}) // CreateSourceRegulationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.CreateSourceRegulation(ctx, sourceId).CreateSourceRegulationV1Input(createSourceRegulationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.CreateSourceRegulation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateSourceRegulation`: CreateSourceRegulation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.CreateSourceRegulation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Regulations from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "status",
            "description": "The status on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The status on which to filter returned regulations.",
              "enum": [
                "FAILED",
                "FINISHED",
                "INITIALIZED",
                "INVALID",
                "NOT_SUPPORTED",
                "PARTIAL_SUCCESS",
                "RUNNING"
              ],
              "type": "string",
              "title": "status"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulationTypes",
            "description": "The regulation types on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The regulation types on which to filter returned regulations.",
              "type": "array",
              "items": {
                "enum": [
                  "DELETE_ARCHIVE_ONLY",
                  "DELETE_INTERNAL",
                  "DELETE_ONLY",
                  "SUPPRESS_ONLY",
                  "SUPPRESS_WITH_DELETE",
                  "SUPPRESS_WITH_DELETE_INTERNAL",
                  "UNSUPPRESS"
                ],
                "type": "string"
              },
              "title": "regulationTypes"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Lists all Source-scoped regulations.",
        "operationId": "listRegulationsFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "SUPPRESS_ONLY",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "SUPPRESS_ONLY",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "SUPPRESS_ONLY",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRegulationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjectType": "OBJECT_ID",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "regulationType": "SUPPRESS_ONLY",
                        "status": "FINISHED",
                        "createdAt": "2022-03-08T00:39:36.546951Z"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.listRegulationsFromSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        String status = \"FAILED\"; // String | The status on which to filter returned regulations.  This parameter exists in v1.\n        List<String> regulationTypes = Arrays.asList(); // List<String> | The regulation types on which to filter returned regulations.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination parameters.  This parameter exists in v1.\n        try {\n            ListRegulationsFromSource200Response result = apiInstance.listRegulationsFromSource(sourceId, status, regulationTypes, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#listRegulationsFromSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_regulations_from_source200_response import ListRegulationsFromSource200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    status = 'status_example' # str | The status on which to filter returned regulations.  This parameter exists in v1. (optional)\n    regulation_types = ['regulation_types_example'] # List[str] | The regulation types on which to filter returned regulations.  This parameter exists in v1. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Regulations from Source\n        api_response = api_instance.list_regulations_from_source(source_id, status=status, regulation_types=regulation_types, pagination=pagination)\n        print(\"The response of DeletionAndSuppressionApi->list_regulations_from_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->list_regulations_from_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    status := \"status_example\" // string | The status on which to filter returned regulations.  This parameter exists in v1. (optional)\n    regulationTypes := []string{\"RegulationTypes_example\"} // []string | The regulation types on which to filter returned regulations.  This parameter exists in v1. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.ListRegulationsFromSource(ctx, sourceId).Status(status).RegulationTypes(regulationTypes).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.ListRegulationsFromSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListRegulationsFromSource`: ListRegulationsFromSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.ListRegulationsFromSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/tracking-plans": {
      "post": {
        "summary": "Create Tracking Plan",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackingPlanV1Input"
              },
              "example": {
                "name": "New TP",
                "type": "LIVE"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.createTrackingPlan({ name: 'New TP', type: 'LIVE' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        CreateTrackingPlanV1Input createTrackingPlanV1Input = new CreateTrackingPlanV1Input(); // CreateTrackingPlanV1Input | \n        try {\n            CreateTrackingPlan200Response result = apiInstance.createTrackingPlan(createTrackingPlanV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#createTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_tracking_plan200_response import CreateTrackingPlan200Response\nfrom segment_public_api.models.create_tracking_plan_v1_input import CreateTrackingPlanV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    create_tracking_plan_v1_input = {\"name\":\"New TP\",\"type\":\"LIVE\"} # CreateTrackingPlanV1Input | \n\n    try:\n        # Create Tracking Plan\n        api_response = api_instance.create_tracking_plan(create_tracking_plan_v1_input)\n        print(\"The response of TrackingPlansApi->create_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->create_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createTrackingPlanV1Input := *api.NewCreateTrackingPlanV1Input(\"Name_example\", \"Type_example\") // CreateTrackingPlanV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.CreateTrackingPlan(ctx).CreateTrackingPlanV1Input(createTrackingPlanV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.CreateTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateTrackingPlan`: CreateTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.CreateTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Tracking Plans",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "type",
            "description": "Requests Tracking Plans of a certain type. If omitted, lists all types.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Requests Tracking Plans of a certain type. If omitted, lists all types.",
              "enum": [
                "ENGAGE",
                "LIVE",
                "PROPERTY_LIBRARY",
                "RULE_LIBRARY",
                "TEMPLATE"
              ],
              "type": "string",
              "title": "type"
            },
            "example": "LIVE"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Tracking Plans.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listTrackingPlans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTrackingPlansV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlans": [
                      {
                        "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                        "name": "New TP",
                        "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                        "slug": "",
                        "description": "",
                        "type": "LIVE",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "createdAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.listTrackingPlans())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String type = \"ENGAGE\"; // String | Requests Tracking Plans of a certain type. If omitted, lists all types.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination options.  This parameter exists in v1.\n        try {\n            ListTrackingPlans200Response result = apiInstance.listTrackingPlans(type, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#listTrackingPlans\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_tracking_plans200_response import ListTrackingPlans200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    type = 'LIVE' # str | Requests Tracking Plans of a certain type. If omitted, lists all types.  This parameter exists in v1. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    try:\n        # List Tracking Plans\n        api_response = api_instance.list_tracking_plans(type=type, pagination=pagination)\n        print(\"The response of TrackingPlansApi->list_tracking_plans:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->list_tracking_plans: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    type_ := \"LIVE\" // string | Requests Tracking Plans of a certain type. If omitted, lists all types.  This parameter exists in v1. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.ListTrackingPlans(ctx).Type_(type_).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.ListTrackingPlans``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListTrackingPlans`: ListTrackingPlans200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.ListTrackingPlans`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/transformations": {
      "post": {
        "summary": "Create Transformation",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Transformation.\n\n\n\n• When called, this endpoint may generate the `Transformation Created` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "createTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.some-property",
                      "context.some-property"
                    ],
                    "propertyValue": "some property value"
                  }
                ],
                "if": "event = 'Example Event V1'"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.some-property",
                      "context.some-property"
                    ],
                    "propertyValue": "some property value"
                  }
                ],
                "if": "event = 'Example Event V1'"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.some-property",
                      "context.some-property"
                    ],
                    "propertyValue": "some property value"
                  }
                ],
                "if": "event = 'Example Event Beta'"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransformationV1Input"
              },
              "example": {
                "name": "Name of the new transformation",
                "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                "enabled": true,
                "newEventName": "new-event-name",
                "propertyRenames": [
                  {
                    "oldName": "old-name",
                    "newName": "new-name"
                  },
                  {
                    "oldName": "another-name-old",
                    "newName": "another-name-new"
                  }
                ],
                "if": "event = 'Example Event Alpha'"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2c0vWrvonKH66Ml527NOmS8LHF0",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event V1'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.some-property",
                            "context.some-property"
                          ],
                          "propertyValue": "some property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2c0vWrvonKH66Ml527NOmS8LHF0",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event V1'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.some-property",
                            "context.some-property"
                          ],
                          "propertyValue": "some property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2c0vWLHfrXlOr5Y0dO3S0yGYW8r",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event Beta'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.some-property",
                            "context.some-property"
                          ],
                          "propertyValue": "some property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "2c0vVod8qrbEsOTf9McBWT7Qizc",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Name of the new transformation",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'Example Event Alpha'",
                      "newEventName": "new-event-name",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-name",
                          "newName": "new-name"
                        },
                        {
                          "oldName": "another-name-old",
                          "newName": "another-name-new"
                        }
                      ],
                      "propertyValueTransformations": [],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.transformations.createTransformation({\n      name: 'Name of the new transformation',\n      sourceId: 'qQEHquLrjRDN9j1ByrChyn',\n      enabled: true,\n      newEventName: 'new-event-name',\n      propertyRenames: [\n        { oldName: 'old-name', newName: 'new-name' },\n        { oldName: 'another-name-old', newName: 'another-name-new' },\n      ],\n      propertyValueTransformations: [\n        { propertyPaths: ['properties.some-property', 'context.some-property'], propertyValue: 'some property value' },\n      ],\n      if: \"event = 'Example Event V1'\",\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TransformationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TransformationsApi apiInstance = new TransformationsApi(defaultClient);\n        CreateTransformationV1Input createTransformationV1Input = new CreateTransformationV1Input(); // CreateTransformationV1Input | \n        try {\n            CreateTransformation200Response result = apiInstance.createTransformation(createTransformationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TransformationsApi#createTransformation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_transformation200_response import CreateTransformation200Response\nfrom segment_public_api.models.create_transformation_v1_input import CreateTransformationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TransformationsApi(api_client)\n    create_transformation_v1_input = {\"name\":\"Name of the new transformation\",\"sourceId\":\"qQEHquLrjRDN9j1ByrChyn\",\"enabled\":true,\"newEventName\":\"new-event-name\",\"propertyRenames\":[{\"oldName\":\"old-name\",\"newName\":\"new-name\"},{\"oldName\":\"another-name-old\",\"newName\":\"another-name-new\"}],\"propertyValueTransformations\":[{\"propertyPaths\":[\"properties.some-property\",\"context.some-property\"],\"propertyValue\":\"some property value\"}],\"if\":\"event = 'Example Event V1'\"} # CreateTransformationV1Input | \n\n    try:\n        # Create Transformation\n        api_response = api_instance.create_transformation(create_transformation_v1_input)\n        print(\"The response of TransformationsApi->create_transformation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TransformationsApi->create_transformation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createTransformationV1Input := *api.NewCreateTransformationV1Input(\"Name_example\", \"SourceId_example\", false, \"If_example\") // CreateTransformationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TransformationsAPI.CreateTransformation(ctx).CreateTransformationV1Input(createTransformationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TransformationsAPI.CreateTransformation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateTransformation`: CreateTransformation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TransformationsAPI.CreateTransformation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Transformations",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=20"
          }
        ],
        "deprecated": false,
        "description": "Lists all Transformations in the Workspace.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listTransformations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "2c0vWLHfrXlOr5Y0dO3S0yGYW8r",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Beta'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "context.some-property",
                              "properties.some-property"
                            ],
                            "propertyValue": "some property value"
                          }
                        ],
                        "allowProperties": []
                      },
                      {
                        "id": "2c0vVod8qrbEsOTf9McBWT7Qizc",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Alpha'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order Completed",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "event = \"Order Completed\"",
                        "propertyDrops": [
                          "properties.userId",
                          "properties.secretValue"
                        ],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "updated-name",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "547610a5db31d978f14a5c4e",
                        "if": "event=\"my-event\"",
                        "newEventName": "my-updated-event",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-property",
                            "newName": "new-property"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "properties.another-property"
                            ],
                            "propertyValue": "another property value"
                          }
                        ],
                        "allowProperties": []
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 7
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "2c0vWLHfrXlOr5Y0dO3S0yGYW8r",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Beta'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "context.some-property",
                              "properties.some-property"
                            ],
                            "propertyValue": "some property value"
                          }
                        ],
                        "allowProperties": []
                      },
                      {
                        "id": "2c0vVod8qrbEsOTf9McBWT7Qizc",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Alpha'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          },
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order Completed",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "event = \"Order Completed\"",
                        "propertyDrops": [
                          "properties.userId",
                          "properties.secretValue"
                        ],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "updated-name",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "547610a5db31d978f14a5c4e",
                        "if": "event=\"my-event\"",
                        "newEventName": "my-updated-event",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-property",
                            "newName": "new-property"
                          }
                        ],
                        "propertyValueTransformations": [
                          {
                            "propertyPaths": [
                              "properties.another-property"
                            ],
                            "propertyValue": "another property value"
                          }
                        ],
                        "allowProperties": []
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 7
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "2c0vVod8qrbEsOTf9McBWT7Qizc",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Name of the new transformation",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'Example Event Alpha'",
                        "newEventName": "new-event-name",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "another-name-old",
                            "newName": "another-name-new"
                          },
                          {
                            "oldName": "old-name",
                            "newName": "new-name"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order Completed",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "event = \"Order Completed\"",
                        "propertyDrops": [
                          "properties.userId",
                          "properties.secretValue"
                        ],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "updated-name",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "547610a5db31d978f14a5c4e",
                        "if": "event=\"my-event\"",
                        "newEventName": "my-updated-event",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "old-property",
                            "newName": "new-property"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 6
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListTransformationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformations": [
                      {
                        "id": "c5EmPMhTGmgwoas8YCKXgs",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order cancelled event rename in destination",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "if": "event = 'Order Cancelled'",
                        "newEventName": "order_cancelled",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "xx6AySGeFExzdv2Gw2EuhV",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Order Completed",
                        "enabled": true,
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "destinationMetadataId": "54521fd725e721e32a72eebb",
                        "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                        "if": "event = \"Order Completed\"",
                        "propertyDrops": [
                          "properties.userId",
                          "properties.secretValue"
                        ],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "rBoBnPKiAek36M192XJsYQ",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit identify event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "type = 'identify'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Group",
                            "newName": "group"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "pHrD51Ds35Zjfka84yXQE6",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked edit track event",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "propertyDrops": [],
                        "propertyRenames": [
                          {
                            "oldName": "Category",
                            "newName": "category"
                          }
                        ],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      },
                      {
                        "id": "ks7SJDAn4XvW4VykJSQVz7",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "User clicked event rename",
                        "enabled": true,
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "if": "event = 'User Clicked'",
                        "newEventName": "user_clicked",
                        "propertyDrops": [],
                        "propertyRenames": [],
                        "propertyValueTransformations": [],
                        "allowProperties": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 5
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.transformations.listTransformations())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TransformationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TransformationsApi apiInstance = new TransformationsApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination options.  This parameter exists in v1.\n        try {\n            ListTransformations200Response result = apiInstance.listTransformations(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TransformationsApi#listTransformations\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_transformations200_response import ListTransformations200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TransformationsApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    try:\n        # List Transformations\n        api_response = api_instance.list_transformations(pagination=pagination)\n        print(\"The response of TransformationsApi->list_transformations:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TransformationsApi->list_transformations: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TransformationsAPI.ListTransformations(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TransformationsAPI.ListTransformations``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListTransformations`: ListTransformations200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TransformationsAPI.ListTransformations`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/groups": {
      "post": {
        "summary": "Create User Group",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a user group.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* User Group Created\n* Policy Created\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "createUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group Nbr5tuI40h"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group Nbr5tuI40h"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group RSg4kuxjAv"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupV1Input"
              },
              "example": {
                "name": "New User Group MXUFvPaVlD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2c0vcOBQRrwQrEKEDcJODSE0Znj",
                      "name": "New User Group Nbr5tuI40h",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2c0vcOBQRrwQrEKEDcJODSE0Znj",
                      "name": "New User Group Nbr5tuI40h",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2c0vafr6cPGRmRgAhPO99ZacxUY",
                      "name": "New User Group RSg4kuxjAv",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "2c0vZVpauVuaZn2uGmA3OLeAOvy",
                      "name": "New User Group MXUFvPaVlD",
                      "memberCount": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.createUserGroup({ name: 'New User Group Nbr5tuI40h' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        CreateUserGroupV1Input createUserGroupV1Input = new CreateUserGroupV1Input(); // CreateUserGroupV1Input | \n        try {\n            CreateUserGroup200Response result = apiInstance.createUserGroup(createUserGroupV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#createUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_user_group200_response import CreateUserGroup200Response\nfrom segment_public_api.models.create_user_group_v1_input import CreateUserGroupV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    create_user_group_v1_input = {\"name\":\"New User Group Nbr5tuI40h\"} # CreateUserGroupV1Input | \n\n    try:\n        # Create User Group\n        api_response = api_instance.create_user_group(create_user_group_v1_input)\n        print(\"The response of IAMGroupsApi->create_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->create_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createUserGroupV1Input := *api.NewCreateUserGroupV1Input(\"Name_example\") // CreateUserGroupV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.CreateUserGroup(ctx).CreateUserGroupV1Input(createUserGroupV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.CreateUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateUserGroup`: CreateUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.CreateUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List User Groups",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for user groups.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns all user groups.",
        "operationId": "listUserGroups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group",
                        "memberCount": 0,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group",
                        "memberCount": 0,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group",
                        "memberCount": 0,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "Public API Group",
                        "memberCount": 1,
                        "permissions": [
                          {
                            "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                            "roleName": "Workspace Owner",
                            "resources": [
                              {
                                "id": "9aQ1Lj62S4bomZKLF4DPqW",
                                "type": "WORKSPACE",
                                "labels": []
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.listUserGroups())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination for user groups.  This parameter exists in v1.\n        try {\n            ListUserGroups200Response result = apiInstance.listUserGroups(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#listUserGroups\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_user_groups200_response import ListUserGroups200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination for user groups.  This parameter exists in v1. (optional)\n\n    try:\n        # List User Groups\n        api_response = api_instance.list_user_groups(pagination=pagination)\n        print(\"The response of IAMGroupsApi->list_user_groups:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->list_user_groups: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination for user groups.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.ListUserGroups(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.ListUserGroups``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListUserGroups`: ListUserGroups200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.ListUserGroups`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/validation": {
      "post": {
        "summary": "Create Validation in Warehouse",
        "parameters": [],
        "deprecated": false,
        "description": "Validates input settings against a Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Settings Validation` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createValidationInWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateValidationInWarehouseV1Input"
              },
              "example": {
                "metadataId": "55d3d3aea3c",
                "settings": {
                  "hostname": "address.us-west-2.redshift.amazonaws.com",
                  "port": "5439",
                  "database": "db",
                  "username": "user",
                  "password": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateValidationInWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "CONNECTED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.warehouses.createValidationInWarehouse({\n      metadataId: '55d3d3aea3c',\n      settings: { hostname: 'address.us-west-2.redshift.amazonaws.com', port: '5439', database: 'db', username: 'user', password: 'test' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        CreateValidationInWarehouseV1Input createValidationInWarehouseV1Input = new CreateValidationInWarehouseV1Input(); // CreateValidationInWarehouseV1Input | \n        try {\n            CreateValidationInWarehouse200Response result = apiInstance.createValidationInWarehouse(createValidationInWarehouseV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#createValidationInWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_validation_in_warehouse200_response import CreateValidationInWarehouse200Response\nfrom segment_public_api.models.create_validation_in_warehouse_v1_input import CreateValidationInWarehouseV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    create_validation_in_warehouse_v1_input = {\"metadataId\":\"55d3d3aea3c\",\"settings\":{\"hostname\":\"address.us-west-2.redshift.amazonaws.com\",\"port\":\"5439\",\"database\":\"db\",\"username\":\"user\",\"password\":\"test\"}} # CreateValidationInWarehouseV1Input | \n\n    try:\n        # Create Validation in Warehouse\n        api_response = api_instance.create_validation_in_warehouse(create_validation_in_warehouse_v1_input)\n        print(\"The response of WarehousesApi->create_validation_in_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->create_validation_in_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createValidationInWarehouseV1Input := *api.NewCreateValidationInWarehouseV1Input(\"MetadataId_example\", map[string]interface{}{\"key\": interface{}(123)}) // CreateValidationInWarehouseV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.CreateValidationInWarehouse(ctx).CreateValidationInWarehouseV1Input(createValidationInWarehouseV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.CreateValidationInWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateValidationInWarehouse`: CreateValidationInWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.CreateValidationInWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses": {
      "post": {
        "summary": "Create Warehouse",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a new Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Created` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "createWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {
                  "username": "CONNECTOR_UNIT_TEST_USER",
                  "password": "test_pass",
                  "auth_type": "password_auth",
                  "account": "segment",
                  "warehouse": "ENGINEERING",
                  "database": "TEST_DB"
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {
                  "username": "CONNECTOR_UNIT_TEST_USER",
                  "password": "test_pass",
                  "auth_type": "password_auth",
                  "account": "segment",
                  "warehouse": "ENGINEERING",
                  "database": "TEST_DB"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {
                  "username": "CONNECTOR_UNIT_TEST_USER",
                  "password": "test_pass",
                  "auth_type": "password_auth",
                  "account": "segment",
                  "warehouse": "ENGINEERING",
                  "database": "TEST_DB"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouseV1Input"
              },
              "example": {
                "metadataId": "CCIl4HLQPz",
                "settings": {
                  "username": "CONNECTOR_UNIT_TEST_USER",
                  "password": "test_pass",
                  "auth_type": "password_auth",
                  "account": "segment",
                  "warehouse": "ENGINEERING",
                  "database": "TEST_DB"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "sYpBdHf9aHd7sXEuExZisp",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "sYpBdHf9aHd7sXEuExZisp",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "4H5kGXNPmSE1uJP8Zgdf7o",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "3dr9gHgGJGR7UQKsKvxtJh",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "Snowflake"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.warehouses.createWarehouse({\n      metadataId: 'CCIl4HLQPz',\n      settings: {\n        username: 'CONNECTOR_UNIT_TEST_USER',\n        password: 'test_pass',\n        auth_type: 'password_auth',\n        account: 'segment',\n        warehouse: 'ENGINEERING',\n        database: 'TEST_DB',\n      },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        CreateWarehouseV1Input createWarehouseV1Input = new CreateWarehouseV1Input(); // CreateWarehouseV1Input | \n        try {\n            CreateWarehouse201Response result = apiInstance.createWarehouse(createWarehouseV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#createWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_warehouse201_response import CreateWarehouse201Response\nfrom segment_public_api.models.create_warehouse_v1_input import CreateWarehouseV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    create_warehouse_v1_input = {\"metadataId\":\"CCIl4HLQPz\",\"settings\":{\"username\":\"CONNECTOR_UNIT_TEST_USER\",\"password\":\"test_pass\",\"auth_type\":\"password_auth\",\"account\":\"segment\",\"warehouse\":\"ENGINEERING\",\"database\":\"TEST_DB\"}} # CreateWarehouseV1Input | \n\n    try:\n        # Create Warehouse\n        api_response = api_instance.create_warehouse(create_warehouse_v1_input)\n        print(\"The response of WarehousesApi->create_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->create_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createWarehouseV1Input := *api.NewCreateWarehouseV1Input(\"MetadataId_example\", map[string]interface{}{\"key\": interface{}(123)}) // CreateWarehouseV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.CreateWarehouse(ctx).CreateWarehouseV1Input(createWarehouseV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.CreateWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateWarehouse`: CreateWarehouse201Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.CreateWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Warehouses",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=3"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Warehouses.",
        "operationId": "listWarehouses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWarehousesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.listWarehouses())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListWarehouses200Response result = apiInstance.listWarehouses(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#listWarehouses\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_warehouses200_response import ListWarehouses200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Warehouses\n        api_response = api_instance.list_warehouses(pagination=pagination)\n        print(\"The response of WarehousesApi->list_warehouses:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->list_warehouses: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.ListWarehouses(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.ListWarehouses``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListWarehouses`: ListWarehouses200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.ListWarehouses`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/regulations": {
      "post": {
        "summary": "Create Workspace Regulation",
        "parameters": [],
        "deprecated": false,
        "description": "Creates a Workspace-scoped regulation.\n\n\n\n• When called, this endpoint may generate the `Workspace Regulation Created` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `attributes`,\n- `userAgent`\n      ",
        "operationId": "createWorkspaceRegulation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Input"
              },
              "example": {
                "regulationType": "SUPPRESS_ONLY",
                "subjectType": "USER_ID",
                "subjectIds": [
                  "test_user_id_1"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWorkspaceRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulateId": "1qJkfE1tpwvQcklImGksLN629wn"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deletionAndSuppression.createWorkspaceRegulation({\n      regulationType: 'SUPPRESS_ONLY',\n      subjectType: 'USER_ID',\n      subjectIds: ['test_user_id_1'],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        CreateWorkspaceRegulationV1Input createWorkspaceRegulationV1Input = new CreateWorkspaceRegulationV1Input(); // CreateWorkspaceRegulationV1Input | \n        try {\n            CreateWorkspaceRegulation200Response result = apiInstance.createWorkspaceRegulation(createWorkspaceRegulationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#createWorkspaceRegulation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_workspace_regulation200_response import CreateWorkspaceRegulation200Response\nfrom segment_public_api.models.create_workspace_regulation_v1_input import CreateWorkspaceRegulationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    create_workspace_regulation_v1_input = {\"regulationType\":\"SUPPRESS_ONLY\",\"subjectType\":\"USER_ID\",\"subjectIds\":[\"test_user_id_1\"]} # CreateWorkspaceRegulationV1Input | \n\n    try:\n        # Create Workspace Regulation\n        api_response = api_instance.create_workspace_regulation(create_workspace_regulation_v1_input)\n        print(\"The response of DeletionAndSuppressionApi->create_workspace_regulation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->create_workspace_regulation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    createWorkspaceRegulationV1Input := *api.NewCreateWorkspaceRegulationV1Input(\"RegulationType_example\", \"SubjectType_example\", []string{\"SubjectIds_example\"}) // CreateWorkspaceRegulationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.CreateWorkspaceRegulation(ctx).CreateWorkspaceRegulationV1Input(createWorkspaceRegulationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.CreateWorkspaceRegulation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateWorkspaceRegulation`: CreateWorkspaceRegulation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.CreateWorkspaceRegulation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Workspace Regulations",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "status",
            "description": "The status on which to filter the returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The status on which to filter the returned regulations.",
              "enum": [
                "FAILED",
                "FINISHED",
                "INITIALIZED",
                "INVALID",
                "NOT_SUPPORTED",
                "PARTIAL_SUCCESS",
                "RUNNING"
              ],
              "type": "string",
              "title": "status"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "regulationTypes",
            "description": "The regulation types on which to filter returned regulations.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The regulation types on which to filter returned regulations.",
              "type": "array",
              "items": {
                "enum": [
                  "DELETE_INTERNAL",
                  "DELETE_ONLY",
                  "SUPPRESS_ONLY",
                  "SUPPRESS_WITH_DELETE",
                  "SUPPRESS_WITH_DELETE_INTERNAL",
                  "UNSUPPRESS"
                ],
                "type": "string"
              },
              "title": "regulationTypes"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=5"
          }
        ],
        "deprecated": false,
        "description": "Lists all Workspace-scoped regulations.",
        "operationId": "listWorkspaceRegulations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "createdAt": "2022-03-08T00:39:36.546951Z",
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "subjectType": "OBJECT_ID",
                        "status": "FINISHED",
                        "regulationType": "SUPPRESS_ONLY"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "createdAt": "2022-03-08T00:39:36.546951Z",
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "subjectType": "OBJECT_ID",
                        "status": "FINISHED",
                        "regulationType": "SUPPRESS_ONLY"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "createdAt": "2022-03-08T00:39:36.546951Z",
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "subjectType": "OBJECT_ID",
                        "status": "FINISHED",
                        "regulationType": "SUPPRESS_ONLY"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListWorkspaceRegulationsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulations": [
                      {
                        "createdAt": "2022-03-08T00:39:36.546951Z",
                        "id": "1qJkfE1tpwvQcklImGksLN629wn",
                        "subjects": [
                          "test_user_id_1"
                        ],
                        "subjectType": "OBJECT_ID",
                        "status": "FINISHED",
                        "regulationType": "SUPPRESS_ONLY"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.listWorkspaceRegulations())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        String status = \"FAILED\"; // String | The status on which to filter the returned regulations.  This parameter exists in v1.\n        List<String> regulationTypes = Arrays.asList(); // List<String> | The regulation types on which to filter returned regulations.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination parameters.  This parameter exists in v1.\n        try {\n            ListWorkspaceRegulations200Response result = apiInstance.listWorkspaceRegulations(status, regulationTypes, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#listWorkspaceRegulations\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_workspace_regulations200_response import ListWorkspaceRegulations200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    status = 'status_example' # str | The status on which to filter the returned regulations.  This parameter exists in v1. (optional)\n    regulation_types = ['regulation_types_example'] # List[str] | The regulation types on which to filter returned regulations.  This parameter exists in v1. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Workspace Regulations\n        api_response = api_instance.list_workspace_regulations(status=status, regulation_types=regulation_types, pagination=pagination)\n        print(\"The response of DeletionAndSuppressionApi->list_workspace_regulations:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->list_workspace_regulations: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    status := \"status_example\" // string | The status on which to filter the returned regulations.  This parameter exists in v1. (optional)\n    regulationTypes := []string{\"RegulationTypes_example\"} // []string | The regulation types on which to filter returned regulations.  This parameter exists in v1. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.ListWorkspaceRegulations(ctx).Status(status).RegulationTypes(regulationTypes).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.ListWorkspaceRegulations``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListWorkspaceRegulations`: ListWorkspaceRegulations200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.ListWorkspaceRegulations`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/writekey": {
      "post": {
        "summary": "Create Write Key for Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "idR4zzU9iGcGJgoAX891nf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Creates a new Write Key for the Source.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n",
        "operationId": "createWriteKeyForSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CreateWriteKeyForSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "idR4zzU9iGcGJgoAX891nf",
                      "slug": "update-source-slug-ymbehd",
                      "name": "update-source-slug-ymbehd",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "kXjAavdaGFdiF6or2A6CmohtlFnuTNFJ",
                        "wk123"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.createWriteKeyForSource('idR4zzU9iGcGJgoAX891nf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"idR4zzU9iGcGJgoAX891nf\"; // String | \n        try {\n            CreateWriteKeyForSource200Response result = apiInstance.createWriteKeyForSource(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#createWriteKeyForSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.create_write_key_for_source200_response import CreateWriteKeyForSource200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'idR4zzU9iGcGJgoAX891nf' # str | \n\n    try:\n        # Create Write Key for Source\n        api_response = api_instance.create_write_key_for_source(source_id)\n        print(\"The response of SourcesApi->create_write_key_for_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->create_write_key_for_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"idR4zzU9iGcGJgoAX891nf\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.CreateWriteKeyForSource(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.CreateWriteKeyForSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `CreateWriteKeyForSource`: CreateWriteKeyForSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.CreateWriteKeyForSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destinations/{destinationId}": {
      "delete": {
        "summary": "Delete Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "65c2bdbede6f2d8297f943db",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Destination.\n\n\n\n• When called, this endpoint may generate the `Integration Deleted` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `catalogId`\n      ",
        "operationId": "deleteDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.deleteDestination('65c2bdbede6f2d8297f943db'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"65c2bdbede6f2d8297f943db\"; // String | \n        try {\n            DeleteDestination200Response result = apiInstance.deleteDestination(destinationId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#deleteDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_destination200_response import DeleteDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = '65c2bdbede6f2d8297f943db' # str | \n\n    try:\n        # Delete Destination\n        api_response = api_instance.delete_destination(destination_id)\n        print(\"The response of DestinationsApi->delete_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->delete_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"65c2bdbede6f2d8297f943db\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.DeleteDestination(ctx, destinationId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.DeleteDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteDestination`: DeleteDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.DeleteDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "qtiZHLLqqsHmpvLXNtP5du",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Destination by its id.\n\n      Config API omitted fields:\n- `catalogId`\n",
        "operationId": "getDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": true,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.getDestination('qtiZHLLqqsHmpvLXNtP5du'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"qtiZHLLqqsHmpvLXNtP5du\"; // String | \n        try {\n            GetDestination200Response result = apiInstance.getDestination(destinationId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#getDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_destination200_response import GetDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'qtiZHLLqqsHmpvLXNtP5du' # str | \n\n    try:\n        # Get Destination\n        api_response = api_instance.get_destination(destination_id)\n        print(\"The response of DestinationsApi->get_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->get_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"qtiZHLLqqsHmpvLXNtP5du\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.GetDestination(ctx, destinationId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.GetDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDestination`: GetDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.GetDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "qtiZHLLqqsHmpvLXNtP5du",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Destination.\n\n**Note**: if you attempt to update read-only settings for your destination you'll encounter the following behavior:\n\n  * If only read-only properties are being updated, the endpoint will return an HTTP 400 error.\n  * If there's a mix of writable and read-only properties in the payload, the request will be accepted, the writable properties will be updated and the read-only properties ignored.\n\n\n\n\n• When called, this endpoint may generate the `Integration Disabled` event in the [audit trail](/tag/Audit-Trail).\n\nConfig API omitted fields:\n- `updateMask`\n         ",
        "operationId": "updateDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDestinationV1Input"
              },
              "example": {
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destination": {
                      "id": "qtiZHLLqqsHmpvLXNtP5du",
                      "enabled": false,
                      "name": "",
                      "settings": {
                        "apiSecret": "test",
                        "firebaseAppId": "test",
                        "measurementId": "test"
                      },
                      "metadata": {
                        "id": "60ad61f9ff47a16b8fb7b5d9",
                        "name": "Google Analytics 4 Cloud",
                        "description": "Google Analytics 4 (GA4) is Google’s new Analytics property, which you can use for both websites and apps. Google Analytics 4 has machine learning at its core to automatically surface helpful insights and give you a complete understanding of your customers across devices and platforms. When you have Segment installed, you can make efficient use of your existing tracking implementation by using Segment to fulfill your data collection needs across all your tools that integrate with Segment, including Google Analytics 4.",
                        "slug": "actions-google-analytics-4",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/QJj6FavSYSz2rYpxl6hw",
                          "mark": "https://cdn.filepicker.io/api/file/wfX0JcRaGPaaPww1jKw8"
                        },
                        "options": [],
                        "status": "PUBLIC",
                        "categories": [
                          "Analytics"
                        ],
                        "website": "https://support.google.com/analytics/answer/10089681",
                        "components": [],
                        "previousNames": [
                          "Actions Google Analytic 4",
                          "Actions Google Analytics 4",
                          "Google Analytics 4",
                          "Google Analytics 4 Cloud"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": true,
                          "alias": true
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": true,
                          "warehouse": true,
                          "cloudAppObject": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [
                          {
                            "id": "aDsztZnvzzRrYsk6fHCF6a",
                            "name": "Some Action Name",
                            "slug": "someActionSlug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": []
                          },
                          {
                            "id": "wy1vMhKu669RPM6YR4BfUv",
                            "name": "Public API Action",
                            "slug": "Public API Slug",
                            "description": "",
                            "platform": "CLOUD",
                            "hidden": false,
                            "defaultTrigger": null,
                            "fields": [
                              {
                                "id": "qg1vn4TgrtAMVvtsdGugT2",
                                "sortOrder": 0,
                                "fieldKey": "some_key",
                                "label": "Some Thing",
                                "type": "STRING",
                                "description": "This is a great thing",
                                "required": false,
                                "multiple": false,
                                "choices": null,
                                "dynamic": false,
                                "allowNull": false,
                                "hidden": false
                              }
                            ]
                          }
                        ],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "Contact McDummyData",
                            "email": "set@me.org",
                            "role": "VP of changing this field",
                            "isPrimary": false
                          }
                        ],
                        "partnerOwned": false,
                        "supportedRegions": [
                          "us-west-2",
                          "eu-west-1"
                        ],
                        "regionEndpoints": [
                          "US"
                        ]
                      },
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.updateDestination('qtiZHLLqqsHmpvLXNtP5du', { enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"qtiZHLLqqsHmpvLXNtP5du\"; // String | \n        UpdateDestinationV1Input updateDestinationV1Input = new UpdateDestinationV1Input(); // UpdateDestinationV1Input | \n        try {\n            UpdateDestination200Response result = apiInstance.updateDestination(destinationId, updateDestinationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#updateDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_destination200_response import UpdateDestination200Response\nfrom segment_public_api.models.update_destination_v1_input import UpdateDestinationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'qtiZHLLqqsHmpvLXNtP5du' # str | \n    update_destination_v1_input = {\"enabled\":false} # UpdateDestinationV1Input | \n\n    try:\n        # Update Destination\n        api_response = api_instance.update_destination(destination_id, update_destination_v1_input)\n        print(\"The response of DestinationsApi->update_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->update_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"qtiZHLLqqsHmpvLXNtP5du\" // string | \n    updateDestinationV1Input := *api.NewUpdateDestinationV1Input() // UpdateDestinationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.UpdateDestination(ctx, destinationId).UpdateDestinationV1Input(updateDestinationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.UpdateDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateDestination`: UpdateDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.UpdateDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/filters/{id}": {
      "delete": {
        "summary": "Delete Filter By Id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "<id>",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a filter by id.\n\n\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Space Filters feature enabled. Please reach out to your customer success manager for more information.\n\n\n• When called, this endpoint may generate the `Filter Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteFilterById",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFilterByIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFilterByIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Space Filters"
        ],
        "tags": [
          "Space Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaceFilters.deleteFilterById('<id>'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpaceFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpaceFiltersApi apiInstance = new SpaceFiltersApi(defaultClient);\n        String id = \"<id>\"; // String | \n        try {\n            DeleteFilterById200Response result = apiInstance.deleteFilterById(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpaceFiltersApi#deleteFilterById\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_filter_by_id200_response import DeleteFilterById200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpaceFiltersApi(api_client)\n    id = '<id>' # str | \n\n    try:\n        # Delete Filter By Id\n        api_response = api_instance.delete_filter_by_id(id)\n        print(\"The response of SpaceFiltersApi->delete_filter_by_id:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpaceFiltersApi->delete_filter_by_id: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    id := \"<id>\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpaceFiltersAPI.DeleteFilterById(ctx, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpaceFiltersAPI.DeleteFilterById``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteFilterById`: DeleteFilterById200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpaceFiltersAPI.DeleteFilterById`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Filter By Id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "<id>",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a filter by id.\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Space Filters feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getFilterById",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterByIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "<id>",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "integrationId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Test filter",
                      "if": "type = 'track'",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterByIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "<id>",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "integrationId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Test filter",
                      "if": "type = 'track'",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Space Filters"
        ],
        "tags": [
          "Space Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaceFilters.getFilterById('<id>'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpaceFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpaceFiltersApi apiInstance = new SpaceFiltersApi(defaultClient);\n        String id = \"<id>\"; // String | \n        try {\n            GetFilterById200Response result = apiInstance.getFilterById(id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpaceFiltersApi#getFilterById\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_filter_by_id200_response import GetFilterById200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpaceFiltersApi(api_client)\n    id = '<id>' # str | \n\n    try:\n        # Get Filter By Id\n        api_response = api_instance.get_filter_by_id(id)\n        print(\"The response of SpaceFiltersApi->get_filter_by_id:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpaceFiltersApi->get_filter_by_id: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    id := \"<id>\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpaceFiltersAPI.GetFilterById(ctx, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpaceFiltersAPI.GetFilterById``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetFilterById`: GetFilterById200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpaceFiltersAPI.GetFilterById`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Filter By Id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "<id>",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a filter by id and replaces the existing filter.\n\n\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Space Filters feature enabled. Please reach out to your customer success manager for more information.\n\n\n• When called, this endpoint may generate the `Filter Updated` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "updateFilterById",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterByIdInput"
              },
              "example": {
                "integrationId": "<id>",
                "if": "!(type = \"track\")",
                "name": "Test name",
                "enabled": true,
                "description": "Changed description"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterByIdInput"
              },
              "example": {
                "integrationId": "<id>",
                "name": "Test name",
                "enabled": true,
                "description": "Changed description"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterByIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "<id>",
                      "integrationId": "<id>",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "if": "!(type = \"track\")",
                      "name": "Test name",
                      "enabled": true,
                      "description": "Changed description",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterByIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "<id>",
                      "workspaceId": "",
                      "integrationId": "",
                      "if": "type = \"track\"",
                      "name": "Test filter",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Space Filters"
        ],
        "tags": [
          "Space Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.spaceFilters.updateFilterById('<id>', {\n      integrationId: '<id>',\n      if: '!(type = \"track\")',\n      name: 'Test name',\n      enabled: true,\n      description: 'Changed description',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpaceFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpaceFiltersApi apiInstance = new SpaceFiltersApi(defaultClient);\n        String id = \"<id>\"; // String | \n        UpdateFilterByIdInput updateFilterByIdInput = new UpdateFilterByIdInput(); // UpdateFilterByIdInput | \n        try {\n            UpdateFilterById200Response result = apiInstance.updateFilterById(id, updateFilterByIdInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpaceFiltersApi#updateFilterById\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_filter_by_id200_response import UpdateFilterById200Response\nfrom segment_public_api.models.update_filter_by_id_input import UpdateFilterByIdInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpaceFiltersApi(api_client)\n    id = '<id>' # str | \n    update_filter_by_id_input = {\"integrationId\":\"<id>\",\"if\":\"!(type = \\\"track\\\")\",\"name\":\"Test name\",\"enabled\":true,\"description\":\"Changed description\"} # UpdateFilterByIdInput | \n\n    try:\n        # Update Filter By Id\n        api_response = api_instance.update_filter_by_id(id, update_filter_by_id_input)\n        print(\"The response of SpaceFiltersApi->update_filter_by_id:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpaceFiltersApi->update_filter_by_id: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    id := \"<id>\" // string | \n    updateFilterByIdInput := *api.NewUpdateFilterByIdInput(\"IntegrationId_example\") // UpdateFilterByIdInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpaceFiltersAPI.UpdateFilterById(ctx, id).UpdateFilterByIdInput(updateFilterByIdInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpaceFiltersAPI.UpdateFilterById``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateFilterById`: UpdateFilterById200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpaceFiltersAPI.UpdateFilterById`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/functions/{functionId}": {
      "delete": {
        "summary": "Delete Function",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteFunction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.deleteFunction('sfnc_wXzcDGFR3KmjLDrtSawNHf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfnc_wXzcDGFR3KmjLDrtSawNHf\"; // String | \n        try {\n            DeleteFunction200Response result = apiInstance.deleteFunction(functionId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#deleteFunction\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_function200_response import DeleteFunction200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfnc_wXzcDGFR3KmjLDrtSawNHf' # str | \n\n    try:\n        # Delete Function\n        api_response = api_instance.delete_function(function_id)\n        print(\"The response of FunctionsApi->delete_function:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->delete_function: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfnc_wXzcDGFR3KmjLDrtSawNHf\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.DeleteFunction(ctx, functionId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.DeleteFunction``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteFunction`: DeleteFunction200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.DeleteFunction`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Function",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getFunction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.getFunction('sfnc_wXzcDGFR3KmjLDrtSawNHf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfnc_wXzcDGFR3KmjLDrtSawNHf\"; // String | \n        try {\n            GetFunction200Response result = apiInstance.getFunction(functionId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#getFunction\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_function200_response import GetFunction200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfnc_wXzcDGFR3KmjLDrtSawNHf' # str | \n\n    try:\n        # Get Function\n        api_response = api_instance.get_function(function_id)\n        print(\"The response of FunctionsApi->get_function:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->get_function: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfnc_wXzcDGFR3KmjLDrtSawNHf\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.GetFunction(ctx, functionId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.GetFunction``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetFunction`: GetFunction200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.GetFunction`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Function",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a Function.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.\n\nConfig API omitted fields:\n- `updateMask`\n",
        "operationId": "updateFunction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionV1Input"
              },
              "example": {
                "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                "logoUrl": "https://placekitten.com/200/139"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFunctionV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "function": {
                      "id": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "displayName": "PAPI Source Function",
                      "description": "My source function",
                      "logoUrl": "https://placekitten.com/200/139",
                      "code": "// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "previewWebhookUrl": "",
                      "settings": [
                        {
                          "name": "apiKey",
                          "label": "api key",
                          "description": "api key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": false
                        },
                        {
                          "name": "mySecret",
                          "label": "my secret key",
                          "description": "secret key",
                          "type": "STRING",
                          "required": false,
                          "sensitive": true
                        }
                      ],
                      "buildpack": "",
                      "catalogId": "wXzcDGFR3KmjLDrtSawNHf",
                      "batchMaxCount": 0,
                      "resourceType": "SOURCE"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.updateFunction('sfnc_wXzcDGFR3KmjLDrtSawNHf', {\n      code: '// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions',\n      logoUrl: 'https://placekitten.com/200/139',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfnc_wXzcDGFR3KmjLDrtSawNHf\"; // String | \n        UpdateFunctionV1Input updateFunctionV1Input = new UpdateFunctionV1Input(); // UpdateFunctionV1Input | \n        try {\n            UpdateFunction200Response result = apiInstance.updateFunction(functionId, updateFunctionV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#updateFunction\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_function200_response import UpdateFunction200Response\nfrom segment_public_api.models.update_function_v1_input import UpdateFunctionV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfnc_wXzcDGFR3KmjLDrtSawNHf' # str | \n    update_function_v1_input = {\"code\":\"// Learn more about source functions API at https://segment.com/docs/connections/sources/source-functions\",\"logoUrl\":\"https://placekitten.com/200/139\"} # UpdateFunctionV1Input | \n\n    try:\n        # Update Function\n        api_response = api_instance.update_function(function_id, update_function_v1_input)\n        print(\"The response of FunctionsApi->update_function:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->update_function: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfnc_wXzcDGFR3KmjLDrtSawNHf\" // string | \n    updateFunctionV1Input := *api.NewUpdateFunctionV1Input() // UpdateFunctionV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.UpdateFunction(ctx, functionId).UpdateFunctionV1Input(updateFunctionV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.UpdateFunction``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateFunction`: UpdateFunction200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.UpdateFunction`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/insert-function-instances/{instanceId}": {
      "delete": {
        "summary": "Delete Insert Function Instance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "required": true,
            "example": "65c2bdbdde6f2d8297f943da",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an insert Function instance.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteInsertFunctionInstance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.deleteInsertFunctionInstance('65c2bdbdde6f2d8297f943da'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String instanceId = \"65c2bdbdde6f2d8297f943da\"; // String | \n        try {\n            DeleteInsertFunctionInstance200Response result = apiInstance.deleteInsertFunctionInstance(instanceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#deleteInsertFunctionInstance\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_insert_function_instance200_response import DeleteInsertFunctionInstance200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    instance_id = '65c2bdbdde6f2d8297f943da' # str | \n\n    try:\n        # Delete Insert Function Instance\n        api_response = api_instance.delete_insert_function_instance(instance_id)\n        print(\"The response of FunctionsApi->delete_insert_function_instance:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->delete_insert_function_instance: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    instanceId := \"65c2bdbdde6f2d8297f943da\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.DeleteInsertFunctionInstance(ctx, instanceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.DeleteInsertFunctionInstance``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteInsertFunctionInstance`: DeleteInsertFunctionInstance200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.DeleteInsertFunctionInstance`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Insert Function Instance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "required": true,
            "example": "65c2bdbcde6f2d8297f943d7",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets an insert Function instance.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getInsertFunctionInstance",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "insertFunctionInstance": {
                      "id": "65c2bdbcde6f2d8297f943d7",
                      "name": "Example insert function instance",
                      "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                      "classId": "76365637324e715a67535831",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "settings": {
                        "apiKey": "XYZ"
                      },
                      "encryptedSettings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.getInsertFunctionInstance('65c2bdbcde6f2d8297f943d7'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String instanceId = \"65c2bdbcde6f2d8297f943d7\"; // String | \n        try {\n            GetInsertFunctionInstance200Response result = apiInstance.getInsertFunctionInstance(instanceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#getInsertFunctionInstance\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_insert_function_instance200_response import GetInsertFunctionInstance200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    instance_id = '65c2bdbcde6f2d8297f943d7' # str | \n\n    try:\n        # Get Insert Function Instance\n        api_response = api_instance.get_insert_function_instance(instance_id)\n        print(\"The response of FunctionsApi->get_insert_function_instance:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->get_insert_function_instance: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    instanceId := \"65c2bdbcde6f2d8297f943d7\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.GetInsertFunctionInstance(ctx, instanceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.GetInsertFunctionInstance``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetInsertFunctionInstance`: GetInsertFunctionInstance200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.GetInsertFunctionInstance`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Insert Function Instance",
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "required": true,
            "example": "65c2bdbcde6f2d8297f943d8",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an insert Function instance connected to the given Destination.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateInsertFunctionInstance",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInsertFunctionInstanceAlphaInput"
              },
              "example": {
                "enabled": false,
                "settings": {
                  "apiKey": "XYZ-new"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateInsertFunctionInstanceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "insertFunctionInstance": {
                      "id": "65c2bdbcde6f2d8297f943d8",
                      "name": "Example insert function instance",
                      "integrationId": "fP7qoQw2HTWt9WdMr718gn",
                      "classId": "76365637324e715a67535831",
                      "enabled": false,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "settings": {
                        "apiKey": "XYZ-new"
                      },
                      "encryptedSettings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.updateInsertFunctionInstance('65c2bdbcde6f2d8297f943d8', { enabled: false, settings: { apiKey: 'XYZ-new' } })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String instanceId = \"65c2bdbcde6f2d8297f943d8\"; // String | \n        UpdateInsertFunctionInstanceAlphaInput updateInsertFunctionInstanceAlphaInput = new UpdateInsertFunctionInstanceAlphaInput(); // UpdateInsertFunctionInstanceAlphaInput | \n        try {\n            UpdateInsertFunctionInstance200Response result = apiInstance.updateInsertFunctionInstance(instanceId, updateInsertFunctionInstanceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#updateInsertFunctionInstance\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_insert_function_instance200_response import UpdateInsertFunctionInstance200Response\nfrom segment_public_api.models.update_insert_function_instance_alpha_input import UpdateInsertFunctionInstanceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    instance_id = '65c2bdbcde6f2d8297f943d8' # str | \n    update_insert_function_instance_alpha_input = {\"enabled\":false,\"settings\":{\"apiKey\":\"XYZ-new\"}} # UpdateInsertFunctionInstanceAlphaInput | \n\n    try:\n        # Update Insert Function Instance\n        api_response = api_instance.update_insert_function_instance(instance_id, update_insert_function_instance_alpha_input)\n        print(\"The response of FunctionsApi->update_insert_function_instance:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->update_insert_function_instance: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    instanceId := \"65c2bdbcde6f2d8297f943d8\" // string | \n    updateInsertFunctionInstanceAlphaInput := *api.NewUpdateInsertFunctionInstanceAlphaInput(map[string]interface{}{\"key\": interface{}(123)}) // UpdateInsertFunctionInstanceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.UpdateInsertFunctionInstance(ctx, instanceId).UpdateInsertFunctionInstanceAlphaInput(updateInsertFunctionInstanceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.UpdateInsertFunctionInstance``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateInsertFunctionInstance`: UpdateInsertFunctionInstance200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.UpdateInsertFunctionInstance`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/labels/{key}/{value}": {
      "delete": {
        "summary": "Delete Label",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "example": "environment",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "example": "yolo",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a label.\n\n\n\n• When called, this endpoint may generate the `Label Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteLabel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteLabelAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Labels"
        ],
        "tags": [
          "Labels"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.labels.deleteLabel('environment', 'yolo'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.LabelsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        LabelsApi apiInstance = new LabelsApi(defaultClient);\n        String key = \"environment\"; // String | \n        String value = \"yolo\"; // String | \n        try {\n            DeleteLabel200Response result = apiInstance.deleteLabel(key, value);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling LabelsApi#deleteLabel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_label200_response import DeleteLabel200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.LabelsApi(api_client)\n    key = 'environment' # str | \n    value = 'yolo' # str | \n\n    try:\n        # Delete Label\n        api_response = api_instance.delete_label(key, value)\n        print(\"The response of LabelsApi->delete_label:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling LabelsApi->delete_label: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    key := \"environment\" // string | \n    value := \"yolo\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.LabelsAPI.DeleteLabel(ctx, key, value).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `LabelsAPI.DeleteLabel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteLabel`: DeleteLabel200Response\n    fmt.Fprintf(os.Stdout, \"Response from `LabelsAPI.DeleteLabel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/regulations/{regulateId}": {
      "delete": {
        "summary": "Delete Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "regulateId",
            "required": true,
            "example": "1qJkfE1tpwvQcklImGksLN629wn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": true,
        "description": "Deletes a regulation from the Workspace. The regulation must be in the initialized state to be deleted.\n\n\n\n• When called, this endpoint may generate the `Regulation Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n**DEPRECATED**: this endpoint has been deprecated according to the guidelines, and may experience reduced SLA guarantees.",
        "operationId": "deleteRegulation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.deleteRegulation('1qJkfE1tpwvQcklImGksLN629wn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        String regulateId = \"1qJkfE1tpwvQcklImGksLN629wn\"; // String | \n        try {\n            DeleteRegulation200Response result = apiInstance.deleteRegulation(regulateId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#deleteRegulation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_regulation200_response import DeleteRegulation200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    regulate_id = '1qJkfE1tpwvQcklImGksLN629wn' # str | \n\n    try:\n        # Delete Regulation\n        api_response = api_instance.delete_regulation(regulate_id)\n        print(\"The response of DeletionAndSuppressionApi->delete_regulation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->delete_regulation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    regulateId := \"1qJkfE1tpwvQcklImGksLN629wn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.DeleteRegulation(ctx, regulateId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.DeleteRegulation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteRegulation`: DeleteRegulation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.DeleteRegulation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Regulation",
        "parameters": [
          {
            "in": "path",
            "name": "regulateId",
            "required": true,
            "example": "1qJkfE1tpwvQcklImGksLN629wn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a regulation from the Workspace.\n\n      Config API omitted fields:\n- `parent`\n      ",
        "operationId": "getRegulation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetRegulationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "regulation": {
                      "id": "1qJkfE1tpwvQcklImGksLN629wn",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "overallStatus": "FINISHED",
                      "finishedAt": "2022-03-08T00:39:36.546951Z",
                      "createdAt": "2022-03-08T00:39:36.546951Z",
                      "streamStatus": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.getRegulation('1qJkfE1tpwvQcklImGksLN629wn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        String regulateId = \"1qJkfE1tpwvQcklImGksLN629wn\"; // String | \n        try {\n            GetRegulation200Response result = apiInstance.getRegulation(regulateId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#getRegulation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_regulation200_response import GetRegulation200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    regulate_id = '1qJkfE1tpwvQcklImGksLN629wn' # str | \n\n    try:\n        # Get Regulation\n        api_response = api_instance.get_regulation(regulate_id)\n        print(\"The response of DeletionAndSuppressionApi->get_regulation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->get_regulation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    regulateId := \"1qJkfE1tpwvQcklImGksLN629wn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.GetRegulation(ctx, regulateId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.GetRegulation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetRegulation`: GetRegulation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.GetRegulation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/reverse-etl-models/{modelId}": {
      "delete": {
        "summary": "Delete Reverse Etl Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "fxXMc5bLdKnDfEgBpDbV11",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Model.\n\n      \n\n• When called, this endpoint may generate the `Model Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteReverseEtlModel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.deleteReverseEtlModel('fxXMc5bLdKnDfEgBpDbV11'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        String modelId = \"fxXMc5bLdKnDfEgBpDbV11\"; // String | \n        try {\n            DeleteReverseEtlModel200Response result = apiInstance.deleteReverseEtlModel(modelId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#deleteReverseEtlModel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_reverse_etl_model200_response import DeleteReverseEtlModel200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    model_id = 'fxXMc5bLdKnDfEgBpDbV11' # str | \n\n    try:\n        # Delete Reverse Etl Model\n        api_response = api_instance.delete_reverse_etl_model(model_id)\n        print(\"The response of ReverseETLApi->delete_reverse_etl_model:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->delete_reverse_etl_model: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    modelId := \"fxXMc5bLdKnDfEgBpDbV11\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.DeleteReverseEtlModel(ctx, modelId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.DeleteReverseEtlModel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteReverseEtlModel`: DeleteReverseEtlModel200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.DeleteReverseEtlModel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Reverse Etl Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "jSAVzDH3z89geNDZwoNY9V",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Reverse ETL Model by its id.",
        "operationId": "getReverseEtlModel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseEtlModel": {
                      "id": "jSAVzDH3z89geNDZwoNY9V",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "name": "Model 1",
                      "description": "This model is very useful.",
                      "enabled": true,
                      "query": "SELECT 'user_1' AS id",
                      "queryIdentifierColumn": "id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.getReverseEtlModel('jSAVzDH3z89geNDZwoNY9V'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        String modelId = \"jSAVzDH3z89geNDZwoNY9V\"; // String | \n        try {\n            GetReverseEtlModel200Response result = apiInstance.getReverseEtlModel(modelId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#getReverseEtlModel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_reverse_etl_model200_response import GetReverseEtlModel200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    model_id = 'jSAVzDH3z89geNDZwoNY9V' # str | \n\n    try:\n        # Get Reverse Etl Model\n        api_response = api_instance.get_reverse_etl_model(model_id)\n        print(\"The response of ReverseETLApi->get_reverse_etl_model:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->get_reverse_etl_model: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    modelId := \"jSAVzDH3z89geNDZwoNY9V\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.GetReverseEtlModel(ctx, modelId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.GetReverseEtlModel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetReverseEtlModel`: GetReverseEtlModel200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.GetReverseEtlModel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Reverse Etl Model",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "6BthE21tPsXyA2cK3QPQFQ",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Reverse ETL Model.\n\n      \n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Model Settings Saved\n* Model State Change Toggled\n      ",
        "operationId": "updateReverseEtlModel",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReverseEtlModelInput"
              },
              "example": {
                "name": "My Updated Model",
                "query": "SELECT 'user_2' AS id"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateReverseEtlModelOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseEtlModel": {
                      "id": "6BthE21tPsXyA2cK3QPQFQ",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "name": "My Updated Model",
                      "description": "This model is very useful.",
                      "enabled": true,
                      "query": "SELECT 'user_2' AS id",
                      "queryIdentifierColumn": "id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.reverseEtl.updateReverseEtlModel('6BthE21tPsXyA2cK3QPQFQ', { name: 'My Updated Model', query: \"SELECT 'user_2' AS id\" })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        String modelId = \"6BthE21tPsXyA2cK3QPQFQ\"; // String | \n        UpdateReverseEtlModelInput updateReverseEtlModelInput = new UpdateReverseEtlModelInput(); // UpdateReverseEtlModelInput | \n        try {\n            UpdateReverseEtlModel200Response result = apiInstance.updateReverseEtlModel(modelId, updateReverseEtlModelInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#updateReverseEtlModel\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_reverse_etl_model200_response import UpdateReverseEtlModel200Response\nfrom segment_public_api.models.update_reverse_etl_model_input import UpdateReverseEtlModelInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    model_id = '6BthE21tPsXyA2cK3QPQFQ' # str | \n    update_reverse_etl_model_input = {\"name\":\"My Updated Model\",\"query\":\"SELECT 'user_2' AS id\"} # UpdateReverseEtlModelInput | \n\n    try:\n        # Update Reverse Etl Model\n        api_response = api_instance.update_reverse_etl_model(model_id, update_reverse_etl_model_input)\n        print(\"The response of ReverseETLApi->update_reverse_etl_model:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->update_reverse_etl_model: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    modelId := \"6BthE21tPsXyA2cK3QPQFQ\" // string | \n    updateReverseEtlModelInput := *api.NewUpdateReverseEtlModelInput() // UpdateReverseEtlModelInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.UpdateReverseEtlModel(ctx, modelId).UpdateReverseEtlModelInput(updateReverseEtlModelInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.UpdateReverseEtlModel``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateReverseEtlModel`: UpdateReverseEtlModel200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.UpdateReverseEtlModel`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}": {
      "delete": {
        "summary": "Delete Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rYxTjyaPtAELCjnFE5EYfM",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Source.\n\n\n\n• When called, this endpoint may generate the `Source Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.deleteSource('rYxTjyaPtAELCjnFE5EYfM'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"rYxTjyaPtAELCjnFE5EYfM\"; // String | \n        try {\n            DeleteSource200Response result = apiInstance.deleteSource(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#deleteSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_source200_response import DeleteSource200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'rYxTjyaPtAELCjnFE5EYfM' # str | \n\n    try:\n        # Delete Source\n        api_response = api_instance.delete_source(source_id)\n        print(\"The response of SourcesApi->delete_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->delete_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rYxTjyaPtAELCjnFE5EYfM\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.DeleteSource(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.DeleteSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteSource`: DeleteSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.DeleteSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Source by its id.",
        "operationId": "getSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "swift",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "bEj5MzDqCkHYRqreZgbPuH"
                      ],
                      "metadata": {
                        "id": "dZeHygTSD4",
                        "slug": "swift",
                        "name": "Apple",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    },
                    "trackingPlanId": null
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "swift",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "bEj5MzDqCkHYRqreZgbPuH"
                      ],
                      "metadata": {
                        "id": "dZeHygTSD4",
                        "slug": "swift",
                        "name": "Apple",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    },
                    "trackingPlanId": null
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "swift",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "bEj5MzDqCkHYRqreZgbPuH"
                      ],
                      "metadata": {
                        "id": "dZeHygTSD4",
                        "slug": "swift",
                        "name": "Apple",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    },
                    "trackingPlanId": null
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "qQEHquLrjRDN9j1ByrChyn",
                      "slug": "swift",
                      "name": "",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "writeKeys": [
                        "bEj5MzDqCkHYRqreZgbPuH"
                      ],
                      "metadata": {
                        "id": "dZeHygTSD4",
                        "slug": "swift",
                        "name": "Apple",
                        "categories": [
                          "Mobile"
                        ],
                        "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                          "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                        },
                        "options": [],
                        "isCloudEventSource": false
                      },
                      "settings": {},
                      "labels": []
                    },
                    "trackingPlanId": null
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.getSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        try {\n            GetSource200Response result = apiInstance.getSource(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#getSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_source200_response import GetSource200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n\n    try:\n        # Get Source\n        api_response = api_instance.get_source(source_id)\n        print(\"The response of SourcesApi->get_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->get_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.GetSource(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.GetSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetSource`: GetSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.GetSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "44LMHs8Wf5vidxba4kN52J",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Source.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Source Modified\n* Source Enabled\n* Source Settings Modified\n* Source Disabled\n\nConfig API omitted fields:\n- `updateMask`\n",
        "operationId": "updateSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceV1Input"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceV1Input"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceV1Input"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSourceAlphaInput"
              },
              "example": {
                "name": "My updated source",
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "8jXCp3GoZBHpfsseWHLZiC",
                      "slug": "update-source-slug-wefvgi",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "4Y4ukNGKWvEXcfJ6q3IXLtf9HKWcQxnm"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "8jXCp3GoZBHpfsseWHLZiC",
                      "slug": "update-source-slug-wefvgi",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "4Y4ukNGKWvEXcfJ6q3IXLtf9HKWcQxnm"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "pLQUCP7NeEW4yu2jUWCAFj",
                      "slug": "update-source-slug-o9deqt",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "kBCMsNAp93pIyxX0qJ7BUkIoaNkvax7G"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "source": {
                      "id": "44LMHs8Wf5vidxba4kN52J",
                      "slug": "update-source-slug-d2mm2l",
                      "name": "My updated source",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "writeKeys": [
                        "gfALc6ckX4elr630uGuimEBPIVGzD46K"
                      ],
                      "metadata": {
                        "id": "IqDTy1TpoU",
                        "slug": "javascript",
                        "name": "Javascript",
                        "categories": [
                          "Website"
                        ],
                        "description": "This is our most flexible and powerful tracking system, using analytics.js.  Track and analyze information about your visitors and customers, and every action that they take, in any of our 140 integrations, business intelligence tools, or directly with SQL tools.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "alt": "https://cdn.filepicker.io/api/file/aRgo4XJQZausZxD4gZQq",
                          "mark": "https://cdn.filepicker.io/api/file/kBpmEoSSaakidAvoFmzd"
                        },
                        "options": [],
                        "isCloudEventSource": false,
                        "status": "PUBLIC",
                        "partnerOwned": false
                      },
                      "settings": {
                        "apiHost": "api.segment.build/v1"
                      },
                      "labels": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.updateSource('44LMHs8Wf5vidxba4kN52J', { name: 'My updated source', enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"44LMHs8Wf5vidxba4kN52J\"; // String | \n        UpdateSourceV1Input updateSourceV1Input = new UpdateSourceV1Input(); // UpdateSourceV1Input | \n        try {\n            UpdateSource200Response result = apiInstance.updateSource(sourceId, updateSourceV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#updateSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_source200_response import UpdateSource200Response\nfrom segment_public_api.models.update_source_v1_input import UpdateSourceV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = '44LMHs8Wf5vidxba4kN52J' # str | \n    update_source_v1_input = {\"name\":\"My updated source\",\"enabled\":false} # UpdateSourceV1Input | \n\n    try:\n        # Update Source\n        api_response = api_instance.update_source(source_id, update_source_v1_input)\n        print(\"The response of SourcesApi->update_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->update_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"44LMHs8Wf5vidxba4kN52J\" // string | \n    updateSourceV1Input := *api.NewUpdateSourceV1Input() // UpdateSourceV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.UpdateSource(ctx, sourceId).UpdateSourceV1Input(updateSourceV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.UpdateSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateSource`: UpdateSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.UpdateSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/tracking-plans/{trackingPlanId}": {
      "delete": {
        "summary": "Delete Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.deleteTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        try {\n            DeleteTrackingPlan200Response result = apiInstance.deleteTrackingPlan(trackingPlanId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#deleteTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_tracking_plan200_response import DeleteTrackingPlan200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n\n    try:\n        # Delete Tracking Plan\n        api_response = api_instance.delete_tracking_plan(tracking_plan_id)\n        print(\"The response of TrackingPlansApi->delete_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->delete_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.DeleteTrackingPlan(ctx, trackingPlanId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.DeleteTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteTrackingPlan`: DeleteTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.DeleteTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "trackingPlan": {
                      "id": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
                      "name": "New TP",
                      "resourceSchemaId": "rs_1yVwS3zy60dONy9UhCyDqMmVvAE",
                      "slug": "",
                      "description": "",
                      "type": "LIVE",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "createdAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.getTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        try {\n            GetTrackingPlan200Response result = apiInstance.getTrackingPlan(trackingPlanId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#getTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_tracking_plan200_response import GetTrackingPlan200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n\n    try:\n        # Get Tracking Plan\n        api_response = api_instance.get_tracking_plan(tracking_plan_id)\n        print(\"The response of TrackingPlansApi->get_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->get_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.GetTrackingPlan(ctx, trackingPlanId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.GetTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetTrackingPlan`: GetTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.GetTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a Tracking Plan.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\nConfig API omitted fields:\n- `updateMask`\n      ",
        "operationId": "updateTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackingPlanV1Input"
              },
              "example": {
                "name": "Updated TP"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.updateTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', { name: 'Updated TP' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        UpdateTrackingPlanV1Input updateTrackingPlanV1Input = new UpdateTrackingPlanV1Input(); // UpdateTrackingPlanV1Input | \n        try {\n            UpdateTrackingPlan200Response result = apiInstance.updateTrackingPlan(trackingPlanId, updateTrackingPlanV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#updateTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_tracking_plan200_response import UpdateTrackingPlan200Response\nfrom segment_public_api.models.update_tracking_plan_v1_input import UpdateTrackingPlanV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    update_tracking_plan_v1_input = {\"name\":\"Updated TP\"} # UpdateTrackingPlanV1Input | \n\n    try:\n        # Update Tracking Plan\n        api_response = api_instance.update_tracking_plan(tracking_plan_id, update_tracking_plan_v1_input)\n        print(\"The response of TrackingPlansApi->update_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->update_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    updateTrackingPlanV1Input := *api.NewUpdateTrackingPlanV1Input() // UpdateTrackingPlanV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.UpdateTrackingPlan(ctx, trackingPlanId).UpdateTrackingPlanV1Input(updateTrackingPlanV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.UpdateTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateTrackingPlan`: UpdateTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.UpdateTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/transformations/{transformationId}": {
      "delete": {
        "summary": "Delete Transformation",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "example": "2c0vVuRdDmJ3UQkVjd5WxaA3dar",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Transformation.\n\n\n\n• When called, this endpoint may generate the `Transformation Deleted` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "deleteTransformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.transformations.deleteTransformation('2c0vVuRdDmJ3UQkVjd5WxaA3dar'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TransformationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TransformationsApi apiInstance = new TransformationsApi(defaultClient);\n        String transformationId = \"2c0vVuRdDmJ3UQkVjd5WxaA3dar\"; // String | \n        try {\n            DeleteTransformation200Response result = apiInstance.deleteTransformation(transformationId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TransformationsApi#deleteTransformation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_transformation200_response import DeleteTransformation200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TransformationsApi(api_client)\n    transformation_id = '2c0vVuRdDmJ3UQkVjd5WxaA3dar' # str | \n\n    try:\n        # Delete Transformation\n        api_response = api_instance.delete_transformation(transformation_id)\n        print(\"The response of TransformationsApi->delete_transformation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TransformationsApi->delete_transformation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    transformationId := \"2c0vVuRdDmJ3UQkVjd5WxaA3dar\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TransformationsAPI.DeleteTransformation(ctx, transformationId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TransformationsAPI.DeleteTransformation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteTransformation`: DeleteTransformation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TransformationsAPI.DeleteTransformation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Transformation",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "example": "pHrD51Ds35Zjfka84yXQE6",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Transformation.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getTransformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "User clicked edit track event",
                      "enabled": true,
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "if": "event = 'User Clicked'",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "Category",
                          "newName": "category"
                        }
                      ],
                      "propertyValueTransformations": [],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.transformations.getTransformation('pHrD51Ds35Zjfka84yXQE6'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TransformationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TransformationsApi apiInstance = new TransformationsApi(defaultClient);\n        String transformationId = \"pHrD51Ds35Zjfka84yXQE6\"; // String | \n        try {\n            GetTransformation200Response result = apiInstance.getTransformation(transformationId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TransformationsApi#getTransformation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_transformation200_response import GetTransformation200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TransformationsApi(api_client)\n    transformation_id = 'pHrD51Ds35Zjfka84yXQE6' # str | \n\n    try:\n        # Get Transformation\n        api_response = api_instance.get_transformation(transformation_id)\n        print(\"The response of TransformationsApi->get_transformation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TransformationsApi->get_transformation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    transformationId := \"pHrD51Ds35Zjfka84yXQE6\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TransformationsAPI.GetTransformation(ctx, transformationId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TransformationsAPI.GetTransformation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetTransformation`: GetTransformation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TransformationsAPI.GetTransformation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Transformation",
        "parameters": [
          {
            "in": "path",
            "name": "transformationId",
            "required": true,
            "example": "pHrD51Ds35Zjfka84yXQE6",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Transformation.\n\n\n\n• When called, this endpoint may generate the `Transformation Updated` event in the [audit trail](/tag/Audit-Trail).\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateTransformation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.another-property"
                    ],
                    "propertyValue": "another property value"
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.another-property"
                    ],
                    "propertyValue": "another property value"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ],
                "propertyValueTransformations": [
                  {
                    "propertyPaths": [
                      "properties.another-property"
                    ],
                    "propertyValue": "another property value"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransformationV1Input"
              },
              "example": {
                "name": "updated-name",
                "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                "enabled": true,
                "destinationMetadataId": "547610a5db31d978f14a5c4e",
                "if": "event=\"my-event\"",
                "newEventName": "my-updated-event",
                "propertyRenames": [
                  {
                    "newName": "new-property",
                    "oldName": "old-property"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [
                        {
                          "propertyPaths": [
                            "properties.another-property"
                          ],
                          "propertyValue": "another property value"
                        }
                      ],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateTransformationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "transformation": {
                      "id": "pHrD51Ds35Zjfka84yXQE6",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "updated-name",
                      "enabled": true,
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "547610a5db31d978f14a5c4e",
                      "if": "event=\"my-event\"",
                      "newEventName": "my-updated-event",
                      "propertyDrops": [],
                      "propertyRenames": [
                        {
                          "oldName": "old-property",
                          "newName": "new-property"
                        }
                      ],
                      "propertyValueTransformations": [],
                      "allowProperties": [],
                      "fqlDefinedProperties": []
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Transformations"
        ],
        "tags": [
          "Transformations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.transformations.updateTransformation('pHrD51Ds35Zjfka84yXQE6', {\n      name: 'updated-name',\n      sourceId: 'rh5BDZp6QDHvXFCkibm1pR',\n      enabled: true,\n      destinationMetadataId: '547610a5db31d978f14a5c4e',\n      if: 'event=\"my-event\"',\n      newEventName: 'my-updated-event',\n      propertyRenames: [{ newName: 'new-property', oldName: 'old-property' }],\n      propertyValueTransformations: [{ propertyPaths: ['properties.another-property'], propertyValue: 'another property value' }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TransformationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TransformationsApi apiInstance = new TransformationsApi(defaultClient);\n        String transformationId = \"pHrD51Ds35Zjfka84yXQE6\"; // String | \n        UpdateTransformationV1Input updateTransformationV1Input = new UpdateTransformationV1Input(); // UpdateTransformationV1Input | \n        try {\n            UpdateTransformation200Response result = apiInstance.updateTransformation(transformationId, updateTransformationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TransformationsApi#updateTransformation\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_transformation200_response import UpdateTransformation200Response\nfrom segment_public_api.models.update_transformation_v1_input import UpdateTransformationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TransformationsApi(api_client)\n    transformation_id = 'pHrD51Ds35Zjfka84yXQE6' # str | \n    update_transformation_v1_input = {\"name\":\"updated-name\",\"sourceId\":\"rh5BDZp6QDHvXFCkibm1pR\",\"enabled\":true,\"destinationMetadataId\":\"547610a5db31d978f14a5c4e\",\"if\":\"event=\\\"my-event\\\"\",\"newEventName\":\"my-updated-event\",\"propertyRenames\":[{\"newName\":\"new-property\",\"oldName\":\"old-property\"}],\"propertyValueTransformations\":[{\"propertyPaths\":[\"properties.another-property\"],\"propertyValue\":\"another property value\"}]} # UpdateTransformationV1Input | \n\n    try:\n        # Update Transformation\n        api_response = api_instance.update_transformation(transformation_id, update_transformation_v1_input)\n        print(\"The response of TransformationsApi->update_transformation:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TransformationsApi->update_transformation: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    transformationId := \"pHrD51Ds35Zjfka84yXQE6\" // string | \n    updateTransformationV1Input := *api.NewUpdateTransformationV1Input() // UpdateTransformationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TransformationsAPI.UpdateTransformation(ctx, transformationId).UpdateTransformationV1Input(updateTransformationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TransformationsAPI.UpdateTransformation``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateTransformation`: UpdateTransformation200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TransformationsAPI.UpdateTransformation`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/groups/{userGroupId}": {
      "delete": {
        "summary": "Delete User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "2c0vZc1kXJ9Nf9wIJ1Gb7JzORGf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Removes a user group from a Workspace.\n\n\n\n• When called, this endpoint may generate the `User Group Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.deleteUserGroup('2c0vZc1kXJ9Nf9wIJ1Gb7JzORGf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"2c0vZc1kXJ9Nf9wIJ1Gb7JzORGf\"; // String | \n        try {\n            DeleteUserGroup200Response result = apiInstance.deleteUserGroup(userGroupId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#deleteUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_user_group200_response import DeleteUserGroup200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = '2c0vZc1kXJ9Nf9wIJ1Gb7JzORGf' # str | \n\n    try:\n        # Delete User Group\n        api_response = api_instance.delete_user_group(user_group_id)\n        print(\"The response of IAMGroupsApi->delete_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->delete_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"2c0vZc1kXJ9Nf9wIJ1Gb7JzORGf\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.DeleteUserGroup(ctx, userGroupId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.DeleteUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteUserGroup`: DeleteUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.DeleteUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a user group.",
        "operationId": "getUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "Public API Group",
                      "memberCount": 1,
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.getUserGroup('bBABwqbaDf2QdwTbW8bNEm'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        try {\n            GetUserGroup200Response result = apiInstance.getUserGroup(userGroupId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#getUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_user_group200_response import GetUserGroup200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n\n    try:\n        # Get User Group\n        api_response = api_instance.get_user_group(user_group_id)\n        print(\"The response of IAMGroupsApi->get_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->get_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.GetUserGroup(ctx, userGroupId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.GetUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetUserGroup`: GetUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.GetUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a user group for a Workspace.\n\n\n\n• When called, this endpoint may generate the `User Group Updated` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupV1Input"
              },
              "example": {
                "name": "PAPI Example Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.updateUserGroup('bBABwqbaDf2QdwTbW8bNEm', { name: 'PAPI Example Group' }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        UpdateUserGroupV1Input updateUserGroupV1Input = new UpdateUserGroupV1Input(); // UpdateUserGroupV1Input | \n        try {\n            UpdateUserGroup200Response result = apiInstance.updateUserGroup(userGroupId, updateUserGroupV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#updateUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_user_group200_response import UpdateUserGroup200Response\nfrom segment_public_api.models.update_user_group_v1_input import UpdateUserGroupV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    update_user_group_v1_input = {\"name\":\"PAPI Example Group\"} # UpdateUserGroupV1Input | \n\n    try:\n        # Update User Group\n        api_response = api_instance.update_user_group(user_group_id, update_user_group_v1_input)\n        print(\"The response of IAMGroupsApi->update_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->update_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    updateUserGroupV1Input := *api.NewUpdateUserGroupV1Input(\"Name_example\") // UpdateUserGroupV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.UpdateUserGroup(ctx, userGroupId).UpdateUserGroupV1Input(updateUserGroupV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.UpdateUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateUserGroup`: UpdateUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.UpdateUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/users": {
      "delete": {
        "summary": "Delete Users",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "userIds",
            "description": "The ids of the users to remove.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ids of the users to remove.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "userIds"
            },
            "example": "userIds.0=dLPzv57d5nRGz8U5iegLKp"
          }
        ],
        "deprecated": false,
        "description": "Removes one or multiple users.\n\n\n\n• When called, this endpoint may generate the `Group Memberships Deleted` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "deleteUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.deleteUsers('userIds.0=dLPzv57d5nRGz8U5iegLKp'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        List<String> userIds = Arrays.asList(); // List<String> | The ids of the users to remove.  This parameter exists in v1.\n        try {\n            DeleteUsers200Response result = apiInstance.deleteUsers(userIds);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#deleteUsers\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_users200_response import DeleteUsers200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    user_ids = ['userIds.0=dLPzv57d5nRGz8U5iegLKp'] # List[str] | The ids of the users to remove.  This parameter exists in v1.\n\n    try:\n        # Delete Users\n        api_response = api_instance.delete_users(user_ids)\n        print(\"The response of IAMUsersApi->delete_users:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->delete_users: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userIds := []string{\"Inner_example\"} // []string | The ids of the users to remove.  This parameter exists in v1.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.DeleteUsers(ctx).UserIds(userIds).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.DeleteUsers``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteUsers`: DeleteUsers200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.DeleteUsers`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "List Users",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for users.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of users with access to the Workspace.",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUsersV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "users": [
                      {
                        "id": "i2VTJURQprNfqdwjLFPWYx",
                        "name": "Sloth",
                        "email": "sloth@segment.com"
                      },
                      {
                        "id": "sgJDWk3K21k6LE3tLU9nRK",
                        "name": "",
                        "email": "papi@segment.com"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.listUsers())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination for users.  This parameter exists in v1.\n        try {\n            ListUsers200Response result = apiInstance.listUsers(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#listUsers\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_users200_response import ListUsers200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination for users.  This parameter exists in v1. (optional)\n\n    try:\n        # List Users\n        api_response = api_instance.list_users(pagination=pagination)\n        print(\"The response of IAMUsersApi->list_users:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->list_users: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination for users.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.ListUsers(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.ListUsers``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListUsers`: ListUsers200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.ListUsers`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}": {
      "delete": {
        "summary": "Delete Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "tmiTtiPi58udvDAjcxKUJY",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Warehouse.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "deleteWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DeleteWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.deleteWarehouse('tmiTtiPi58udvDAjcxKUJY'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"tmiTtiPi58udvDAjcxKUJY\"; // String | \n        try {\n            DeleteWarehouse200Response result = apiInstance.deleteWarehouse(warehouseId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#deleteWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delete_warehouse200_response import DeleteWarehouse200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'tmiTtiPi58udvDAjcxKUJY' # str | \n\n    try:\n        # Delete Warehouse\n        api_response = api_instance.delete_warehouse(warehouse_id)\n        print(\"The response of WarehousesApi->delete_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->delete_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"tmiTtiPi58udvDAjcxKUJY\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.DeleteWarehouse(ctx, warehouseId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.DeleteWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DeleteWarehouse`: DeleteWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.DeleteWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "get": {
        "summary": "Get Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Warehouse by its id.",
        "operationId": "getWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.getWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        try {\n            GetWarehouse200Response result = apiInstance.getWarehouse(warehouseId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#getWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_warehouse200_response import GetWarehouse200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n\n    try:\n        # Get Warehouse\n        api_response = api_instance.get_warehouse(warehouse_id)\n        print(\"The response of WarehousesApi->get_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->get_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.GetWarehouse(ctx, warehouseId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.GetWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetWarehouse`: GetWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.GetWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Warehouse.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Storage Destination Modified\n* Storage Destination Enabled\n      ",
        "operationId": "updateWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "Redshift Dev",
                "settings": {}
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "Redshift Dev",
                "settings": {}
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "Redshift Dev",
                "settings": {}
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWarehouseV1Input"
              },
              "example": {
                "name": "API Example Test Warehouse Update",
                "settings": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "name": "Redshift Dev"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "name": "Redshift Dev"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "name": "Redshift Dev"
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouse": {
                      "id": "kjU72LCJexvrqL7G4TMHHN",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": true,
                      "metadata": {
                        "id": "55d3d3aea3c",
                        "slug": "postgres",
                        "name": "Postgres",
                        "description": "Open source data warehouse",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                          "mark": "",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "port",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "database",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "hostname",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "password",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "username",
                            "required": true,
                            "type": "string"
                          },
                          {
                            "name": "ciphertext",
                            "required": true,
                            "type": "string"
                          }
                        ]
                      },
                      "settings": {
                        "name": "API Example Test Warehouse Update"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.updateWarehouse('kjU72LCJexvrqL7G4TMHHN', { name: 'Redshift Dev', settings: {} }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        UpdateWarehouseV1Input updateWarehouseV1Input = new UpdateWarehouseV1Input(); // UpdateWarehouseV1Input | \n        try {\n            UpdateWarehouse200Response result = apiInstance.updateWarehouse(warehouseId, updateWarehouseV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#updateWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_warehouse200_response import UpdateWarehouse200Response\nfrom segment_public_api.models.update_warehouse_v1_input import UpdateWarehouseV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    update_warehouse_v1_input = {\"name\":\"Redshift Dev\",\"settings\":{}} # UpdateWarehouseV1Input | \n\n    try:\n        # Update Warehouse\n        api_response = api_instance.update_warehouse(warehouse_id, update_warehouse_v1_input)\n        print(\"The response of WarehousesApi->update_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->update_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    updateWarehouseV1Input := *api.NewUpdateWarehouseV1Input(map[string]interface{}{\"key\": interface{}(123)}) // UpdateWarehouseV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.UpdateWarehouse(ctx, warehouseId).UpdateWarehouseV1Input(updateWarehouseV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.UpdateWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateWarehouse`: UpdateWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.UpdateWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions/disable": {
      "patch": {
        "summary": "Disable Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Disable Edge Functions for your Source.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "disableEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DisableEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "edgeFunctions": {
                      "id": "cbc696ed-58ec-452b-9727-f396a95ed55a",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "downloadURL": "",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "version": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.disableEdgeFunctions('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.EdgeFunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        EdgeFunctionsApi apiInstance = new EdgeFunctionsApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        try {\n            DisableEdgeFunctions200Response result = apiInstance.disableEdgeFunctions(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling EdgeFunctionsApi#disableEdgeFunctions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.disable_edge_functions200_response import DisableEdgeFunctions200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.EdgeFunctionsApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n\n    try:\n        # Disable Edge Functions\n        api_response = api_instance.disable_edge_functions(source_id)\n        print(\"The response of EdgeFunctionsApi->disable_edge_functions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling EdgeFunctionsApi->disable_edge_functions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.EdgeFunctionsAPI.DisableEdgeFunctions(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `EdgeFunctionsAPI.DisableEdgeFunctions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `DisableEdgeFunctions`: DisableEdgeFunctions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `EdgeFunctionsAPI.DisableEdgeFunctions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/echo": {
      "get": {
        "summary": "Echo",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "message",
            "description": "Sets the response `message` field. The response contains this field's entry.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "Sets the response `message` field. The response contains this field's entry.",
              "type": "string",
              "title": "message"
            },
            "example": "Hello, World!"
          },
          {
            "in": "query",
            "required": false,
            "name": "delay",
            "description": "The desired response delay, in milliseconds.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The desired response delay, in milliseconds.",
              "type": "number",
              "title": "delay"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerError",
            "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "If `true`, returns an HTTP `4xx` error that contains the string in `message`.",
              "type": "boolean",
              "title": "triggerError"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerMultipleErrors",
            "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.\n\nThis has no effect if the request sets `triggerError`.",
              "type": "boolean",
              "title": "triggerMultipleErrors"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "triggerUnexpectedError",
            "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "If `true`, triggers a `500` error.\n\nThis has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.",
              "type": "boolean",
              "title": "triggerUnexpectedError"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "statusCode",
            "description": "Sets the HTTP status code to return.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "Sets the HTTP status code to return.",
              "type": "number",
              "title": "statusCode"
            }
          }
        ],
        "deprecated": false,
        "description": "Public Echo endpoint.",
        "operationId": "echo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EchoV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "method": "get",
                    "message": "Hello, World!",
                    "headers": {
                      "<omitted>": "<omitted>"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EchoV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "method": "get",
                    "message": "Hello, World!",
                    "headers": {
                      "<omitted>": "<omitted>"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/EchoAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "method": "get",
                    "message": "Hello, World!",
                    "headers": {
                      "<omitted>": "<omitted>"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "General",
          "Testing"
        ],
        "tags": [
          "Testing"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.testing.echo('Hello, World!'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TestingApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TestingApi apiInstance = new TestingApi(defaultClient);\n        String message = \"Hello, World!\"; // String | Sets the response `message` field. The response contains this field's entry.  This parameter exists in alpha.\n        BigDecimal delay = new BigDecimal(78); // BigDecimal | The desired response delay, in milliseconds.  This parameter exists in alpha.\n        Boolean triggerError = true; // Boolean | If `true`, returns an HTTP `4xx` error that contains the string in `message`.  This parameter exists in alpha.\n        Boolean triggerMultipleErrors = true; // Boolean | If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.  This has no effect if the request sets `triggerError`.  This parameter exists in alpha.\n        Boolean triggerUnexpectedError = true; // Boolean | If `true`, triggers a `500` error.  This has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.  This parameter exists in alpha.\n        BigDecimal statusCode = new BigDecimal(78); // BigDecimal | Sets the HTTP status code to return.  This parameter exists in alpha.\n        try {\n            Echo200Response result = apiInstance.echo(message, delay, triggerError, triggerMultipleErrors, triggerUnexpectedError, statusCode);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TestingApi#echo\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.echo200_response import Echo200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TestingApi(api_client)\n    message = 'Hello, World!' # str | Sets the response `message` field. The response contains this field's entry.  This parameter exists in alpha.\n    delay = 3.4 # float | The desired response delay, in milliseconds.  This parameter exists in alpha. (optional)\n    trigger_error = True # bool | If `true`, returns an HTTP `4xx` error that contains the string in `message`.  This parameter exists in alpha. (optional)\n    trigger_multiple_errors = True # bool | If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.  This has no effect if the request sets `triggerError`.  This parameter exists in alpha. (optional)\n    trigger_unexpected_error = True # bool | If `true`, triggers a `500` error.  This has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.  This parameter exists in alpha. (optional)\n    status_code = 3.4 # float | Sets the HTTP status code to return.  This parameter exists in alpha. (optional)\n\n    try:\n        # Echo\n        api_response = api_instance.echo(message, delay=delay, trigger_error=trigger_error, trigger_multiple_errors=trigger_multiple_errors, trigger_unexpected_error=trigger_unexpected_error, status_code=status_code)\n        print(\"The response of TestingApi->echo:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TestingApi->echo: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    message := \"Hello, World!\" // string | Sets the response `message` field. The response contains this field's entry.  This parameter exists in alpha.\n    delay := float32(8.14) // float32 | The desired response delay, in milliseconds.  This parameter exists in alpha. (optional)\n    triggerError := true // bool | If `true`, returns an HTTP `4xx` error that contains the string in `message`.  This parameter exists in alpha. (optional)\n    triggerMultipleErrors := true // bool | If `true`, returns an HTTP `4xx` error that contains the value of the `message` field in the error message array.  This has no effect if the request sets `triggerError`.  This parameter exists in alpha. (optional)\n    triggerUnexpectedError := true // bool | If `true`, triggers a `500` error.  This has no effect if the request sets either `triggerError` or `triggerMultipleErrors`.  This parameter exists in alpha. (optional)\n    statusCode := float32(8.14) // float32 | Sets the HTTP status code to return.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TestingAPI.Echo(ctx).Message(message).Delay(delay).TriggerError(triggerError).TriggerMultipleErrors(triggerMultipleErrors).TriggerUnexpectedError(triggerUnexpectedError).StatusCode(statusCode).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TestingAPI.Echo``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `Echo`: Echo200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TestingAPI.Echo`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions/upload-url": {
      "post": {
        "summary": "Generate Upload URL for Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Generate a temporary upload URL that can be used to upload an Edge Functions bundle.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "generateUploadURLForEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GenerateUploadURLForEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "uploadURL": "<upload_url>"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.generateUploadURLForEdgeFunctions('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.EdgeFunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        EdgeFunctionsApi apiInstance = new EdgeFunctionsApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        try {\n            GenerateUploadURLForEdgeFunctions200Response result = apiInstance.generateUploadURLForEdgeFunctions(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling EdgeFunctionsApi#generateUploadURLForEdgeFunctions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.generate_upload_url_for_edge_functions200_response import GenerateUploadURLForEdgeFunctions200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.EdgeFunctionsApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n\n    try:\n        # Generate Upload URL for Edge Functions\n        api_response = api_instance.generate_upload_url_for_edge_functions(source_id)\n        print(\"The response of EdgeFunctionsApi->generate_upload_url_for_edge_functions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling EdgeFunctionsApi->generate_upload_url_for_edge_functions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.EdgeFunctionsAPI.GenerateUploadURLForEdgeFunctions(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `EdgeFunctionsAPI.GenerateUploadURLForEdgeFunctions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GenerateUploadURLForEdgeFunctions`: GenerateUploadURLForEdgeFunctions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `EdgeFunctionsAPI.GenerateUploadURLForEdgeFunctions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{audienceId}/activations/{id}": {
      "get": {
        "summary": "Get Activation from Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spa_9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "audienceId",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "act_987654321",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "workspaceId",
            "description": "The workspace id\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The workspace id",
              "type": "string",
              "title": "workspaceId"
            },
            "example": "LF4DPqW"
          }
        ],
        "deprecated": false,
        "description": "Gets a single Activation by id.\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getActivationFromAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetActivationFromAudienceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "activation": {
                      "id": "act_987654321",
                      "enabled": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences",
          "Activations"
        ],
        "tags": [
          "Activations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.activations.getActivationFromAudience('spa_9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS', 'act_987654321', 'LF4DPqW')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ActivationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ActivationsApi apiInstance = new ActivationsApi(defaultClient);\n        String spaceId = \"spa_9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String audienceId = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String id = \"act_987654321\"; // String | \n        String workspaceId = \"LF4DPqW\"; // String | The workspace id  This parameter exists in alpha.\n        try {\n            GetActivationFromAudience200Response result = apiInstance.getActivationFromAudience(spaceId, audienceId, id, workspaceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ActivationsApi#getActivationFromAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_activation_from_audience200_response import GetActivationFromAudience200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ActivationsApi(api_client)\n    space_id = 'spa_9aQ1Lj62S4bomZKLF4DPqW' # str | \n    audience_id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    id = 'act_987654321' # str | \n    workspace_id = 'LF4DPqW' # str | The workspace id  This parameter exists in alpha.\n\n    try:\n        # Get Activation from Audience\n        api_response = api_instance.get_activation_from_audience(space_id, audience_id, id, workspace_id)\n        print(\"The response of ActivationsApi->get_activation_from_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ActivationsApi->get_activation_from_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spa_9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    audienceId := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    id := \"act_987654321\" // string | \n    workspaceId := \"LF4DPqW\" // string | The workspace id  This parameter exists in alpha.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ActivationsAPI.GetActivationFromAudience(ctx, spaceId, audienceId, id).WorkspaceId(workspaceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ActivationsAPI.GetActivationFromAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetActivationFromAudience`: GetActivationFromAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ActivationsAPI.GetActivationFromAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Activation from Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spa_9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "audienceId",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "act_987654321",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "workspaceId",
            "description": "The workspace id\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The workspace id",
              "type": "string",
              "title": "workspaceId"
            },
            "example": "LF4DPqW"
          }
        ],
        "deprecated": false,
        "description": "Deletes an Activation.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeActivationFromAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveActivationFromAudienceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences",
          "Activations"
        ],
        "tags": [
          "Activations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.activations.removeActivationFromAudience(\n      'spa_9aQ1Lj62S4bomZKLF4DPqW',\n      'aud_0ujsszwN8NRY24YaXiTIE2VWDTS',\n      'act_987654321',\n      'LF4DPqW'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ActivationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ActivationsApi apiInstance = new ActivationsApi(defaultClient);\n        String spaceId = \"spa_9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String audienceId = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String id = \"act_987654321\"; // String | \n        String workspaceId = \"LF4DPqW\"; // String | The workspace id  This parameter exists in alpha.\n        try {\n            RemoveActivationFromAudience200Response result = apiInstance.removeActivationFromAudience(spaceId, audienceId, id, workspaceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ActivationsApi#removeActivationFromAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_activation_from_audience200_response import RemoveActivationFromAudience200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ActivationsApi(api_client)\n    space_id = 'spa_9aQ1Lj62S4bomZKLF4DPqW' # str | \n    audience_id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    id = 'act_987654321' # str | \n    workspace_id = 'LF4DPqW' # str | The workspace id  This parameter exists in alpha.\n\n    try:\n        # Remove Activation from Audience\n        api_response = api_instance.remove_activation_from_audience(space_id, audience_id, id, workspace_id)\n        print(\"The response of ActivationsApi->remove_activation_from_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ActivationsApi->remove_activation_from_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spa_9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    audienceId := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    id := \"act_987654321\" // string | \n    workspaceId := \"LF4DPqW\" // string | The workspace id  This parameter exists in alpha.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ActivationsAPI.RemoveActivationFromAudience(ctx, spaceId, audienceId, id).WorkspaceId(workspaceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ActivationsAPI.RemoveActivationFromAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveActivationFromAudience`: RemoveActivationFromAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ActivationsAPI.RemoveActivationFromAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Activation for Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spa_9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "audienceId",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "act_987654321",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an Activation.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateActivationForAudience",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivationForAudienceAlphaInput"
              },
              "example": {
                "workspaceId": "LF4DPqW",
                "enabled": false,
                "eventEmitter": {
                  "name": "Updated Event Emitter",
                  "description": "Updated event emitter for activation"
                },
                "subscription": {
                  "name": "Updated Subscription",
                  "trigger": "audienceExited"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateActivationForAudienceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "activation": {
                      "id": "act_987654321",
                      "enabled": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences",
          "Activations"
        ],
        "tags": [
          "Activations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.activations.updateActivationForAudience('spa_9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS', 'act_987654321', {\n      workspaceId: 'LF4DPqW',\n      enabled: false,\n      eventEmitter: { name: 'Updated Event Emitter', description: 'Updated event emitter for activation' },\n      subscription: { name: 'Updated Subscription', trigger: 'audienceExited' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ActivationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ActivationsApi apiInstance = new ActivationsApi(defaultClient);\n        String spaceId = \"spa_9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String audienceId = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String id = \"act_987654321\"; // String | \n        UpdateActivationForAudienceAlphaInput updateActivationForAudienceAlphaInput = new UpdateActivationForAudienceAlphaInput(); // UpdateActivationForAudienceAlphaInput | \n        try {\n            UpdateActivationForAudience200Response result = apiInstance.updateActivationForAudience(spaceId, audienceId, id, updateActivationForAudienceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ActivationsApi#updateActivationForAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_activation_for_audience200_response import UpdateActivationForAudience200Response\nfrom segment_public_api.models.update_activation_for_audience_alpha_input import UpdateActivationForAudienceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ActivationsApi(api_client)\n    space_id = 'spa_9aQ1Lj62S4bomZKLF4DPqW' # str | \n    audience_id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    id = 'act_987654321' # str | \n    update_activation_for_audience_alpha_input = {\"workspaceId\":\"LF4DPqW\",\"enabled\":false,\"eventEmitter\":{\"name\":\"Updated Event Emitter\",\"description\":\"Updated event emitter for activation\"},\"subscription\":{\"name\":\"Updated Subscription\",\"trigger\":\"audienceExited\"}} # UpdateActivationForAudienceAlphaInput | \n\n    try:\n        # Update Activation for Audience\n        api_response = api_instance.update_activation_for_audience(space_id, audience_id, id, update_activation_for_audience_alpha_input)\n        print(\"The response of ActivationsApi->update_activation_for_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ActivationsApi->update_activation_for_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spa_9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    audienceId := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    id := \"act_987654321\" // string | \n    updateActivationForAudienceAlphaInput := *api.NewUpdateActivationForAudienceAlphaInput(\"WorkspaceId_example\", interface{}(123), interface{}(123)) // UpdateActivationForAudienceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ActivationsAPI.UpdateActivationForAudience(ctx, spaceId, audienceId, id).UpdateActivationForAudienceAlphaInput(updateActivationForAudienceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ActivationsAPI.UpdateActivationForAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateActivationForAudience`: UpdateActivationForAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ActivationsAPI.UpdateActivationForAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/advanced-sync-schedule": {
      "get": {
        "summary": "Get Advanced Sync Schedule from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the advanced sync schedule for a Warehouse.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getAdvancedSyncScheduleFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAdvancedSyncScheduleFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.selectiveSync.getAdvancedSyncScheduleFromWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SelectiveSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SelectiveSyncApi apiInstance = new SelectiveSyncApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        try {\n            GetAdvancedSyncScheduleFromWarehouse200Response result = apiInstance.getAdvancedSyncScheduleFromWarehouse(warehouseId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SelectiveSyncApi#getAdvancedSyncScheduleFromWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_advanced_sync_schedule_from_warehouse200_response import GetAdvancedSyncScheduleFromWarehouse200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SelectiveSyncApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n\n    try:\n        # Get Advanced Sync Schedule from Warehouse\n        api_response = api_instance.get_advanced_sync_schedule_from_warehouse(warehouse_id)\n        print(\"The response of SelectiveSyncApi->get_advanced_sync_schedule_from_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SelectiveSyncApi->get_advanced_sync_schedule_from_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SelectiveSyncAPI.GetAdvancedSyncScheduleFromWarehouse(ctx, warehouseId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SelectiveSyncAPI.GetAdvancedSyncScheduleFromWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetAdvancedSyncScheduleFromWarehouse`: GetAdvancedSyncScheduleFromWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SelectiveSyncAPI.GetAdvancedSyncScheduleFromWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "put": {
        "summary": "Replace Advanced Sync Schedule for Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the advanced sync schedule for a Warehouse, replacing the sync schedule with a new schedule.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replaceAdvancedSyncScheduleForWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Input"
              },
              "example": {
                "enabled": true,
                "schedule": {
                  "times": [
                    {
                      "enabled": true,
                      "hourOfDay": 7
                    },
                    {
                      "enabled": false,
                      "hourOfDay": 5
                    },
                    {
                      "enabled": true,
                      "hourOfDay": 23
                    }
                  ],
                  "timezone": "America/Vancouver"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceAdvancedSyncScheduleForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "enabled": true,
                    "schedule": {
                      "times": [
                        {
                          "hourOfDay": 5,
                          "enabled": false
                        },
                        {
                          "hourOfDay": 7,
                          "enabled": true
                        },
                        {
                          "hourOfDay": 23,
                          "enabled": true
                        }
                      ],
                      "timezone": "America/Vancouver"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.replaceAdvancedSyncScheduleForWarehouse('kjU72LCJexvrqL7G4TMHHN', {\n      enabled: true,\n      schedule: {\n        times: [\n          { enabled: true, hourOfDay: 7 },\n          { enabled: false, hourOfDay: 5 },\n          { enabled: true, hourOfDay: 23 },\n        ],\n        timezone: 'America/Vancouver',\n      },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SelectiveSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SelectiveSyncApi apiInstance = new SelectiveSyncApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        ReplaceAdvancedSyncScheduleForWarehouseV1Input replaceAdvancedSyncScheduleForWarehouseV1Input = new ReplaceAdvancedSyncScheduleForWarehouseV1Input(); // ReplaceAdvancedSyncScheduleForWarehouseV1Input | \n        try {\n            ReplaceAdvancedSyncScheduleForWarehouse200Response result = apiInstance.replaceAdvancedSyncScheduleForWarehouse(warehouseId, replaceAdvancedSyncScheduleForWarehouseV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SelectiveSyncApi#replaceAdvancedSyncScheduleForWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_advanced_sync_schedule_for_warehouse200_response import ReplaceAdvancedSyncScheduleForWarehouse200Response\nfrom segment_public_api.models.replace_advanced_sync_schedule_for_warehouse_v1_input import ReplaceAdvancedSyncScheduleForWarehouseV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SelectiveSyncApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    replace_advanced_sync_schedule_for_warehouse_v1_input = {\"enabled\":true,\"schedule\":{\"times\":[{\"enabled\":true,\"hourOfDay\":7},{\"enabled\":false,\"hourOfDay\":5},{\"enabled\":true,\"hourOfDay\":23}],\"timezone\":\"America/Vancouver\"}} # ReplaceAdvancedSyncScheduleForWarehouseV1Input | \n\n    try:\n        # Replace Advanced Sync Schedule for Warehouse\n        api_response = api_instance.replace_advanced_sync_schedule_for_warehouse(warehouse_id, replace_advanced_sync_schedule_for_warehouse_v1_input)\n        print(\"The response of SelectiveSyncApi->replace_advanced_sync_schedule_for_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SelectiveSyncApi->replace_advanced_sync_schedule_for_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    replaceAdvancedSyncScheduleForWarehouseV1Input := *api.NewReplaceAdvancedSyncScheduleForWarehouseV1Input(false) // ReplaceAdvancedSyncScheduleForWarehouseV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SelectiveSyncAPI.ReplaceAdvancedSyncScheduleForWarehouse(ctx, warehouseId).ReplaceAdvancedSyncScheduleForWarehouseV1Input(replaceAdvancedSyncScheduleForWarehouseV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SelectiveSyncAPI.ReplaceAdvancedSyncScheduleForWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplaceAdvancedSyncScheduleForWarehouse`: ReplaceAdvancedSyncScheduleForWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SelectiveSyncAPI.ReplaceAdvancedSyncScheduleForWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{id}": {
      "get": {
        "summary": "Get Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "include",
            "description": "Additional resource to include, support schedules only.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "Additional resource to include, support schedules only.",
              "enum": [
                "schedules"
              ],
              "type": "string",
              "title": "include"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the Audience by id and spaceId. Supports including audience schedules via `?include=schedules`.\n\n• This endpoint is in **Beta** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAudienceBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audience": {
                      "status": "Live",
                      "size": {
                        "count": 123,
                        "type": "USERS"
                      },
                      "id": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "batch",
                      "description": "find shoe bought users",
                      "key": "batch",
                      "enabled": true,
                      "definition": {
                        "query": "event('Shoe Bought').within(7 days).count() >= 21",
                        "type": "USERS"
                      },
                      "createdBy": "7Lz4nvqdy4AMHHnQAGqfbD",
                      "updatedBy": "7Lz4nvqdy4AMHHnQAGqfbD",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "audienceType": "USERS",
                      "computeCadence": {
                        "type": "BATCH"
                      },
                      "options": {
                        "includeAnonymousUsers": false,
                        "includeHistoricalData": true,
                        "filterByExternalIds": [
                          "android.idfa",
                          "email",
                          "ios.idfa",
                          "user_id"
                        ]
                      }
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audience": {
                      "status": "Live",
                      "size": {
                        "count": 123,
                        "type": "USERS"
                      },
                      "id": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "batch",
                      "description": "find shoe bought users",
                      "key": "batch",
                      "enabled": true,
                      "definition": {
                        "query": "event('Shoe Bought').within(7 days).count() >= 21",
                        "type": "USERS"
                      },
                      "createdBy": "7Lz4nvqdy4AMHHnQAGqfbD",
                      "updatedBy": "7Lz4nvqdy4AMHHnQAGqfbD",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "audienceType": "USERS",
                      "computeCadence": {
                        "type": "BATCH"
                      },
                      "options": {
                        "includeAnonymousUsers": false,
                        "includeHistoricalData": true,
                        "filterByExternalIds": [
                          "android.idfa",
                          "email",
                          "ios.idfa",
                          "user_id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.getAudience('9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String include = \"schedules\"; // String | Additional resource to include, support schedules only.  This parameter exists in alpha.\n        try {\n            GetAudience200Response result = apiInstance.getAudience(spaceId, id, include);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#getAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_audience200_response import GetAudience200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    include = 'include_example' # str | Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)\n\n    try:\n        # Get Audience\n        api_response = api_instance.get_audience(space_id, id, include=include)\n        print(\"The response of AudiencesApi->get_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->get_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    include := \"include_example\" // string | Additional resource to include, support schedules only.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.GetAudience(ctx, spaceId, id).Include(include).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.GetAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetAudience`: GetAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.GetAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Audience from Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an Audience by id and spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Audience Deleted` event in the [audit trail](/tag/Audit-Trail).\n\n\nThe rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeAudienceFromSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveAudienceFromSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.audiences.removeAudienceFromSpace('9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        try {\n            RemoveAudienceFromSpace200Response result = apiInstance.removeAudienceFromSpace(spaceId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#removeAudienceFromSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_audience_from_space200_response import RemoveAudienceFromSpace200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n\n    try:\n        # Remove Audience from Space\n        api_response = api_instance.remove_audience_from_space(space_id, id)\n        print(\"The response of AudiencesApi->remove_audience_from_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->remove_audience_from_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.RemoveAudienceFromSpace(ctx, spaceId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.RemoveAudienceFromSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveAudienceFromSpace`: RemoveAudienceFromSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.RemoveAudienceFromSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Audience for Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the Audience.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Audience Modified` event in the [audit trail](/tag/Audit-Trail).\n\n• Note that when an Audience is updated, the Audience will be locked from future edits until the changes have been incorporated. You can find more information [in the Segment docs](https://segment-docs.netlify.app/docs/engage/audiences/#editing-realtime-audiences-and-traits).\n Note: The definition for an Audience updated using the API is not editable through the Segment App.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateAudienceForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAudienceForSpaceAlphaInput"
              },
              "example": {
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateAudienceForSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audience": {
                      "id": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "name",
                      "description": "find shoe bought users",
                      "key": "key",
                      "enabled": false,
                      "definition": {
                        "query": "event('Shoes Bought').count() >= 1",
                        "type": "USERS"
                      },
                      "audienceType": "USERS",
                      "status": "Live",
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z",
                      "options": {
                        "includeAnonymousUsers": true,
                        "includeHistoricalData": true,
                        "filterByExternalIds": [
                          "anonymous_id"
                        ],
                        "backfillEventDataDays": 7
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.updateAudienceForSpace('9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS', { enabled: true })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        UpdateAudienceForSpaceAlphaInput updateAudienceForSpaceAlphaInput = new UpdateAudienceForSpaceAlphaInput(); // UpdateAudienceForSpaceAlphaInput | \n        try {\n            UpdateAudienceForSpace200Response result = apiInstance.updateAudienceForSpace(spaceId, id, updateAudienceForSpaceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#updateAudienceForSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_audience_for_space200_response import UpdateAudienceForSpace200Response\nfrom segment_public_api.models.update_audience_for_space_alpha_input import UpdateAudienceForSpaceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    update_audience_for_space_alpha_input = {\"enabled\":true} # UpdateAudienceForSpaceAlphaInput | \n\n    try:\n        # Update Audience for Space\n        api_response = api_instance.update_audience_for_space(space_id, id, update_audience_for_space_alpha_input)\n        print(\"The response of AudiencesApi->update_audience_for_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->update_audience_for_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    updateAudienceForSpaceAlphaInput := *api.NewUpdateAudienceForSpaceAlphaInput() // UpdateAudienceForSpaceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.UpdateAudienceForSpace(ctx, spaceId, id).UpdateAudienceForSpaceAlphaInput(updateAudienceForSpaceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.UpdateAudienceForSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateAudienceForSpace`: UpdateAudienceForSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.UpdateAudienceForSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/previews/{id}": {
      "get": {
        "summary": "Get Audience Preview",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "2yKFfGeS62yzGxQSAieVOvsPOha-compute_preview_execution-dws3UdTNsppL5dRGsagFpP-compute_preview_execution",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Reads the results of an audience preview.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getAudiencePreview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAudiencePreviewAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audiencePreview": {
                      "id": "2yKFfGeS62yzGxQSAieVOvsPOha-compute_preview_execution-dws3UdTNsppL5dRGsagFpP-compute_preview_execution",
                      "options": {
                        "backfillEventDataDays": 7,
                        "filterByExternalIds": [
                          "user_id",
                          "email",
                          "android.idfa",
                          "ios.idfa",
                          "anonymous_id"
                        ],
                        "includeHistoricalData": true
                      },
                      "audienceType": "USERS",
                      "definition": {
                        "query": "event('Shoes Bought').count() >= 1"
                      },
                      "status": "COMPLETED",
                      "results": [
                        {
                          "id": "use_aa713RLwdYfRvHW3PlW2qLeK2jx",
                          "entities": {
                            "email-account-immutable": [
                              {
                                "id": "1",
                                "idProperty": "ID",
                                "relationshipSlug": "email-accounts-immutable"
                              }
                            ]
                          }
                        }
                      ],
                      "size": {
                        "count": 1,
                        "type": "USERS"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.getAudiencePreview(\n      '9aQ1Lj62S4bomZKLF4DPqW',\n      '2yKFfGeS62yzGxQSAieVOvsPOha-compute_preview_execution-dws3UdTNsppL5dRGsagFpP-compute_preview_execution'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"2yKFfGeS62yzGxQSAieVOvsPOha-compute_preview_execution-dws3UdTNsppL5dRGsagFpP-compute_preview_execution\"; // String | \n        try {\n            GetAudiencePreview200Response result = apiInstance.getAudiencePreview(spaceId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#getAudiencePreview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_audience_preview200_response import GetAudiencePreview200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = '2yKFfGeS62yzGxQSAieVOvsPOha-compute_preview_execution-dws3UdTNsppL5dRGsagFpP-compute_preview_execution' # str | \n\n    try:\n        # Get Audience Preview\n        api_response = api_instance.get_audience_preview(space_id, id)\n        print(\"The response of AudiencesApi->get_audience_preview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->get_audience_preview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"2yKFfGeS62yzGxQSAieVOvsPOha-compute_preview_execution-dws3UdTNsppL5dRGsagFpP-compute_preview_execution\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.GetAudiencePreview(ctx, spaceId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.GetAudiencePreview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetAudiencePreview`: GetAudiencePreview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.GetAudiencePreview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{id}/schedules/{scheduleId}": {
      "get": {
        "summary": "Get Audience Schedule from Space And Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "scheduleId",
            "required": true,
            "example": "sch_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the schedule for the given audience and scheduleId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getAudienceScheduleFromSpaceAndAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetAudienceScheduleFromSpaceAndAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audienceSchedule": {
                      "id": "sch_0ujsszwN8NRY24YaXiTIE2VWDTS",
                      "strategy": "PERIODIC",
                      "config": {
                        "interval": "24h"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.getAudienceScheduleFromSpaceAndAudience(\n      '9aQ1Lj62S4bomZKLF4DPqW',\n      'aud_0ujsszwN8NRY24YaXiTIE2VWDTS',\n      'sch_0ujsszwN8NRY24YaXiTIE2VWDTS'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String scheduleId = \"sch_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        try {\n            GetAudienceScheduleFromSpaceAndAudience200Response result = apiInstance.getAudienceScheduleFromSpaceAndAudience(spaceId, id, scheduleId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#getAudienceScheduleFromSpaceAndAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_audience_schedule_from_space_and_audience200_response import GetAudienceScheduleFromSpaceAndAudience200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    schedule_id = 'sch_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n\n    try:\n        # Get Audience Schedule from Space And Audience\n        api_response = api_instance.get_audience_schedule_from_space_and_audience(space_id, id, schedule_id)\n        print(\"The response of AudiencesApi->get_audience_schedule_from_space_and_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->get_audience_schedule_from_space_and_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    scheduleId := \"sch_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.GetAudienceScheduleFromSpaceAndAudience(ctx, spaceId, id, scheduleId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.GetAudienceScheduleFromSpaceAndAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetAudienceScheduleFromSpaceAndAudience`: GetAudienceScheduleFromSpaceAndAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.GetAudienceScheduleFromSpaceAndAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/computed-traits/{id}": {
      "get": {
        "summary": "Get Computed Trait",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the Computed Trait by id and spaceId\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 100 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getComputedTrait",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetComputedTraitAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTrait": {
                      "id": "id",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "definition": {
                        "query": "event('Shoes Bought').where(property('price') >= 100).count()",
                        "type": "USERS"
                      },
                      "status": "Live",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.getComputedTrait('spaceId', 'id'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ComputedTraitsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ComputedTraitsApi apiInstance = new ComputedTraitsApi(defaultClient);\n        String spaceId = \"spaceId\"; // String | \n        String id = \"id\"; // String | \n        try {\n            GetComputedTrait200Response result = apiInstance.getComputedTrait(spaceId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ComputedTraitsApi#getComputedTrait\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_computed_trait200_response import GetComputedTrait200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ComputedTraitsApi(api_client)\n    space_id = 'spaceId' # str | \n    id = 'id' # str | \n\n    try:\n        # Get Computed Trait\n        api_response = api_instance.get_computed_trait(space_id, id)\n        print(\"The response of ComputedTraitsApi->get_computed_trait:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ComputedTraitsApi->get_computed_trait: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spaceId\" // string | \n    id := \"id\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ComputedTraitsAPI.GetComputedTrait(ctx, spaceId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ComputedTraitsAPI.GetComputedTrait``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetComputedTrait`: GetComputedTrait200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ComputedTraitsAPI.GetComputedTrait`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Computed Trait from Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Computed Trait by id and spaceId.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Computed Trait Deleted` event in the [audit trail](/tag/Audit-Trail).\n\n\nThe rate limit for this endpoint is 20 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeComputedTraitFromSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveComputedTraitFromSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.removeComputedTraitFromSpace('spaceId', 'id'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ComputedTraitsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ComputedTraitsApi apiInstance = new ComputedTraitsApi(defaultClient);\n        String spaceId = \"spaceId\"; // String | \n        String id = \"id\"; // String | \n        try {\n            RemoveComputedTraitFromSpace200Response result = apiInstance.removeComputedTraitFromSpace(spaceId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ComputedTraitsApi#removeComputedTraitFromSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_computed_trait_from_space200_response import RemoveComputedTraitFromSpace200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ComputedTraitsApi(api_client)\n    space_id = 'spaceId' # str | \n    id = 'id' # str | \n\n    try:\n        # Remove Computed Trait from Space\n        api_response = api_instance.remove_computed_trait_from_space(space_id, id)\n        print(\"The response of ComputedTraitsApi->remove_computed_trait_from_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ComputedTraitsApi->remove_computed_trait_from_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spaceId\" // string | \n    id := \"id\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ComputedTraitsAPI.RemoveComputedTraitFromSpace(ctx, spaceId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ComputedTraitsAPI.RemoveComputedTraitFromSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveComputedTraitFromSpace`: RemoveComputedTraitFromSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ComputedTraitsAPI.RemoveComputedTraitFromSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Computed Trait for Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spaceId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "id",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the Computed Trait.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Computed Trait feature enabled. Please reach out to your customer success manager for more information.\n\n• When called, this endpoint may generate the `Computed Trait Modified` event in the [audit trail](/tag/Audit-Trail).\n\n• Note that when a Computed Trait is updated, the Computed Trait will be locked from future edits until the changes have been incorporated. You can find more information [in the Segment docs](https://segment-docs.netlify.app/docs/unify/traits/computed-traits/#editing-realtime-traits).\n Note: The definition for a Computed Trait updated using the API is not editable through the Segment App.\n\n\nThe rate limit for this endpoint is 10 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateComputedTraitForSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComputedTraitForSpaceAlphaInput"
              },
              "example": {
                "enabled": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateComputedTraitForSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "computedTrait": {
                      "id": "id",
                      "spaceId": "spaceId",
                      "name": "name",
                      "description": "description",
                      "key": "key",
                      "definition": {
                        "query": "event('Shoes Bought').where(property('price') >= 100).count()",
                        "type": "USERS"
                      },
                      "status": "Live",
                      "enabled": false,
                      "createdBy": "createdBy",
                      "updatedBy": "updatedBy",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Unify",
          "Computed Traits"
        ],
        "tags": [
          "Computed Traits"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.computedTraits.updateComputedTraitForSpace('spaceId', 'id', { enabled: false }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ComputedTraitsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ComputedTraitsApi apiInstance = new ComputedTraitsApi(defaultClient);\n        String spaceId = \"spaceId\"; // String | \n        String id = \"id\"; // String | \n        UpdateComputedTraitForSpaceAlphaInput updateComputedTraitForSpaceAlphaInput = new UpdateComputedTraitForSpaceAlphaInput(); // UpdateComputedTraitForSpaceAlphaInput | \n        try {\n            UpdateComputedTraitForSpace200Response result = apiInstance.updateComputedTraitForSpace(spaceId, id, updateComputedTraitForSpaceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ComputedTraitsApi#updateComputedTraitForSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_computed_trait_for_space200_response import UpdateComputedTraitForSpace200Response\nfrom segment_public_api.models.update_computed_trait_for_space_alpha_input import UpdateComputedTraitForSpaceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ComputedTraitsApi(api_client)\n    space_id = 'spaceId' # str | \n    id = 'id' # str | \n    update_computed_trait_for_space_alpha_input = {\"enabled\":false} # UpdateComputedTraitForSpaceAlphaInput | \n\n    try:\n        # Update Computed Trait for Space\n        api_response = api_instance.update_computed_trait_for_space(space_id, id, update_computed_trait_for_space_alpha_input)\n        print(\"The response of ComputedTraitsApi->update_computed_trait_for_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ComputedTraitsApi->update_computed_trait_for_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spaceId\" // string | \n    id := \"id\" // string | \n    updateComputedTraitForSpaceAlphaInput := *api.NewUpdateComputedTraitForSpaceAlphaInput() // UpdateComputedTraitForSpaceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ComputedTraitsAPI.UpdateComputedTraitForSpace(ctx, spaceId, id).UpdateComputedTraitForSpaceAlphaInput(updateComputedTraitForSpaceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ComputedTraitsAPI.UpdateComputedTraitForSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateComputedTraitForSpace`: UpdateComputedTraitForSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ComputedTraitsAPI.UpdateComputedTraitForSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connection-state": {
      "get": {
        "summary": "Get Connection State from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Verifies the state of Warehouse connection settings.\n\n\nThe rate limit for this endpoint is 200 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getConnectionStateFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetConnectionStateFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "connectionState": "CONNECTED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.getConnectionStateFromWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        try {\n            GetConnectionStateFromWarehouse200Response result = apiInstance.getConnectionStateFromWarehouse(warehouseId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#getConnectionStateFromWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_connection_state_from_warehouse200_response import GetConnectionStateFromWarehouse200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n\n    try:\n        # Get Connection State from Warehouse\n        api_response = api_instance.get_connection_state_from_warehouse(warehouse_id)\n        print(\"The response of WarehousesApi->get_connection_state_from_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->get_connection_state_from_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.GetConnectionStateFromWarehouse(ctx, warehouseId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.GetConnectionStateFromWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetConnectionStateFromWarehouse`: GetConnectionStateFromWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.GetConnectionStateFromWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/usage/api-calls/sources/daily": {
      "get": {
        "summary": "Get Daily Per Source API Calls Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "description": "The start of the usage month in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for per Source API calls counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative per-source API call counts for a usage period.",
        "operationId": "getDailyPerSourceAPICallsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceAPICallsUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "API Calls"
        ],
        "tags": [
          "API Calls"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.apiCalls.getDailyPerSourceAPICallsUsage('2021-02-01'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ApiCallsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ApiCallsApi apiInstance = new ApiCallsApi(defaultClient);\n        String period = \"2021-02-01\"; // String | The start of the usage month in the ISO-8601 format.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination input for per Source API calls counts.  This parameter exists in v1.\n        try {\n            GetDailyPerSourceAPICallsUsage200Response result = apiInstance.getDailyPerSourceAPICallsUsage(period, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ApiCallsApi#getDailyPerSourceAPICallsUsage\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_daily_per_source_api_calls_usage200_response import GetDailyPerSourceAPICallsUsage200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.APICallsApi(api_client)\n    period = '2021-02-01' # str | The start of the usage month in the ISO-8601 format.  This parameter exists in v1.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination input for per Source API calls counts.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Daily Per Source API Calls Usage\n        api_response = api_instance.get_daily_per_source_api_calls_usage(period, pagination=pagination)\n        print(\"The response of APICallsApi->get_daily_per_source_api_calls_usage:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling APICallsApi->get_daily_per_source_api_calls_usage: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    period := \"2021-02-01\" // string | The start of the usage month in the ISO-8601 format.  This parameter exists in v1.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination input for per Source API calls counts.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.APICallsAPI.GetDailyPerSourceAPICallsUsage(ctx).Period(period).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `APICallsAPI.GetDailyPerSourceAPICallsUsage``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDailyPerSourceAPICallsUsage`: GetDailyPerSourceAPICallsUsage200Response\n    fmt.Fprintf(os.Stdout, \"Response from `APICallsAPI.GetDailyPerSourceAPICallsUsage`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/usage/mtu/sources/daily": {
      "get": {
        "summary": "Get Daily Per Source MTU Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "description": "The start of the usage month, in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month, in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for per Source MTU counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative per-source MTU counts for a usage period.",
        "operationId": "getDailyPerSourceMTUUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyPerSourceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyPerSourceMTUUsage": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "Monthly Tracked Users"
        ],
        "tags": [
          "Monthly Tracked Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.monthlyTrackedUsers.getDailyPerSourceMTUUsage('2021-02-01'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.MonthlyTrackedUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        MonthlyTrackedUsersApi apiInstance = new MonthlyTrackedUsersApi(defaultClient);\n        String period = \"2021-02-01\"; // String | The start of the usage month, in the ISO-8601 format.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination input for per Source MTU counts.  This parameter exists in v1.\n        try {\n            GetDailyPerSourceMTUUsage200Response result = apiInstance.getDailyPerSourceMTUUsage(period, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling MonthlyTrackedUsersApi#getDailyPerSourceMTUUsage\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_daily_per_source_mtu_usage200_response import GetDailyPerSourceMTUUsage200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.MonthlyTrackedUsersApi(api_client)\n    period = '2021-02-01' # str | The start of the usage month, in the ISO-8601 format.  This parameter exists in v1.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination input for per Source MTU counts.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Daily Per Source MTU Usage\n        api_response = api_instance.get_daily_per_source_mtu_usage(period, pagination=pagination)\n        print(\"The response of MonthlyTrackedUsersApi->get_daily_per_source_mtu_usage:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MonthlyTrackedUsersApi->get_daily_per_source_mtu_usage: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    period := \"2021-02-01\" // string | The start of the usage month, in the ISO-8601 format.  This parameter exists in v1.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination input for per Source MTU counts.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.MonthlyTrackedUsersAPI.GetDailyPerSourceMTUUsage(ctx).Period(period).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `MonthlyTrackedUsersAPI.GetDailyPerSourceMTUUsage``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDailyPerSourceMTUUsage`: GetDailyPerSourceMTUUsage200Response\n    fmt.Fprintf(os.Stdout, \"Response from `MonthlyTrackedUsersAPI.GetDailyPerSourceMTUUsage`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/usage/api-calls/daily": {
      "get": {
        "summary": "Get Daily Workspace API Calls Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "description": "The start of the usage month in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for Workspace API call counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative API call counts for a usage period.",
        "operationId": "getDailyWorkspaceAPICallsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceAPICallsUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceAPICallsUsage": [
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "apiCalls": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "API Calls"
        ],
        "tags": [
          "API Calls"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.apiCalls.getDailyWorkspaceAPICallsUsage('2021-02-01'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ApiCallsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ApiCallsApi apiInstance = new ApiCallsApi(defaultClient);\n        String period = \"2021-02-01\"; // String | The start of the usage month in the ISO-8601 format.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination input for Workspace API call counts.  This parameter exists in v1.\n        try {\n            GetDailyWorkspaceAPICallsUsage200Response result = apiInstance.getDailyWorkspaceAPICallsUsage(period, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ApiCallsApi#getDailyWorkspaceAPICallsUsage\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_daily_workspace_api_calls_usage200_response import GetDailyWorkspaceAPICallsUsage200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.APICallsApi(api_client)\n    period = '2021-02-01' # str | The start of the usage month in the ISO-8601 format.  This parameter exists in v1.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination input for Workspace API call counts.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Daily Workspace API Calls Usage\n        api_response = api_instance.get_daily_workspace_api_calls_usage(period, pagination=pagination)\n        print(\"The response of APICallsApi->get_daily_workspace_api_calls_usage:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling APICallsApi->get_daily_workspace_api_calls_usage: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    period := \"2021-02-01\" // string | The start of the usage month in the ISO-8601 format.  This parameter exists in v1.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination input for Workspace API call counts.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.APICallsAPI.GetDailyWorkspaceAPICallsUsage(ctx).Period(period).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `APICallsAPI.GetDailyWorkspaceAPICallsUsage``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDailyWorkspaceAPICallsUsage`: GetDailyWorkspaceAPICallsUsage200Response\n    fmt.Fprintf(os.Stdout, \"Response from `APICallsAPI.GetDailyWorkspaceAPICallsUsage`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/usage/mtu/daily": {
      "get": {
        "summary": "Get Daily Workspace MTU Usage",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "period",
            "description": "The start of the usage month, in the ISO-8601 format.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The start of the usage month, in the ISO-8601 format.",
              "type": "string",
              "title": "period"
            },
            "example": "2021-02-01"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for Workspace MTU counts.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Provides daily cumulative MTU counts for a usage period.",
        "operationId": "getDailyWorkspaceMTUUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDailyWorkspaceMTUUsageV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "dailyWorkspaceMTUUsage": [
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "3",
                        "anonymousIdentified": "7",
                        "identified": "33",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "7",
                        "anonymousIdentified": "13",
                        "identified": "67",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "10",
                        "anonymousIdentified": "20",
                        "identified": "100",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "13",
                        "anonymousIdentified": "27",
                        "identified": "133",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "17",
                        "anonymousIdentified": "33",
                        "identified": "167",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "20",
                        "anonymousIdentified": "40",
                        "identified": "200",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "23",
                        "anonymousIdentified": "47",
                        "identified": "233",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "27",
                        "anonymousIdentified": "53",
                        "identified": "267",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "30",
                        "anonymousIdentified": "60",
                        "identified": "300",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      },
                      {
                        "periodStart": 1612137600,
                        "periodEnd": 1614556800,
                        "anonymous": "33",
                        "anonymousIdentified": "67",
                        "identified": "333",
                        "neverIdentified": "0",
                        "timestamp": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTA=",
                      "totalEntries": 28
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Usage",
          "Monthly Tracked Users"
        ],
        "tags": [
          "Monthly Tracked Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.monthlyTrackedUsers.getDailyWorkspaceMTUUsage('2021-02-01'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.MonthlyTrackedUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        MonthlyTrackedUsersApi apiInstance = new MonthlyTrackedUsersApi(defaultClient);\n        String period = \"2021-02-01\"; // String | The start of the usage month, in the ISO-8601 format.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination input for Workspace MTU counts.  This parameter exists in v1.\n        try {\n            GetDailyWorkspaceMTUUsage200Response result = apiInstance.getDailyWorkspaceMTUUsage(period, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling MonthlyTrackedUsersApi#getDailyWorkspaceMTUUsage\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_daily_workspace_mtu_usage200_response import GetDailyWorkspaceMTUUsage200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.MonthlyTrackedUsersApi(api_client)\n    period = '2021-02-01' # str | The start of the usage month, in the ISO-8601 format.  This parameter exists in v1.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination input for Workspace MTU counts.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Daily Workspace MTU Usage\n        api_response = api_instance.get_daily_workspace_mtu_usage(period, pagination=pagination)\n        print(\"The response of MonthlyTrackedUsersApi->get_daily_workspace_mtu_usage:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling MonthlyTrackedUsersApi->get_daily_workspace_mtu_usage: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    period := \"2021-02-01\" // string | The start of the usage month, in the ISO-8601 format.  This parameter exists in v1.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination input for Workspace MTU counts.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.MonthlyTrackedUsersAPI.GetDailyWorkspaceMTUUsage(ctx).Period(period).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `MonthlyTrackedUsersAPI.GetDailyWorkspaceMTUUsage``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDailyWorkspaceMTUUsage`: GetDailyWorkspaceMTUUsage200Response\n    fmt.Fprintf(os.Stdout, \"Response from `MonthlyTrackedUsersAPI.GetDailyWorkspaceMTUUsage`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/catalog/destinations/{destinationMetadataId}": {
      "get": {
        "summary": "Get Destination Metadata",
        "parameters": [
          {
            "in": "path",
            "name": "destinationMetadataId",
            "required": true,
            "example": "54521fd525e721e32a72ee91",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Destination catalog item by its id.",
        "operationId": "getDestinationMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationMetadata": {
                      "id": "54521fd525e721e32a72ee91",
                      "name": "Amplitude",
                      "description": "Amplitude is an event tracking and segmentation platform for your web and mobile apps. By analyzing the actions your users perform, you can gain a better understanding to drive retention, engagement, and conversion.",
                      "slug": "amplitude",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/amplitude-default.svg",
                        "mark": "https://cdn.filepicker.io/api/file/Nmj7LgOQR62rdAmlbnLO"
                      },
                      "options": [
                        {
                          "name": "apiKey",
                          "type": "string",
                          "defaultValue": "",
                          "description": "You can find your API Key on your Amplitude [Settings page](https://amplitude.com/settings).",
                          "required": true,
                          "label": "API Key"
                        },
                        {
                          "name": "appendFieldsToEventProps",
                          "type": "text-map",
                          "defaultValue": {},
                          "description": "Web Device-mode only. Configure event fields to be appended to `event_props` for all track calls. For example, entering `context.page.title` on the left and `pageTitle` on the right will set the value of `context.page.title` at `event_properties.pageTitle`.",
                          "required": false,
                          "label": "Append Fields To Event Properties"
                        },
                        {
                          "name": "batchEvents",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, events are batched together and uploaded only when the number of unsent events is greater than or equal to `eventUploadThreshold` or after `eventUploadPeriodMillis` milliseconds have passed since the first unsent event was logged.",
                          "required": false,
                          "label": "Batch Events"
                        },
                        {
                          "name": "deviceIdFromUrlParam",
                          "type": "boolean",
                          "defaultValue": false,
                          "description": "If true, the SDK will parse device ID values from url parameter `amp_device_id` if available.",
                          "required": false,
                          "label": "Set Device ID From URL Parameter amp_device_id"
                        },
                        {
                          "name": "enableLocationListening",
                          "type": "boolean",
                          "defaultValue": true,
                          "description": "Mobile Only. If a user has granted your app location permissions, enable this setting so that the SDK will also grab the location of the user. Amplitude will never prompt the user for location permission, so this must be done by your app. ",
                          "required": false,
                          "label": "Enable Location Listening"
                        }
                      ],
                      "status": "PUBLIC",
                      "categories": [
                        "Analytics"
                      ],
                      "website": "http://amplitude.com",
                      "components": [
                        {
                          "code": "https://github.com/segmentio/analytics.js-integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "BROWSER"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-ios-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "IOS"
                        },
                        {
                          "code": "https://github.com/segment-integrations/analytics-android-integration-amplitude",
                          "owner": "SEGMENT",
                          "type": "ANDROID"
                        },
                        {
                          "code": "https://github.com/segmentio/integrations/tree/master/integrations/amplitude",
                          "owner": "SEGMENT",
                          "type": "SERVER"
                        }
                      ],
                      "previousNames": [
                        "Amplitude"
                      ],
                      "supportedMethods": {
                        "track": true,
                        "pageview": true,
                        "identify": true,
                        "group": true,
                        "alias": false
                      },
                      "supportedPlatforms": {
                        "browser": true,
                        "mobile": true,
                        "server": true,
                        "warehouse": false
                      },
                      "supportedFeatures": {
                        "cloudModeInstances": "0",
                        "deviceModeInstances": "0",
                        "replay": false,
                        "browserUnbundling": true,
                        "browserUnbundlingPublic": true
                      },
                      "actions": [],
                      "presets": [],
                      "contacts": [
                        {
                          "name": "Mike Ottavi-Brannon",
                          "email": "mike@amplitude.com",
                          "role": "Principle Product Manager",
                          "isPrimary": true
                        },
                        {
                          "name": "Kurt Norwood",
                          "email": "kurt@amplitude.com",
                          "role": "Software Engineer",
                          "isPrimary": false
                        }
                      ],
                      "partnerOwned": false,
                      "supportedRegions": [
                        "eu-west-1",
                        "us-west-2"
                      ],
                      "regionEndpoints": [
                        "US",
                        "EU"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getDestinationMetadata('54521fd525e721e32a72ee91'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CatalogApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CatalogApi apiInstance = new CatalogApi(defaultClient);\n        String destinationMetadataId = \"54521fd525e721e32a72ee91\"; // String | \n        try {\n            GetDestinationMetadata200Response result = apiInstance.getDestinationMetadata(destinationMetadataId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CatalogApi#getDestinationMetadata\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_destination_metadata200_response import GetDestinationMetadata200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CatalogApi(api_client)\n    destination_metadata_id = '54521fd525e721e32a72ee91' # str | \n\n    try:\n        # Get Destination Metadata\n        api_response = api_instance.get_destination_metadata(destination_metadata_id)\n        print(\"The response of CatalogApi->get_destination_metadata:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CatalogApi->get_destination_metadata: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationMetadataId := \"54521fd525e721e32a72ee91\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CatalogAPI.GetDestinationMetadata(ctx, destinationMetadataId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CatalogAPI.GetDestinationMetadata``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDestinationMetadata`: GetDestinationMetadata200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CatalogAPI.GetDestinationMetadata`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/catalog/destinations": {
      "get": {
        "summary": "Get Destinations Catalog",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination parameters used to filter the Destinations catalog.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Destinations in the Segment catalog.",
        "operationId": "getDestinationsCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": false,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 446
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": false,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 446
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": false,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 446
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDestinationsCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinationsCatalog": [
                      {
                        "id": "54521fd525e721e32a72ee8e",
                        "name": "AdRoll",
                        "description": "AdRoll is a retargeting network that allows you to show ads to visitors who've landed on your site while browsing the web. ",
                        "slug": "adroll",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/adroll-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/IKo2fU59RROBsNtj4lHs"
                        },
                        "options": [
                          {
                            "name": "_version",
                            "type": "number",
                            "defaultValue": 2,
                            "description": "",
                            "required": false,
                            "label": "_version"
                          },
                          {
                            "name": "advId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Advertiser ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Advertiser ID appears as `adroll_avd_id = 'XXXXXXX'` on line 2. It should be 22 characters long and look something like this: `WYJD6WNIAJC2XG6PT7UK4B`.",
                            "required": true,
                            "label": "Advertiser ID"
                          },
                          {
                            "name": "events",
                            "type": "text-map",
                            "defaultValue": {},
                            "description": "AdRoll allows you to create a Segment Name and ID for conversions events. Use this mapping to trigger the *AdRoll Segment ID* (on the right) when the Event Name (on the left) is passed in a Track method.",
                            "required": false,
                            "label": "Events"
                          },
                          {
                            "name": "pixId",
                            "type": "string",
                            "defaultValue": "",
                            "description": "You can find your Pixel ID in your AdRoll dashboard by clicking the **green or red dot** in the lower-left corner. In the Javascript snippet, the Pixel ID appears as `adroll_pix_id = 'XXXXXXX'` on line 3. It should be 22 characters long, and look something like this: `6UUA5LKILFESVE44XH6SVX`.",
                            "required": true,
                            "label": "Pixel ID"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Advertising"
                        ],
                        "website": "http://adroll.com",
                        "components": [
                          {
                            "code": "https://github.com/segment-integrations/analytics.js-integration-adroll",
                            "type": "BROWSER"
                          }
                        ],
                        "previousNames": [
                          "AdRoll"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": true,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": true,
                          "mobile": false,
                          "server": false,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [
                          {
                            "name": "John Doe",
                            "email": "john.doe@example.com",
                            "role": "VP of engineering",
                            "isPrimary": true
                          }
                        ],
                        "partnerOwned": false
                      },
                      {
                        "id": "54521fd525e721e32a72ee8f",
                        "name": "AppsFlyer",
                        "description": "Mobile app measurement and tracking.",
                        "slug": "appsflyer",
                        "logos": {
                          "default": "https://d3hotuclm6if1r.cloudfront.net/logos/appsflyer-default.svg",
                          "mark": "https://cdn.filepicker.io/api/file/AnJUEBvxRouLLOvIeQuK"
                        },
                        "options": [
                          {
                            "name": "androidAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your Android App's ID. Find this in your AppsFlyer's 'My App' dashboard. It should look something like 'com.appsflyer.myapp'. This is required for Android projects if you want to send events using the server side integration.",
                            "required": true,
                            "label": "Android App ID"
                          },
                          {
                            "name": "appleAppID",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your App's ID, which is accessible from iTunes or in AppsFlyer's 'My App' dashboard. This is optional for Android projects, and only required for iOS projects.",
                            "required": true,
                            "label": "Apple App ID (iOS)"
                          },
                          {
                            "name": "appsFlyerDevKey",
                            "type": "string",
                            "defaultValue": "",
                            "description": "Your unique developer ID from AppsFlyer, which is accessible from your AppsFlyer account.",
                            "required": true,
                            "label": "AppsFlyer Dev Key"
                          },
                          {
                            "name": "canOmitAppsFlyerId",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "*Only applicable for Appsflyer's Business Tiers customers using server-side or cloud mode destination.* Please contact your AppsFlyer representative for more information. This setting allows to use the advertising ID as appsflyer ID.",
                            "required": false,
                            "label": "Can Omit AppsFlyerId"
                          },
                          {
                            "name": "fallbackToIdfv",
                            "type": "boolean",
                            "defaultValue": false,
                            "description": "With the update to use analytics-ios v4.x SDK if adTrackingEnabled is set to false, the advertisingId key will be deleted from the event. If you have the setting enabled \"Can Omit AppsFlyerId\", these events will fail when sent to AppsFlyer API. To prevent these event failures in this scenario enable this send the IDFV instead. When the \"Can Omit AppsFlyerId\" setting is enabled if the IDFA is zeroed out, we will also send an IDFV when this setting is enabled. ",
                            "required": false,
                            "label": "Fallback to send IDFV when advertisingId key not present (Server-Side Only)"
                          }
                        ],
                        "status": "PUBLIC",
                        "categories": [
                          "Attribution",
                          "Deep Linking"
                        ],
                        "website": "http://www.appsflyer.com/",
                        "components": [
                          {
                            "code": "https://github.com/AppsFlyerSDK/segment-appsflyer-ios",
                            "owner": "PARTNER",
                            "type": "IOS"
                          },
                          {
                            "code": "https://github.com/AppsFlyerSDK/AppsFlyer-Segment-Integration",
                            "owner": "PARTNER",
                            "type": "ANDROID"
                          },
                          {
                            "code": "https://github.com/segmentio/integrations/tree/master/integrations/appsflyer",
                            "owner": "SEGMENT",
                            "type": "SERVER"
                          }
                        ],
                        "previousNames": [
                          "AppsFlyer"
                        ],
                        "supportedMethods": {
                          "track": true,
                          "pageview": false,
                          "identify": true,
                          "group": false,
                          "alias": false
                        },
                        "supportedPlatforms": {
                          "browser": false,
                          "mobile": true,
                          "server": true,
                          "warehouse": false
                        },
                        "supportedFeatures": {
                          "cloudModeInstances": "0",
                          "deviceModeInstances": "0",
                          "replay": false,
                          "browserUnbundling": false,
                          "browserUnbundlingPublic": true
                        },
                        "actions": [],
                        "presets": [],
                        "contacts": [],
                        "partnerOwned": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 446
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getDestinationsCatalog())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CatalogApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CatalogApi apiInstance = new CatalogApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Required pagination parameters used to filter the Destinations catalog.  This parameter exists in v1.\n        try {\n            GetDestinationsCatalog200Response result = apiInstance.getDestinationsCatalog(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CatalogApi#getDestinationsCatalog\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_destinations_catalog200_response import GetDestinationsCatalog200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CatalogApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Required pagination parameters used to filter the Destinations catalog.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Destinations Catalog\n        api_response = api_instance.get_destinations_catalog(pagination=pagination)\n        print(\"The response of CatalogApi->get_destinations_catalog:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CatalogApi->get_destinations_catalog: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Required pagination parameters used to filter the Destinations catalog.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CatalogAPI.GetDestinationsCatalog(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CatalogAPI.GetDestinationsCatalog``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetDestinationsCatalog`: GetDestinationsCatalog200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CatalogAPI.GetDestinationsCatalog`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/delivery-overview/failed-delivery": {
      "get": {
        "summary": "Get Egress Failed Metrics from Delivery Overview",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The sourceId for the Workspace.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The sourceId for the Workspace.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": true,
            "name": "destinationConfigId",
            "description": "The id tied to a Workspace Destination.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id tied to a Workspace Destination.",
              "type": "string",
              "title": "destinationConfigId"
            },
            "example": "fP7qoQw2HTWt9WdMr718gn"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2024-01-03T00:00:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventName"
          },
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": false,
            "name": "filter",
            "description": "An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/DeliveryOverviewDestinationFilterBy"
            },
            "example": "filter.discardReason=discard1&filter.eventName=name1%2Cname2&filter.eventType=track&filter.spaceId=spa_123&filter.audienceId=aud_123"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Params to specify the page cursor and count.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.cursor=MA%3D%3D&pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Get events that failed to be delivered to Destination.",
        "operationId": "getEgressFailedMetricsFromDeliveryOverview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDeliveryOverviewMetricsBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "total": 32504644,
                    "dataset": [
                      {
                        "eventName": "event-name",
                        "total": 32504644,
                        "series": [
                          {
                            "time": "2024-01-01T00:00:00Z",
                            "count": 15637145
                          },
                          {
                            "time": "2024-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Delivery Overview"
        ],
        "tags": [
          "Delivery Overview"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deliveryOverview.getEgressFailedMetricsFromDeliveryOverview(\n      'rh5BDZp6QDHvXFCkibm1pR',\n      'fP7qoQw2HTWt9WdMr718gn',\n      '2024-01-01T00:00:00Z',\n      '2024-01-03T00:00:00Z',\n      'DAY'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeliveryOverviewApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeliveryOverviewApi apiInstance = new DeliveryOverviewApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The sourceId for the Workspace.  This parameter exists in beta.\n        String destinationConfigId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | The id tied to a Workspace Destination.  This parameter exists in beta.\n        String startTime = \"2024-01-01T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n        String endTime = \"2024-01-03T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n        DeliveryOverviewDestinationFilterBy filter = new DeliveryOverviewDestinationFilterBy(); // DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.  This parameter exists in beta.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta.\n        try {\n            GetEgressFailedMetricsFromDeliveryOverview200Response result = apiInstance.getEgressFailedMetricsFromDeliveryOverview(sourceId, destinationConfigId, startTime, endTime, groupBy, granularity, filter, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeliveryOverviewApi#getEgressFailedMetricsFromDeliveryOverview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delivery_overview_destination_filter_by import DeliveryOverviewDestinationFilterBy\nfrom segment_public_api.models.get_egress_failed_metrics_from_delivery_overview200_response import GetEgressFailedMetricsFromDeliveryOverview200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeliveryOverviewApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The sourceId for the Workspace.  This parameter exists in beta.\n    destination_config_id = 'fP7qoQw2HTWt9WdMr718gn' # str | The id tied to a Workspace Destination.  This parameter exists in beta.\n    start_time = '2024-01-01T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    end_time = '2024-01-03T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    group_by = ['groupBy.0=eventName'] # List[str] | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta. (optional)\n    filter = segment_public_api.DeliveryOverviewDestinationFilterBy() # DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    try:\n        # Get Egress Failed Metrics from Delivery Overview\n        api_response = api_instance.get_egress_failed_metrics_from_delivery_overview(source_id, destination_config_id, start_time, end_time, granularity, group_by=group_by, filter=filter, pagination=pagination)\n        print(\"The response of DeliveryOverviewApi->get_egress_failed_metrics_from_delivery_overview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeliveryOverviewApi->get_egress_failed_metrics_from_delivery_overview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The sourceId for the Workspace.  This parameter exists in beta.\n    destinationConfigId := \"fP7qoQw2HTWt9WdMr718gn\" // string | The id tied to a Workspace Destination.  This parameter exists in beta.\n    startTime := \"2024-01-01T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    endTime := \"2024-01-03T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta. (optional)\n    filter := *api.NewDeliveryOverviewDestinationFilterBy() // DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeliveryOverviewAPI.GetEgressFailedMetricsFromDeliveryOverview(ctx).SourceId(sourceId).DestinationConfigId(destinationConfigId).StartTime(startTime).EndTime(endTime).Granularity(granularity).GroupBy(groupBy).Filter(filter).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeliveryOverviewAPI.GetEgressFailedMetricsFromDeliveryOverview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetEgressFailedMetricsFromDeliveryOverview`: GetEgressFailedMetricsFromDeliveryOverview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeliveryOverviewAPI.GetEgressFailedMetricsFromDeliveryOverview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/delivery-overview/successful-delivery": {
      "get": {
        "summary": "Get Egress Success Metrics from Delivery Overview",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The sourceId for the Workspace.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The sourceId for the Workspace.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": true,
            "name": "destinationConfigId",
            "description": "The id tied to a Workspace Destination.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id tied to a Workspace Destination.",
              "type": "string",
              "title": "destinationConfigId"
            },
            "example": "fP7qoQw2HTWt9WdMr718gn"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2024-01-03T00:00:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventName"
          },
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": false,
            "name": "filter",
            "description": "An optional filter for `event Name`, `event Type`, `discard Reason`, `appVersion`, `subscription Id`, `activationId`, `audienceId`, or `spaceId` that can be applied in addition to a `group By`.\nIf you would like to view retry attempts for a successful delivery, you can filter `discard Reason` from `successes.attempt.1` through `successes.attempt.10`.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/DeliveryOverviewDestinationFilterBy"
            },
            "example": "filter.discardReason=discard1&filter.eventName=name1%2Cname2&filter.eventType=track&filter.spaceId=spa_123&filter.activationId=ee_123"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Params to specify the page cursor and count.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.cursor=MA%3D%3D&pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Get events successfully delivered to Destination.",
        "operationId": "getEgressSuccessMetricsFromDeliveryOverview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDeliveryOverviewMetricsBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "total": 32504644,
                    "dataset": [
                      {
                        "eventName": "event-name",
                        "total": 32504644,
                        "series": [
                          {
                            "time": "2024-01-01T00:00:00Z",
                            "count": 15637145
                          },
                          {
                            "time": "2024-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Delivery Overview"
        ],
        "tags": [
          "Delivery Overview"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deliveryOverview.getEgressSuccessMetricsFromDeliveryOverview(\n      'rh5BDZp6QDHvXFCkibm1pR',\n      'fP7qoQw2HTWt9WdMr718gn',\n      '2024-01-01T00:00:00Z',\n      '2024-01-03T00:00:00Z',\n      'DAY'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeliveryOverviewApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeliveryOverviewApi apiInstance = new DeliveryOverviewApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The sourceId for the Workspace.  This parameter exists in beta.\n        String destinationConfigId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | The id tied to a Workspace Destination.  This parameter exists in beta.\n        String startTime = \"2024-01-01T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n        String endTime = \"2024-01-03T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n        DeliveryOverviewDestinationFilterBy filter = new DeliveryOverviewDestinationFilterBy(); // DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `appVersion`, `subscription Id`, `activationId`, `audienceId`, or `spaceId` that can be applied in addition to a `group By`. If you would like to view retry attempts for a successful delivery, you can filter `discard Reason` from `successes.attempt.1` through `successes.attempt.10`.  This parameter exists in beta.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta.\n        try {\n            GetEgressFailedMetricsFromDeliveryOverview200Response result = apiInstance.getEgressSuccessMetricsFromDeliveryOverview(sourceId, destinationConfigId, startTime, endTime, groupBy, granularity, filter, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeliveryOverviewApi#getEgressSuccessMetricsFromDeliveryOverview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delivery_overview_destination_filter_by import DeliveryOverviewDestinationFilterBy\nfrom segment_public_api.models.get_egress_failed_metrics_from_delivery_overview200_response import GetEgressFailedMetricsFromDeliveryOverview200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeliveryOverviewApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The sourceId for the Workspace.  This parameter exists in beta.\n    destination_config_id = 'fP7qoQw2HTWt9WdMr718gn' # str | The id tied to a Workspace Destination.  This parameter exists in beta.\n    start_time = '2024-01-01T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    end_time = '2024-01-03T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    group_by = ['groupBy.0=eventName'] # List[str] | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta. (optional)\n    filter = segment_public_api.DeliveryOverviewDestinationFilterBy() # DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `appVersion`, `subscription Id`, `activationId`, `audienceId`, or `spaceId` that can be applied in addition to a `group By`. If you would like to view retry attempts for a successful delivery, you can filter `discard Reason` from `successes.attempt.1` through `successes.attempt.10`.  This parameter exists in beta. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    try:\n        # Get Egress Success Metrics from Delivery Overview\n        api_response = api_instance.get_egress_success_metrics_from_delivery_overview(source_id, destination_config_id, start_time, end_time, granularity, group_by=group_by, filter=filter, pagination=pagination)\n        print(\"The response of DeliveryOverviewApi->get_egress_success_metrics_from_delivery_overview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeliveryOverviewApi->get_egress_success_metrics_from_delivery_overview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The sourceId for the Workspace.  This parameter exists in beta.\n    destinationConfigId := \"fP7qoQw2HTWt9WdMr718gn\" // string | The id tied to a Workspace Destination.  This parameter exists in beta.\n    startTime := \"2024-01-01T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    endTime := \"2024-01-03T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta. (optional)\n    filter := *api.NewDeliveryOverviewDestinationFilterBy() // DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `appVersion`, `subscription Id`, `activationId`, `audienceId`, or `spaceId` that can be applied in addition to a `group By`. If you would like to view retry attempts for a successful delivery, you can filter `discard Reason` from `successes.attempt.1` through `successes.attempt.10`.  This parameter exists in beta. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeliveryOverviewAPI.GetEgressSuccessMetricsFromDeliveryOverview(ctx).SourceId(sourceId).DestinationConfigId(destinationConfigId).StartTime(startTime).EndTime(endTime).Granularity(granularity).GroupBy(groupBy).Filter(filter).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeliveryOverviewAPI.GetEgressSuccessMetricsFromDeliveryOverview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetEgressSuccessMetricsFromDeliveryOverview`: GetEgressFailedMetricsFromDeliveryOverview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeliveryOverviewAPI.GetEgressSuccessMetricsFromDeliveryOverview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/events/volume": {
      "get": {
        "summary": "Get Events Volume from Workspace",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The size of each bucket in the requested window.",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ISO8601 formatted timestamp that corresponds to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2021-10-28T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested time frame, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The ISO8601 formatted timestamp that corresponds to the\nend of the requested time frame, noninclusive.\nSegment recommends that you lag queries 1 minute behind clock time to reduce\nthe risk for latency to impact the counts.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2021-10-29T16:40:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A comma-delimited list of strings that represents the dimensions\nto group the result by. The options are:\n`eventName`, `eventType` and `source`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventType"
          },
          {
            "in": "query",
            "required": false,
            "name": "sourceId",
            "description": "A list of strings which filters the results to the given\nSourceIds.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nSourceIds.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "sourceId"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "eventName",
            "description": "A list of strings which filters the results to the given\nEventNames.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nEventNames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "eventName"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "eventType",
            "description": "A list of strings which filters the results to the given\nEventTypes.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nEventTypes.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "eventType"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "appVersion",
            "description": "A list of strings which filters the results to the given\nAppVersions.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "A list of strings which filters the results to the given\nAppVersions.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "appVersion"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination input for event volume by Workspace.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            }
          }
        ],
        "deprecated": false,
        "description": "Enumerates the Workspace event volumes over time in minute increments.\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getEventsVolumeFromWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "path": "/observability/event_volume/v2.json",
                    "query": {
                      "workspaceId": "workspace-id",
                      "startTime": "2023-01-01T00:00:00Z",
                      "endTime": "2023-01-03T00:00:00Z",
                      "granularity": "DAY"
                    },
                    "result": [
                      {
                        "total": 32504646,
                        "series": [
                          {
                            "time": "2023-01-01T00:00:00Z",
                            "count": 15637147
                          },
                          {
                            "time": "2023-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Monitoring",
          "Events"
        ],
        "tags": [
          "Events"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.events.getEventsVolumeFromWorkspace('DAY', '2021-10-28T00:00:00Z', '2021-10-29T16:40:00Z'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.EventsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        EventsApi apiInstance = new EventsApi(defaultClient);\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  This parameter exists in v1.\n        String startTime = \"2021-10-28T00:00:00Z\"; // String | The ISO8601 formatted timestamp that corresponds to the beginning of the requested time frame, inclusive.  This parameter exists in v1.\n        String endTime = \"2021-10-29T16:40:00Z\"; // String | The ISO8601 formatted timestamp that corresponds to the end of the requested time frame, noninclusive. Segment recommends that you lag queries 1 minute behind clock time to reduce the risk for latency to impact the counts.  This parameter exists in v1.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings that represents the dimensions to group the result by. The options are: `eventName`, `eventType` and `source`.  This parameter exists in v1.\n        List<String> sourceId = Arrays.asList(); // List<String> | A list of strings which filters the results to the given SourceIds.  This parameter exists in v1.\n        List<String> eventName = Arrays.asList(); // List<String> | A list of strings which filters the results to the given EventNames.  This parameter exists in v1.\n        List<String> eventType = Arrays.asList(); // List<String> | A list of strings which filters the results to the given EventTypes.  This parameter exists in v1.\n        List<String> appVersion = Arrays.asList(); // List<String> | A list of strings which filters the results to the given AppVersions.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination input for event volume by Workspace.  This parameter exists in v1.\n        try {\n            GetEventsVolumeFromWorkspace200Response result = apiInstance.getEventsVolumeFromWorkspace(granularity, startTime, endTime, groupBy, sourceId, eventName, eventType, appVersion, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling EventsApi#getEventsVolumeFromWorkspace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_events_volume_from_workspace200_response import GetEventsVolumeFromWorkspace200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.EventsApi(api_client)\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  This parameter exists in v1.\n    start_time = '2021-10-28T00:00:00Z' # str | The ISO8601 formatted timestamp that corresponds to the beginning of the requested time frame, inclusive.  This parameter exists in v1.\n    end_time = '2021-10-29T16:40:00Z' # str | The ISO8601 formatted timestamp that corresponds to the end of the requested time frame, noninclusive. Segment recommends that you lag queries 1 minute behind clock time to reduce the risk for latency to impact the counts.  This parameter exists in v1.\n    group_by = ['groupBy.0=eventType'] # List[str] | A comma-delimited list of strings that represents the dimensions to group the result by. The options are: `eventName`, `eventType` and `source`.  This parameter exists in v1. (optional)\n    source_id = ['source_id_example'] # List[str] | A list of strings which filters the results to the given SourceIds.  This parameter exists in v1. (optional)\n    event_name = ['event_name_example'] # List[str] | A list of strings which filters the results to the given EventNames.  This parameter exists in v1. (optional)\n    event_type = ['event_type_example'] # List[str] | A list of strings which filters the results to the given EventTypes.  This parameter exists in v1. (optional)\n    app_version = ['app_version_example'] # List[str] | A list of strings which filters the results to the given AppVersions.  This parameter exists in v1. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination input for event volume by Workspace.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Events Volume from Workspace\n        api_response = api_instance.get_events_volume_from_workspace(granularity, start_time, end_time, group_by=group_by, source_id=source_id, event_name=event_name, event_type=event_type, app_version=app_version, pagination=pagination)\n        print(\"The response of EventsApi->get_events_volume_from_workspace:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling EventsApi->get_events_volume_from_workspace: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  This parameter exists in v1.\n    startTime := \"2021-10-28T00:00:00Z\" // string | The ISO8601 formatted timestamp that corresponds to the beginning of the requested time frame, inclusive.  This parameter exists in v1.\n    endTime := \"2021-10-29T16:40:00Z\" // string | The ISO8601 formatted timestamp that corresponds to the end of the requested time frame, noninclusive. Segment recommends that you lag queries 1 minute behind clock time to reduce the risk for latency to impact the counts.  This parameter exists in v1.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings that represents the dimensions to group the result by. The options are: `eventName`, `eventType` and `source`.  This parameter exists in v1. (optional)\n    sourceId := []string{\"Inner_example\"} // []string | A list of strings which filters the results to the given SourceIds.  This parameter exists in v1. (optional)\n    eventName := []string{\"Inner_example\"} // []string | A list of strings which filters the results to the given EventNames.  This parameter exists in v1. (optional)\n    eventType := []string{\"Inner_example\"} // []string | A list of strings which filters the results to the given EventTypes.  This parameter exists in v1. (optional)\n    appVersion := []string{\"Inner_example\"} // []string | A list of strings which filters the results to the given AppVersions.  This parameter exists in v1. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination input for event volume by Workspace.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.EventsAPI.GetEventsVolumeFromWorkspace(ctx).Granularity(granularity).StartTime(startTime).EndTime(endTime).GroupBy(groupBy).SourceId(sourceId).EventName(eventName).EventType(eventType).AppVersion(appVersion).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `EventsAPI.GetEventsVolumeFromWorkspace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetEventsVolumeFromWorkspace`: GetEventsVolumeFromWorkspace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `EventsAPI.GetEventsVolumeFromWorkspace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/delivery-overview/filtered-at-destination": {
      "get": {
        "summary": "Get Filtered At Destination Metrics from Delivery Overview",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The sourceId for the Workspace.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The sourceId for the Workspace.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": true,
            "name": "destinationConfigId",
            "description": "The id tied to a Workspace Destination.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id tied to a Workspace Destination.",
              "type": "string",
              "title": "destinationConfigId"
            },
            "example": "fP7qoQw2HTWt9WdMr718gn"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2024-01-03T00:00:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventName&groupBy.1=subscriptionId"
          },
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": false,
            "name": "filter",
            "description": "An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/DeliveryOverviewDestinationFilterBy"
            },
            "example": "filter.discardReason=discard1&filter.eventName=name1%2Cname2&filter.eventType=track&filter.subscriptionId=sub&filter.spaceId=spa_123&filter.activationId=ee_123"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Params to specify the page cursor and count.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.cursor=MA%3D%3D&pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Get events that were filtered at Destination.",
        "operationId": "getFilteredAtDestinationMetricsFromDeliveryOverview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDeliveryOverviewMetricsBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "total": 32504644,
                    "dataset": [
                      {
                        "eventName": "event-name",
                        "spaceId": "spa_123",
                        "subscriptionId": "sub-id",
                        "total": 32504644,
                        "series": [
                          {
                            "time": "2024-01-01T00:00:00Z",
                            "count": 15637145
                          },
                          {
                            "time": "2024-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Delivery Overview"
        ],
        "tags": [
          "Delivery Overview"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deliveryOverview.getFilteredAtDestinationMetricsFromDeliveryOverview(\n      'rh5BDZp6QDHvXFCkibm1pR',\n      'fP7qoQw2HTWt9WdMr718gn',\n      '2024-01-01T00:00:00Z',\n      '2024-01-03T00:00:00Z',\n      'DAY'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeliveryOverviewApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeliveryOverviewApi apiInstance = new DeliveryOverviewApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The sourceId for the Workspace.  This parameter exists in beta.\n        String destinationConfigId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | The id tied to a Workspace Destination.  This parameter exists in beta.\n        String startTime = \"2024-01-01T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n        String endTime = \"2024-01-03T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n        DeliveryOverviewDestinationFilterBy filter = new DeliveryOverviewDestinationFilterBy(); // DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.  This parameter exists in beta.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta.\n        try {\n            GetEgressFailedMetricsFromDeliveryOverview200Response result = apiInstance.getFilteredAtDestinationMetricsFromDeliveryOverview(sourceId, destinationConfigId, startTime, endTime, groupBy, granularity, filter, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeliveryOverviewApi#getFilteredAtDestinationMetricsFromDeliveryOverview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delivery_overview_destination_filter_by import DeliveryOverviewDestinationFilterBy\nfrom segment_public_api.models.get_egress_failed_metrics_from_delivery_overview200_response import GetEgressFailedMetricsFromDeliveryOverview200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeliveryOverviewApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The sourceId for the Workspace.  This parameter exists in beta.\n    destination_config_id = 'fP7qoQw2HTWt9WdMr718gn' # str | The id tied to a Workspace Destination.  This parameter exists in beta.\n    start_time = '2024-01-01T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    end_time = '2024-01-03T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    group_by = ['groupBy.0=eventName&groupBy.1=subscriptionId'] # List[str] | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta. (optional)\n    filter = segment_public_api.DeliveryOverviewDestinationFilterBy() # DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    try:\n        # Get Filtered At Destination Metrics from Delivery Overview\n        api_response = api_instance.get_filtered_at_destination_metrics_from_delivery_overview(source_id, destination_config_id, start_time, end_time, granularity, group_by=group_by, filter=filter, pagination=pagination)\n        print(\"The response of DeliveryOverviewApi->get_filtered_at_destination_metrics_from_delivery_overview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeliveryOverviewApi->get_filtered_at_destination_metrics_from_delivery_overview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The sourceId for the Workspace.  This parameter exists in beta.\n    destinationConfigId := \"fP7qoQw2HTWt9WdMr718gn\" // string | The id tied to a Workspace Destination.  This parameter exists in beta.\n    startTime := \"2024-01-01T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    endTime := \"2024-01-03T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and `spaceId`.  This parameter exists in beta. (optional)\n    filter := *api.NewDeliveryOverviewDestinationFilterBy() // DeliveryOverviewDestinationFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, `app Version`, `subscription Id`, `activationId`, `audienceId`, and/or `spaceId` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeliveryOverviewAPI.GetFilteredAtDestinationMetricsFromDeliveryOverview(ctx).SourceId(sourceId).DestinationConfigId(destinationConfigId).StartTime(startTime).EndTime(endTime).Granularity(granularity).GroupBy(groupBy).Filter(filter).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeliveryOverviewAPI.GetFilteredAtDestinationMetricsFromDeliveryOverview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetFilteredAtDestinationMetricsFromDeliveryOverview`: GetEgressFailedMetricsFromDeliveryOverview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeliveryOverviewAPI.GetFilteredAtDestinationMetricsFromDeliveryOverview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/delivery-overview/filtered-at-source": {
      "get": {
        "summary": "Get Filtered At Source Metrics from Delivery Overview",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The sourceId for the Workspace.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The sourceId for the Workspace.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2024-01-03T00:00:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, and `app Version`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, and `app Version`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventName"
          },
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": false,
            "name": "filter",
            "description": "An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/DeliveryOverviewSourceFilterBy"
            },
            "example": "filter.discardReason=discard1&filter.eventName=name1%2Cname2&filter.eventType=track"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Optional params to specify the page cursor and count.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.cursor=MA%3D%3D&pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Get events that were filtered at Source.",
        "operationId": "getFilteredAtSourceMetricsFromDeliveryOverview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDeliveryOverviewMetricsBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "total": 32504644,
                    "dataset": [
                      {
                        "eventName": "event-name",
                        "spaceId": "spa_123",
                        "subscriptionId": "sub-id",
                        "total": 32504644,
                        "series": [
                          {
                            "time": "2024-01-01T00:00:00Z",
                            "count": 15637145
                          },
                          {
                            "time": "2024-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Delivery Overview"
        ],
        "tags": [
          "Delivery Overview"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deliveryOverview.getFilteredAtSourceMetricsFromDeliveryOverview(\n      'rh5BDZp6QDHvXFCkibm1pR',\n      '2024-01-01T00:00:00Z',\n      '2024-01-03T00:00:00Z',\n      'DAY'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeliveryOverviewApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeliveryOverviewApi apiInstance = new DeliveryOverviewApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The sourceId for the Workspace.  This parameter exists in beta.\n        String startTime = \"2024-01-01T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n        String endTime = \"2024-01-03T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, and `app Version`.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n        DeliveryOverviewSourceFilterBy filter = new DeliveryOverviewSourceFilterBy(); // DeliveryOverviewSourceFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta.\n        try {\n            GetEgressFailedMetricsFromDeliveryOverview200Response result = apiInstance.getFilteredAtSourceMetricsFromDeliveryOverview(sourceId, startTime, endTime, groupBy, granularity, filter, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeliveryOverviewApi#getFilteredAtSourceMetricsFromDeliveryOverview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delivery_overview_source_filter_by import DeliveryOverviewSourceFilterBy\nfrom segment_public_api.models.get_egress_failed_metrics_from_delivery_overview200_response import GetEgressFailedMetricsFromDeliveryOverview200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeliveryOverviewApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The sourceId for the Workspace.  This parameter exists in beta.\n    start_time = '2024-01-01T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    end_time = '2024-01-03T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    group_by = ['groupBy.0=eventName'] # List[str] | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, and `app Version`.  This parameter exists in beta. (optional)\n    filter = segment_public_api.DeliveryOverviewSourceFilterBy() # DeliveryOverviewSourceFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    try:\n        # Get Filtered At Source Metrics from Delivery Overview\n        api_response = api_instance.get_filtered_at_source_metrics_from_delivery_overview(source_id, start_time, end_time, granularity, group_by=group_by, filter=filter, pagination=pagination)\n        print(\"The response of DeliveryOverviewApi->get_filtered_at_source_metrics_from_delivery_overview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeliveryOverviewApi->get_filtered_at_source_metrics_from_delivery_overview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The sourceId for the Workspace.  This parameter exists in beta.\n    startTime := \"2024-01-01T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    endTime := \"2024-01-03T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, and `app Version`.  This parameter exists in beta. (optional)\n    filter := *api.NewDeliveryOverviewSourceFilterBy() // DeliveryOverviewSourceFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeliveryOverviewAPI.GetFilteredAtSourceMetricsFromDeliveryOverview(ctx).SourceId(sourceId).StartTime(startTime).EndTime(endTime).Granularity(granularity).GroupBy(groupBy).Filter(filter).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeliveryOverviewAPI.GetFilteredAtSourceMetricsFromDeliveryOverview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetFilteredAtSourceMetricsFromDeliveryOverview`: GetEgressFailedMetricsFromDeliveryOverview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeliveryOverviewAPI.GetFilteredAtSourceMetricsFromDeliveryOverview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destination/{destinationId}/filters/{filterId}": {
      "get": {
        "summary": "Get Filter in Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "example": "xx6AySGeFExzdv2Gw2EuhV",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Destination filter by id.",
        "operationId": "getFilterInDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFilterInDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "event = \"Order Completed\"",
                      "actions": [
                        {
                          "type": "DROP_PROPERTIES",
                          "fields": {
                            "properties": [
                              "userId",
                              "secretValue"
                            ]
                          }
                        }
                      ],
                      "title": "Order Completed",
                      "description": "This filter probably does nothing",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinationFilters.getFilterInDestination('fP7qoQw2HTWt9WdMr718gn', 'xx6AySGeFExzdv2Gw2EuhV'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationFiltersApi apiInstance = new DestinationFiltersApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        String filterId = \"xx6AySGeFExzdv2Gw2EuhV\"; // String | \n        try {\n            GetFilterInDestination200Response result = apiInstance.getFilterInDestination(destinationId, filterId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationFiltersApi#getFilterInDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_filter_in_destination200_response import GetFilterInDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationFiltersApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    filter_id = 'xx6AySGeFExzdv2Gw2EuhV' # str | \n\n    try:\n        # Get Filter in Destination\n        api_response = api_instance.get_filter_in_destination(destination_id, filter_id)\n        print(\"The response of DestinationFiltersApi->get_filter_in_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationFiltersApi->get_filter_in_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    filterId := \"xx6AySGeFExzdv2Gw2EuhV\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationFiltersAPI.GetFilterInDestination(ctx, destinationId, filterId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationFiltersAPI.GetFilterInDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetFilterInDestination`: GetFilterInDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationFiltersAPI.GetFilterInDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Filter from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "example": "2c0vbGYWOBwbKszg0F0CoLSS01b",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes a Destination filter.\n\n\n\n• When called, this endpoint may generate the `Destination Filter Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "removeFilterFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveFilterFromDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinationFilters.removeFilterFromDestination('fP7qoQw2HTWt9WdMr718gn', '2c0vbGYWOBwbKszg0F0CoLSS01b'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationFiltersApi apiInstance = new DestinationFiltersApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        String filterId = \"2c0vbGYWOBwbKszg0F0CoLSS01b\"; // String | \n        try {\n            RemoveFilterFromDestination200Response result = apiInstance.removeFilterFromDestination(destinationId, filterId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationFiltersApi#removeFilterFromDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_filter_from_destination200_response import RemoveFilterFromDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationFiltersApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    filter_id = '2c0vbGYWOBwbKszg0F0CoLSS01b' # str | \n\n    try:\n        # Remove Filter from Destination\n        api_response = api_instance.remove_filter_from_destination(destination_id, filter_id)\n        print(\"The response of DestinationFiltersApi->remove_filter_from_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationFiltersApi->remove_filter_from_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    filterId := \"2c0vbGYWOBwbKszg0F0CoLSS01b\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationFiltersAPI.RemoveFilterFromDestination(ctx, destinationId, filterId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationFiltersAPI.RemoveFilterFromDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveFilterFromDestination`: RemoveFilterFromDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationFiltersAPI.RemoveFilterFromDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Filter for Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "example": "xx6AySGeFExzdv2Gw2EuhV",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates a filter in a Destination.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Destination Filter Enabled\n* Destination Filter Disabled\n      ",
        "operationId": "updateFilterForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFilterForDestinationV1Input"
              },
              "example": {
                "if": "!(type = \"track\")",
                "actions": [
                  {
                    "type": "DROP"
                  }
                ],
                "title": "Allow Track",
                "description": "Allows track calls through to the destination.",
                "enabled": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateFilterForDestinationV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "filter": {
                      "id": "xx6AySGeFExzdv2Gw2EuhV",
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "if": "!(type = \"track\")",
                      "actions": [
                        {
                          "type": "DROP"
                        }
                      ],
                      "title": "Allow Track",
                      "description": "Allows track calls through to the destination.",
                      "enabled": true,
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "updatedAt": "2006-01-02T15:04:05.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinationFilters.updateFilterForDestination('fP7qoQw2HTWt9WdMr718gn', 'xx6AySGeFExzdv2Gw2EuhV', {\n      if: '!(type = \"track\")',\n      actions: [{ type: 'DROP' }],\n      title: 'Allow Track',\n      description: 'Allows track calls through to the destination.',\n      enabled: true,\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationFiltersApi apiInstance = new DestinationFiltersApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        String filterId = \"xx6AySGeFExzdv2Gw2EuhV\"; // String | \n        UpdateFilterForDestinationV1Input updateFilterForDestinationV1Input = new UpdateFilterForDestinationV1Input(); // UpdateFilterForDestinationV1Input | \n        try {\n            UpdateFilterForDestination200Response result = apiInstance.updateFilterForDestination(destinationId, filterId, updateFilterForDestinationV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationFiltersApi#updateFilterForDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_filter_for_destination200_response import UpdateFilterForDestination200Response\nfrom segment_public_api.models.update_filter_for_destination_v1_input import UpdateFilterForDestinationV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationFiltersApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    filter_id = 'xx6AySGeFExzdv2Gw2EuhV' # str | \n    update_filter_for_destination_v1_input = {\"if\":\"!(type = \\\"track\\\")\",\"actions\":[{\"type\":\"DROP\"}],\"title\":\"Allow Track\",\"description\":\"Allows track calls through to the destination.\",\"enabled\":true} # UpdateFilterForDestinationV1Input | \n\n    try:\n        # Update Filter for Destination\n        api_response = api_instance.update_filter_for_destination(destination_id, filter_id, update_filter_for_destination_v1_input)\n        print(\"The response of DestinationFiltersApi->update_filter_for_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationFiltersApi->update_filter_for_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    filterId := \"xx6AySGeFExzdv2Gw2EuhV\" // string | \n    updateFilterForDestinationV1Input := *api.NewUpdateFilterForDestinationV1Input() // UpdateFilterForDestinationV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationFiltersAPI.UpdateFilterForDestination(ctx, destinationId, filterId).UpdateFilterForDestinationV1Input(updateFilterForDestinationV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationFiltersAPI.UpdateFilterForDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateFilterForDestination`: UpdateFilterForDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationFiltersAPI.UpdateFilterForDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/functions/{functionId}/versions/{versionId}": {
      "get": {
        "summary": "Get Function Version",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "required": true,
            "example": "2Ma03fahSqLoEzQfV5o2aSfVEHs",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Function version.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getFunctionVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionVersionAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "version": {
                      "author": "",
                      "code": "async function onTrack(event, settings) {console.log('Test')}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.getFunctionVersion('sfnc_wXzcDGFR3KmjLDrtSawNHf', '2Ma03fahSqLoEzQfV5o2aSfVEHs'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfnc_wXzcDGFR3KmjLDrtSawNHf\"; // String | \n        String versionId = \"2Ma03fahSqLoEzQfV5o2aSfVEHs\"; // String | \n        try {\n            GetFunctionVersion200Response result = apiInstance.getFunctionVersion(functionId, versionId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#getFunctionVersion\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_function_version200_response import GetFunctionVersion200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfnc_wXzcDGFR3KmjLDrtSawNHf' # str | \n    version_id = '2Ma03fahSqLoEzQfV5o2aSfVEHs' # str | \n\n    try:\n        # Get Function Version\n        api_response = api_instance.get_function_version(function_id, version_id)\n        print(\"The response of FunctionsApi->get_function_version:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->get_function_version: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfnc_wXzcDGFR3KmjLDrtSawNHf\" // string | \n    versionId := \"2Ma03fahSqLoEzQfV5o2aSfVEHs\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.GetFunctionVersion(ctx, functionId, versionId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.GetFunctionVersion``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetFunctionVersion`: GetFunctionVersion200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.GetFunctionVersion`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/delivery-overview/failed-on-ingest": {
      "get": {
        "summary": "Get Ingress Failed Metrics from Delivery Overview",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The sourceId for the Workspace.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The sourceId for the Workspace.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2024-01-03T00:00:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, and/or `appVersion`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, `discard Reason`, and/or `appVersion`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventName"
          },
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": false,
            "name": "filter",
            "description": "An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/DeliveryOverviewSourceFilterBy"
            },
            "example": "filter.discardReason=discard1&filter.eventName=name1%2Cname2&filter.eventType=track"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Optional params to specify the page cursor and count.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.cursor=MA%3D%3D&pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Get events that failed on ingest.",
        "operationId": "getIngressFailedMetricsFromDeliveryOverview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDeliveryOverviewMetricsBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "total": 32504644,
                    "dataset": [
                      {
                        "eventName": "event-name",
                        "total": 32504644,
                        "series": [
                          {
                            "time": "2024-01-01T00:00:00Z",
                            "count": 15637145
                          },
                          {
                            "time": "2024-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Delivery Overview"
        ],
        "tags": [
          "Delivery Overview"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deliveryOverview.getIngressFailedMetricsFromDeliveryOverview(\n      'rh5BDZp6QDHvXFCkibm1pR',\n      '2024-01-01T00:00:00Z',\n      '2024-01-03T00:00:00Z',\n      'DAY'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeliveryOverviewApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeliveryOverviewApi apiInstance = new DeliveryOverviewApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The sourceId for the Workspace.  This parameter exists in beta.\n        String startTime = \"2024-01-01T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n        String endTime = \"2024-01-03T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, and/or `appVersion`.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n        DeliveryOverviewSourceFilterBy filter = new DeliveryOverviewSourceFilterBy(); // DeliveryOverviewSourceFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta.\n        try {\n            GetEgressFailedMetricsFromDeliveryOverview200Response result = apiInstance.getIngressFailedMetricsFromDeliveryOverview(sourceId, startTime, endTime, groupBy, granularity, filter, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeliveryOverviewApi#getIngressFailedMetricsFromDeliveryOverview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delivery_overview_source_filter_by import DeliveryOverviewSourceFilterBy\nfrom segment_public_api.models.get_egress_failed_metrics_from_delivery_overview200_response import GetEgressFailedMetricsFromDeliveryOverview200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeliveryOverviewApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The sourceId for the Workspace.  This parameter exists in beta.\n    start_time = '2024-01-01T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    end_time = '2024-01-03T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    group_by = ['groupBy.0=eventName'] # List[str] | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, and/or `appVersion`.  This parameter exists in beta. (optional)\n    filter = segment_public_api.DeliveryOverviewSourceFilterBy() # DeliveryOverviewSourceFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    try:\n        # Get Ingress Failed Metrics from Delivery Overview\n        api_response = api_instance.get_ingress_failed_metrics_from_delivery_overview(source_id, start_time, end_time, granularity, group_by=group_by, filter=filter, pagination=pagination)\n        print(\"The response of DeliveryOverviewApi->get_ingress_failed_metrics_from_delivery_overview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeliveryOverviewApi->get_ingress_failed_metrics_from_delivery_overview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The sourceId for the Workspace.  This parameter exists in beta.\n    startTime := \"2024-01-01T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    endTime := \"2024-01-03T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, `discard Reason`, and/or `appVersion`.  This parameter exists in beta. (optional)\n    filter := *api.NewDeliveryOverviewSourceFilterBy() // DeliveryOverviewSourceFilterBy | An optional filter for `event Name`, `event Type`, `discard Reason`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeliveryOverviewAPI.GetIngressFailedMetricsFromDeliveryOverview(ctx).SourceId(sourceId).StartTime(startTime).EndTime(endTime).Granularity(granularity).GroupBy(groupBy).Filter(filter).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeliveryOverviewAPI.GetIngressFailedMetricsFromDeliveryOverview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetIngressFailedMetricsFromDeliveryOverview`: GetEgressFailedMetricsFromDeliveryOverview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeliveryOverviewAPI.GetIngressFailedMetricsFromDeliveryOverview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/delivery-overview/successfully-received": {
      "get": {
        "summary": "Get Ingress Success Metrics from Delivery Overview",
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The sourceId for the Workspace.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The sourceId for the Workspace.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": true,
            "name": "startTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "in": "query",
            "required": true,
            "name": "endTime",
            "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2024-01-03T00:00:00Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "groupBy",
            "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, and/or `app Version`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "A comma-delimited list of strings representing one or more dimensions\nto group the result by.  Valid options are:\n`event Name`, `event Type`, and/or `app Version`.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "groupBy"
            },
            "example": "groupBy.0=eventName"
          },
          {
            "in": "query",
            "required": true,
            "name": "granularity",
            "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The size of each bucket in the requested window.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 14 days\n- Oldest possible start time: 30 days in the past\n\n**Day**:\n- Max time range: 30 days\n- Oldest possible start time: 30 days in the past",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          },
          {
            "in": "query",
            "required": false,
            "name": "filter",
            "description": "An optional filter for `event Name`, `event Type`, and/or `app Version` that can be applied in addition to a `group By`.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/DeliveryOverviewSuccessfullyReceivedFilterBy"
            },
            "example": "filter.eventName=name1%2Cname2&filter.eventType=track"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Optional params to specify the page cursor and count.\n\nThis parameter exists in beta.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.cursor=MA%3D%3D&pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Get events that were successfully received by Segment.",
        "operationId": "getIngressSuccessMetricsFromDeliveryOverview",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetDeliveryOverviewMetricsBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "total": 32504644,
                    "dataset": [
                      {
                        "eventName": "event-name",
                        "total": 32504644,
                        "series": [
                          {
                            "time": "2024-01-01T00:00:00Z",
                            "count": 15637145
                          },
                          {
                            "time": "2024-01-02T00:00:00Z",
                            "count": 16867499
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Delivery Overview"
        ],
        "tags": [
          "Delivery Overview"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.deliveryOverview.getIngressSuccessMetricsFromDeliveryOverview(\n      'rh5BDZp6QDHvXFCkibm1pR',\n      '2024-01-01T00:00:00Z',\n      '2024-01-03T00:00:00Z',\n      'DAY'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeliveryOverviewApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeliveryOverviewApi apiInstance = new DeliveryOverviewApi(defaultClient);\n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The sourceId for the Workspace.  This parameter exists in beta.\n        String startTime = \"2024-01-01T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n        String endTime = \"2024-01-03T00:00:00Z\"; // String | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n        List<String> groupBy = Arrays.asList(); // List<String> | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, and/or `app Version`.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n        DeliveryOverviewSuccessfullyReceivedFilterBy filter = new DeliveryOverviewSuccessfullyReceivedFilterBy(); // DeliveryOverviewSuccessfullyReceivedFilterBy | An optional filter for `event Name`, `event Type`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta.\n        try {\n            GetEgressFailedMetricsFromDeliveryOverview200Response result = apiInstance.getIngressSuccessMetricsFromDeliveryOverview(sourceId, startTime, endTime, groupBy, granularity, filter, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeliveryOverviewApi#getIngressSuccessMetricsFromDeliveryOverview\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.delivery_overview_successfully_received_filter_by import DeliveryOverviewSuccessfullyReceivedFilterBy\nfrom segment_public_api.models.get_egress_failed_metrics_from_delivery_overview200_response import GetEgressFailedMetricsFromDeliveryOverview200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeliveryOverviewApi(api_client)\n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The sourceId for the Workspace.  This parameter exists in beta.\n    start_time = '2024-01-01T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    end_time = '2024-01-03T00:00:00Z' # str | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity = 'DAY' # str | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    group_by = ['groupBy.0=eventName'] # List[str] | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, and/or `app Version`.  This parameter exists in beta. (optional)\n    filter = segment_public_api.DeliveryOverviewSuccessfullyReceivedFilterBy() # DeliveryOverviewSuccessfullyReceivedFilterBy | An optional filter for `event Name`, `event Type`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    try:\n        # Get Ingress Success Metrics from Delivery Overview\n        api_response = api_instance.get_ingress_success_metrics_from_delivery_overview(source_id, start_time, end_time, granularity, group_by=group_by, filter=filter, pagination=pagination)\n        print(\"The response of DeliveryOverviewApi->get_ingress_success_metrics_from_delivery_overview:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeliveryOverviewApi->get_ingress_success_metrics_from_delivery_overview: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The sourceId for the Workspace.  This parameter exists in beta.\n    startTime := \"2024-01-01T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the beginning of the requested time frame, inclusive.  This parameter exists in beta.\n    endTime := \"2024-01-03T00:00:00Z\" // string | The ISO8601 formatted timestamp corresponding to the end of the requested time frame, noninclusive.  This parameter exists in beta.\n    granularity := \"DAY\" // string | The size of each bucket in the requested window.  Based on the granularity chosen, there are restrictions on the time range you can query:  **Minute**: - Max time range: 4 hours - Oldest possible start time: 48 hours in the past  **Hour**: - Max Time range: 14 days - Oldest possible start time: 30 days in the past  **Day**: - Max time range: 30 days - Oldest possible start time: 30 days in the past  This parameter exists in beta.\n    groupBy := []string{\"Inner_example\"} // []string | A comma-delimited list of strings representing one or more dimensions to group the result by.  Valid options are: `event Name`, `event Type`, and/or `app Version`.  This parameter exists in beta. (optional)\n    filter := *api.NewDeliveryOverviewSuccessfullyReceivedFilterBy() // DeliveryOverviewSuccessfullyReceivedFilterBy | An optional filter for `event Name`, `event Type`, and/or `app Version` that can be applied in addition to a `group By`.  This parameter exists in beta. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Optional params to specify the page cursor and count.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeliveryOverviewAPI.GetIngressSuccessMetricsFromDeliveryOverview(ctx).SourceId(sourceId).StartTime(startTime).EndTime(endTime).Granularity(granularity).GroupBy(groupBy).Filter(filter).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeliveryOverviewAPI.GetIngressSuccessMetricsFromDeliveryOverview``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetIngressSuccessMetricsFromDeliveryOverview`: GetEgressFailedMetricsFromDeliveryOverview200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeliveryOverviewAPI.GetIngressSuccessMetricsFromDeliveryOverview`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/edge-functions/latest": {
      "get": {
        "summary": "Get Latest from Edge Functions",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Get the latest Edge Functions for your Source.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Edge Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getLatestFromEdgeFunctions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetLatestFromEdgeFunctionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "edgeFunctions": {
                      "id": "4a502354-637c-4b5f-bd46-281f7c973fbd",
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "downloadURL": "https://cdn.edgefn.segment.build/qQEHquLrjRDN9j1ByrChyn/4a502354-637c-4b5f-bd46-281f7c973fbd.js",
                      "createdBy": "sgJDWk3K21k6LE3tLU9nRK",
                      "createdAt": "2006-01-02T15:04:05.000Z",
                      "version": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Edge Functions"
        ],
        "tags": [
          "Edge Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.edgeFunctions.getLatestFromEdgeFunctions('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.EdgeFunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        EdgeFunctionsApi apiInstance = new EdgeFunctionsApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        try {\n            GetLatestFromEdgeFunctions200Response result = apiInstance.getLatestFromEdgeFunctions(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling EdgeFunctionsApi#getLatestFromEdgeFunctions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_latest_from_edge_functions200_response import GetLatestFromEdgeFunctions200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.EdgeFunctionsApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n\n    try:\n        # Get Latest from Edge Functions\n        api_response = api_instance.get_latest_from_edge_functions(source_id)\n        print(\"The response of EdgeFunctionsApi->get_latest_from_edge_functions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling EdgeFunctionsApi->get_latest_from_edge_functions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.EdgeFunctionsAPI.GetLatestFromEdgeFunctions(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `EdgeFunctionsAPI.GetLatestFromEdgeFunctions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetLatestFromEdgeFunctions`: GetLatestFromEdgeFunctions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `EdgeFunctionsAPI.GetLatestFromEdgeFunctions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/reverse-etl-models/{modelId}/syncs/{syncId}": {
      "get": {
        "summary": "Get Reverse ETL Sync Status",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "modelId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "syncId",
            "required": true,
            "example": "syncId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Get the sync status for a Reverse ETL sync. \nThe sync status includes all detailed information about the sync - sync status, duration, details about the extract and load phase if applicable, etc.\n\n\nThe rate limit for this endpoint is 250 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "getReverseETLSyncStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetReverseETLSyncStatusOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reverseETLSyncStatus": {
                      "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                      "modelId": "pUy1F8Xsy3cLR25QBDNsbN",
                      "syncId": "1",
                      "syncStatus": "SUCCESS",
                      "duration": "21.481s",
                      "error": "",
                      "errorCode": "",
                      "startedAt": "2024-01-25T18:58:10.16064Z",
                      "finishedAt": "2024-01-25T18:58:31.64138Z",
                      "extractPhase": {
                        "addedCount": "1000",
                        "updatedCount": "0",
                        "deletedCount": "0",
                        "extractCount": "1000",
                        "errorCode": "",
                        "startedAt": "2024-01-25T18:58:10.31623Z",
                        "finishedAt": "2024-01-25T18:58:20.692479Z"
                      },
                      "loadPhase": {
                        "deliverSuccessCount": "1000",
                        "deliverFailureCount": "0",
                        "errorCode": "",
                        "startedAt": "2024-01-25T18:58:20.84456Z",
                        "finishedAt": "2024-01-25T18:58:31.64138Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.getReverseETLSyncStatus('modelId', 'syncId'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        String modelId = \"modelId\"; // String | \n        String syncId = \"syncId\"; // String | \n        try {\n            GetReverseETLSyncStatus200Response result = apiInstance.getReverseETLSyncStatus(modelId, syncId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#getReverseETLSyncStatus\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_reverse_etl_sync_status200_response import GetReverseETLSyncStatus200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    model_id = 'modelId' # str | \n    sync_id = 'syncId' # str | \n\n    try:\n        # Get Reverse ETL Sync Status\n        api_response = api_instance.get_reverse_etl_sync_status(model_id, sync_id)\n        print(\"The response of ReverseETLApi->get_reverse_etl_sync_status:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->get_reverse_etl_sync_status: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    modelId := \"modelId\" // string | \n    syncId := \"syncId\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.GetReverseETLSyncStatus(ctx, modelId, syncId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.GetReverseETLSyncStatus``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetReverseETLSyncStatus`: GetReverseETLSyncStatus200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.GetReverseETLSyncStatus`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/catalog/sources/{sourceMetadataId}": {
      "get": {
        "summary": "Get Source Metadata",
        "parameters": [
          {
            "in": "path",
            "name": "sourceMetadataId",
            "required": true,
            "example": "1bow82lmk",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Source catalog item by its id.",
        "operationId": "getSourceMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourceMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceMetadata": {
                      "id": "1bow82lmk",
                      "slug": "stripe",
                      "name": "Stripe",
                      "categories": [
                        "Payments"
                      ],
                      "description": "Once you have successfully OAuth’d into Stripe, we will begin syncing Stripe objects (and their corresponding properties) to any databases you have turned on (to turn on a database, navigate to the database tab in the navigation pane on the left).",
                      "logos": {
                        "default": "https://cdn.filepicker.io/api/file/jp2UV0RtRU2FZaGxX4qF",
                        "alt": "https://cdn.filepicker.io/api/file/7BXASJF8ReVG9pfQCX9Z",
                        "mark": "https://cdn.filepicker.io/api/file/oVSkzKHQ96hIQkbK18ib"
                      },
                      "options": [],
                      "isCloudEventSource": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getSourceMetadata('1bow82lmk'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CatalogApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CatalogApi apiInstance = new CatalogApi(defaultClient);\n        String sourceMetadataId = \"1bow82lmk\"; // String | \n        try {\n            GetSourceMetadata200Response result = apiInstance.getSourceMetadata(sourceMetadataId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CatalogApi#getSourceMetadata\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_source_metadata200_response import GetSourceMetadata200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CatalogApi(api_client)\n    source_metadata_id = '1bow82lmk' # str | \n\n    try:\n        # Get Source Metadata\n        api_response = api_instance.get_source_metadata(source_metadata_id)\n        print(\"The response of CatalogApi->get_source_metadata:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CatalogApi->get_source_metadata: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceMetadataId := \"1bow82lmk\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CatalogAPI.GetSourceMetadata(ctx, sourceMetadataId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CatalogAPI.GetSourceMetadata``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetSourceMetadata`: GetSourceMetadata200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CatalogAPI.GetSourceMetadata`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/catalog/sources": {
      "get": {
        "summary": "Get Sources Catalog",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Sources in the Segment catalog.",
        "operationId": "getSourcesCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "cQ8NOxeApJ",
                        "slug": "adwords",
                        "name": "Google Ads",
                        "categories": [
                          "Advertising"
                        ],
                        "description": "The Google Ads source pulls impressions, spend, campaign, and click data from your Google Ads account into your data warehouse.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp",
                          "alt": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp"
                        },
                        "options": [
                          {
                            "name": "accounts",
                            "required": true,
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Ads Customer ID override. By default, we use the \"primary\" customer for your user."
                          }
                        ],
                        "isCloudEventSource": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 106
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "cQ8NOxeApJ",
                        "slug": "adwords",
                        "name": "Google Ads",
                        "categories": [
                          "Advertising"
                        ],
                        "description": "The Google Ads source pulls impressions, spend, campaign, and click data from your Google Ads account into your data warehouse.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp",
                          "alt": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp"
                        },
                        "options": [
                          {
                            "name": "accounts",
                            "required": true,
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Ads Customer ID override. By default, we use the \"primary\" customer for your user."
                          }
                        ],
                        "isCloudEventSource": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 106
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "cQ8NOxeApJ",
                        "slug": "adwords",
                        "name": "Google Ads",
                        "categories": [
                          "Advertising"
                        ],
                        "description": "The Google Ads source pulls impressions, spend, campaign, and click data from your Google Ads account into your data warehouse.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp",
                          "alt": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp"
                        },
                        "options": [
                          {
                            "name": "accounts",
                            "required": true,
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Ads Customer ID override. By default, we use the \"primary\" customer for your user."
                          }
                        ],
                        "isCloudEventSource": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 106
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSourcesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourcesCatalog": [
                      {
                        "id": "XE0vf1bTDh",
                        "slug": "active-campaign",
                        "name": "ActiveCampaign",
                        "categories": [
                          "Email Marketing"
                        ],
                        "description": "",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF",
                          "alt": "https://cdn.filepicker.io/api/file/kpEgW84qTXiC5vma7vfF"
                        },
                        "options": [],
                        "isCloudEventSource": true
                      },
                      {
                        "id": "cQ8NOxeApJ",
                        "slug": "adwords",
                        "name": "Google Ads",
                        "categories": [
                          "Advertising"
                        ],
                        "description": "The Google Ads source pulls impressions, spend, campaign, and click data from your Google Ads account into your data warehouse.",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp",
                          "alt": "https://cdn.filepicker.io/api/file/KEnErmDUQKiOWgkvzofp"
                        },
                        "options": [
                          {
                            "name": "accounts",
                            "required": true,
                            "type": "string",
                            "defaultValue": "",
                            "description": "Google Ads Customer ID override. By default, we use the \"primary\" customer for your user."
                          }
                        ],
                        "isCloudEventSource": false
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 106
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getSourcesCatalog())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CatalogApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CatalogApi apiInstance = new CatalogApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            GetSourcesCatalog200Response result = apiInstance.getSourcesCatalog(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CatalogApi#getSourcesCatalog\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_sources_catalog200_response import GetSourcesCatalog200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CatalogApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Sources Catalog\n        api_response = api_instance.get_sources_catalog(pagination=pagination)\n        print(\"The response of CatalogApi->get_sources_catalog:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CatalogApi->get_sources_catalog: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CatalogAPI.GetSourcesCatalog(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CatalogAPI.GetSourcesCatalog``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetSourcesCatalog`: GetSourcesCatalog200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CatalogAPI.GetSourcesCatalog`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}": {
      "get": {
        "summary": "Get Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the Space by id.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "space": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "Default Space Papi E2E",
                      "slug": "default-space-papi-e2e"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaces.getSpace('9aQ1Lj62S4bomZKLF4DPqW'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpacesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpacesApi apiInstance = new SpacesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        try {\n            GetSpace200Response result = apiInstance.getSpace(spaceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpacesApi#getSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_space200_response import GetSpace200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpacesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n\n    try:\n        # Get Space\n        api_response = api_instance.get_space(space_id)\n        print(\"The response of SpacesApi->get_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpacesApi->get_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpacesAPI.GetSpace(ctx, spaceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpacesAPI.GetSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetSpace`: GetSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpacesAPI.GetSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destinations/{destinationId}/subscriptions/{id}": {
      "get": {
        "summary": "Get Subscription from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "kyMKN6LUgMvF8dwRMEz3cX",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Gets a Destination subscription by id.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "getSubscriptionFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetSubscriptionFromDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "subscription": {
                      "id": "kyMKN6LUgMvF8dwRMEz3cX",
                      "name": "Example Subscription",
                      "actionId": "jiMz7MfHNeHmUckzRnUGkU",
                      "actionSlug": "someActionSlug",
                      "destinationId": "fP7qoQw2HTWt9WdMr718gn",
                      "modelId": "",
                      "enabled": false,
                      "trigger": "type = \"track\"",
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.getSubscriptionFromDestination('fP7qoQw2HTWt9WdMr718gn', 'kyMKN6LUgMvF8dwRMEz3cX'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        String id = \"kyMKN6LUgMvF8dwRMEz3cX\"; // String | \n        try {\n            GetSubscriptionFromDestination200Response result = apiInstance.getSubscriptionFromDestination(destinationId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#getSubscriptionFromDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_subscription_from_destination200_response import GetSubscriptionFromDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    id = 'kyMKN6LUgMvF8dwRMEz3cX' # str | \n\n    try:\n        # Get Subscription from Destination\n        api_response = api_instance.get_subscription_from_destination(destination_id, id)\n        print(\"The response of DestinationsApi->get_subscription_from_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->get_subscription_from_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    id := \"kyMKN6LUgMvF8dwRMEz3cX\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.GetSubscriptionFromDestination(ctx, destinationId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.GetSubscriptionFromDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetSubscriptionFromDestination`: GetSubscriptionFromDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.GetSubscriptionFromDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Subscription from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "zXCqmEMHJojkD45GcBAPt",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Destination subscription.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 5 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeSubscriptionFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveSubscriptionFromDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.destinations.removeSubscriptionFromDestination('fP7qoQw2HTWt9WdMr718gn', 'zXCqmEMHJojkD45GcBAPt'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        String id = \"zXCqmEMHJojkD45GcBAPt\"; // String | \n        try {\n            RemoveSubscriptionFromDestination200Response result = apiInstance.removeSubscriptionFromDestination(destinationId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#removeSubscriptionFromDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_subscription_from_destination200_response import RemoveSubscriptionFromDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    id = 'zXCqmEMHJojkD45GcBAPt' # str | \n\n    try:\n        # Remove Subscription from Destination\n        api_response = api_instance.remove_subscription_from_destination(destination_id, id)\n        print(\"The response of DestinationsApi->remove_subscription_from_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->remove_subscription_from_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    id := \"zXCqmEMHJojkD45GcBAPt\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.RemoveSubscriptionFromDestination(ctx, destinationId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.RemoveSubscriptionFromDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveSubscriptionFromDestination`: RemoveSubscriptionFromDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.RemoveSubscriptionFromDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Subscription for Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "qtiZHLLqqsHmpvLXNtP5du",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "pJtn52LjrcD1TrQcm2ZSwp",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Destination subscription.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Destination Subscriptions feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 5 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateSubscriptionForDestination",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionForDestinationAlphaInput"
              },
              "example": {
                "input": {
                  "name": "Updated name"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSubscriptionForDestinationAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "subscription": {
                      "id": "pJtn52LjrcD1TrQcm2ZSwp",
                      "name": "Updated name",
                      "actionId": "wy1vMhKu669RPM6YR4BfUv",
                      "actionSlug": "Public API Slug",
                      "destinationId": "qtiZHLLqqsHmpvLXNtP5du",
                      "modelId": "",
                      "enabled": false,
                      "trigger": "type = \"track\"",
                      "settings": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.updateSubscriptionForDestination('qtiZHLLqqsHmpvLXNtP5du', 'pJtn52LjrcD1TrQcm2ZSwp', {\n      input: { name: 'Updated name' },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"qtiZHLLqqsHmpvLXNtP5du\"; // String | \n        String id = \"pJtn52LjrcD1TrQcm2ZSwp\"; // String | \n        UpdateSubscriptionForDestinationAlphaInput updateSubscriptionForDestinationAlphaInput = new UpdateSubscriptionForDestinationAlphaInput(); // UpdateSubscriptionForDestinationAlphaInput | \n        try {\n            UpdateSubscriptionForDestination200Response result = apiInstance.updateSubscriptionForDestination(destinationId, id, updateSubscriptionForDestinationAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#updateSubscriptionForDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_subscription_for_destination200_response import UpdateSubscriptionForDestination200Response\nfrom segment_public_api.models.update_subscription_for_destination_alpha_input import UpdateSubscriptionForDestinationAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'qtiZHLLqqsHmpvLXNtP5du' # str | \n    id = 'pJtn52LjrcD1TrQcm2ZSwp' # str | \n    update_subscription_for_destination_alpha_input = {\"input\":{\"name\":\"Updated name\"}} # UpdateSubscriptionForDestinationAlphaInput | \n\n    try:\n        # Update Subscription for Destination\n        api_response = api_instance.update_subscription_for_destination(destination_id, id, update_subscription_for_destination_alpha_input)\n        print(\"The response of DestinationsApi->update_subscription_for_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->update_subscription_for_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"qtiZHLLqqsHmpvLXNtP5du\" // string | \n    id := \"pJtn52LjrcD1TrQcm2ZSwp\" // string | \n    updateSubscriptionForDestinationAlphaInput := *api.NewUpdateSubscriptionForDestinationAlphaInput(*api.NewDestinationSubscriptionUpdateInput()) // UpdateSubscriptionForDestinationAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.UpdateSubscriptionForDestination(ctx, destinationId, id).UpdateSubscriptionForDestinationAlphaInput(updateSubscriptionForDestinationAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.UpdateSubscriptionForDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateSubscriptionForDestination`: UpdateSubscriptionForDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.UpdateSubscriptionForDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a user given their id.",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "user": {
                      "id": "sgJDWk3K21k6LE3tLU9nRK",
                      "name": "",
                      "email": "papi@segment.com",
                      "permissions": [
                        {
                          "roleId": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                          "roleName": "Workspace Owner",
                          "resources": [
                            {
                              "id": "9aQ1Lj62S4bomZKLF4DPqW",
                              "type": "WORKSPACE",
                              "labels": []
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.getUser('sgJDWk3K21k6LE3tLU9nRK'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        String userId = \"sgJDWk3K21k6LE3tLU9nRK\"; // String | \n        try {\n            GetUser200Response result = apiInstance.getUser(userId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#getUser\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_user200_response import GetUser200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    user_id = 'sgJDWk3K21k6LE3tLU9nRK' # str | \n\n    try:\n        # Get User\n        api_response = api_instance.get_user(user_id)\n        print(\"The response of IAMUsersApi->get_user:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->get_user: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userId := \"sgJDWk3K21k6LE3tLU9nRK\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.GetUser(ctx, userId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.GetUser``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetUser`: GetUser200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.GetUser`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/catalog/warehouses/{warehouseMetadataId}": {
      "get": {
        "summary": "Get Warehouse Metadata",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseMetadataId",
            "required": true,
            "example": "55d3d3aea3c",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns a Warehouse catalog item by its id.",
        "operationId": "getWarehouseMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehouseMetadataV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouseMetadata": {
                      "id": "55d3d3aea3c",
                      "slug": "postgres",
                      "name": "Postgres",
                      "description": "Open source data warehouse",
                      "logos": {
                        "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                        "mark": "",
                        "alt": ""
                      },
                      "options": [
                        {
                          "name": "port",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "database",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "hostname",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "password",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "username",
                          "required": true,
                          "type": "string"
                        },
                        {
                          "name": "ciphertext",
                          "required": true,
                          "type": "string"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getWarehouseMetadata('55d3d3aea3c'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CatalogApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CatalogApi apiInstance = new CatalogApi(defaultClient);\n        String warehouseMetadataId = \"55d3d3aea3c\"; // String | \n        try {\n            GetWarehouseMetadata200Response result = apiInstance.getWarehouseMetadata(warehouseMetadataId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CatalogApi#getWarehouseMetadata\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_warehouse_metadata200_response import GetWarehouseMetadata200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CatalogApi(api_client)\n    warehouse_metadata_id = '55d3d3aea3c' # str | \n\n    try:\n        # Get Warehouse Metadata\n        api_response = api_instance.get_warehouse_metadata(warehouse_metadata_id)\n        print(\"The response of CatalogApi->get_warehouse_metadata:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CatalogApi->get_warehouse_metadata: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseMetadataId := \"55d3d3aea3c\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CatalogAPI.GetWarehouseMetadata(ctx, warehouseMetadataId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CatalogAPI.GetWarehouseMetadata``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetWarehouseMetadata`: GetWarehouseMetadata200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CatalogAPI.GetWarehouseMetadata`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/catalog/warehouses": {
      "get": {
        "summary": "Get Warehouses Catalog",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Optional pagination params used to filter the Warehouses catalog.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of all available Warehouses in the Segment catalog.",
        "operationId": "getWarehousesCatalog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "server",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "database",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "username",
                            "type": "string",
                            "required": true
                          }
                        ]
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "location",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "gc-project",
                            "type": "string",
                            "required": true
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 7
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "server",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "database",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "username",
                            "type": "string",
                            "required": true
                          }
                        ]
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "location",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "gc-project",
                            "type": "string",
                            "required": true
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 7
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "server",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "database",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "username",
                            "type": "string",
                            "required": true
                          }
                        ]
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "location",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "gc-project",
                            "type": "string",
                            "required": true
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 7
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWarehousesCatalogV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehousesCatalog": [
                      {
                        "id": "WcjBCzUGff",
                        "slug": "azuresqldw",
                        "name": "Azure SQL Data Warehouse",
                        "description": "Connector for Azure SQL Data Warehouse",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/VKbuWjNjQPKOnOWijFe4",
                          "mark": "https://cdn.filepicker.io/api/file/EUJvt69Q7qMqCvGrVtiu",
                          "alt": ""
                        },
                        "options": [
                          {
                            "name": "server",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "database",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "username",
                            "type": "string",
                            "required": true
                          }
                        ]
                      },
                      {
                        "id": "kwX50Df0hr",
                        "slug": "bigquery",
                        "name": "BigQuery",
                        "description": "Powered by Google Cloud Platform",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/bDzeRa75SZc6FfgfoUK6",
                          "mark": "https://cdn.filepicker.io/api/file/Vk6iFlMvQeynbg30ZEtt",
                          "alt": "https://cdn.filepicker.io/api/file/TXjmvgYRUuAa5ZfzNhmK"
                        },
                        "options": [
                          {
                            "name": "location",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "password",
                            "type": "string",
                            "required": true
                          },
                          {
                            "name": "gc-project",
                            "type": "string",
                            "required": true
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg==",
                      "totalEntries": 7
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Catalog"
        ],
        "tags": [
          "Catalog"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.catalog.getWarehousesCatalog())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.CatalogApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        CatalogApi apiInstance = new CatalogApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Optional pagination params used to filter the Warehouses catalog.  This parameter exists in v1.\n        try {\n            GetWarehousesCatalog200Response result = apiInstance.getWarehousesCatalog(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling CatalogApi#getWarehousesCatalog\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_warehouses_catalog200_response import GetWarehousesCatalog200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.CatalogApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Optional pagination params used to filter the Warehouses catalog.  This parameter exists in v1. (optional)\n\n    try:\n        # Get Warehouses Catalog\n        api_response = api_instance.get_warehouses_catalog(pagination=pagination)\n        print(\"The response of CatalogApi->get_warehouses_catalog:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling CatalogApi->get_warehouses_catalog: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Optional pagination params used to filter the Warehouses catalog.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.CatalogAPI.GetWarehousesCatalog(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `CatalogAPI.GetWarehousesCatalog``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetWarehousesCatalog`: GetWarehousesCatalog200Response\n    fmt.Fprintf(os.Stdout, \"Response from `CatalogAPI.GetWarehousesCatalog`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Get Workspace",
        "parameters": [],
        "deprecated": false,
        "description": "Returns the Workspace associated with the token used to access this resource.",
        "operationId": "getWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GetWorkspaceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "workspace": {
                      "id": "9aQ1Lj62S4bomZKLF4DPqW",
                      "name": "papi e2e",
                      "slug": "papi-e2e"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "General",
          "Workspaces"
        ],
        "tags": [
          "Workspaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.workspaces.getWorkspace())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WorkspacesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WorkspacesApi apiInstance = new WorkspacesApi(defaultClient);\n        try {\n            GetWorkspace200Response result = apiInstance.getWorkspace();\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WorkspacesApi#getWorkspace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.get_workspace200_response import GetWorkspace200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WorkspacesApi(api_client)\n\n    try:\n        # Get Workspace\n        api_response = api_instance.get_workspace()\n        print(\"The response of WorkspacesApi->get_workspace:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WorkspacesApi->get_workspace: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WorkspacesAPI.GetWorkspace(ctx).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WorkspacesAPI.GetWorkspace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `GetWorkspace`: GetWorkspace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WorkspacesAPI.GetWorkspace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{audienceId}/activations": {
      "get": {
        "summary": "List Activations from Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "spa_9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "audienceId",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "workspaceId",
            "description": "The workspace id\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The workspace id",
              "type": "string",
              "title": "workspaceId"
            },
            "example": "LF4DPqW"
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Optional pagination.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Lists all Activations.\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listActivationsFromAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListActivationsFromAudienceOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "activations": [
                      {
                        "id": "act_987654321",
                        "enabled": true
                      },
                      {
                        "id": "act_another123",
                        "enabled": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences",
          "Activations"
        ],
        "tags": [
          "Activations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.activations.listActivationsFromAudience('spa_9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS', 'LF4DPqW')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ActivationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ActivationsApi apiInstance = new ActivationsApi(defaultClient);\n        String spaceId = \"spa_9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String audienceId = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        String workspaceId = \"LF4DPqW\"; // String | The workspace id  This parameter exists in alpha.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Optional pagination.  This parameter exists in alpha.\n        try {\n            ListActivationsFromAudience200Response result = apiInstance.listActivationsFromAudience(spaceId, audienceId, workspaceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ActivationsApi#listActivationsFromAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_activations_from_audience200_response import ListActivationsFromAudience200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ActivationsApi(api_client)\n    space_id = 'spa_9aQ1Lj62S4bomZKLF4DPqW' # str | \n    audience_id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n    workspace_id = 'LF4DPqW' # str | The workspace id  This parameter exists in alpha.\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Optional pagination.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Activations from Audience\n        api_response = api_instance.list_activations_from_audience(space_id, audience_id, workspace_id, pagination=pagination)\n        print(\"The response of ActivationsApi->list_activations_from_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ActivationsApi->list_activations_from_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"spa_9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    audienceId := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n    workspaceId := \"LF4DPqW\" // string | The workspace id  This parameter exists in alpha.\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Optional pagination.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ActivationsAPI.ListActivationsFromAudience(ctx, spaceId, audienceId).WorkspaceId(workspaceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ActivationsAPI.ListActivationsFromAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListActivationsFromAudience`: ListActivationsFromAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ActivationsAPI.ListActivationsFromAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{id}/audience-references": {
      "get": {
        "summary": "List Audience Consumers from Space And Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "aud_0ujsswThIGTUYm2K8FjOOfXtY1K",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=1"
          },
          {
            "in": "query",
            "required": false,
            "name": "search",
            "description": "Optional search criteria\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/ListAudienceSearchInput"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "description": "Optional sort criteria\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/ListAudienceConsumersSortInput"
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the list of consumers for the given audience.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 25 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listAudienceConsumersFromSpaceAndAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAudienceConsumersFromSpaceAndAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audiences": [
                      {
                        "id": "aud_0ujssxh0cECutqzMgbtXSGnjorm",
                        "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "name",
                        "description": "find shoe bought users",
                        "key": "key",
                        "enabled": false,
                        "definition": {
                          "query": "event('Shoes Bought').count() >= 1",
                          "type": "USERS"
                        },
                        "audienceType": "USERS",
                        "status": "Live",
                        "createdBy": "createdBy",
                        "updatedBy": "updatedBy",
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "options": {
                          "includeAnonymousUsers": true,
                          "includeHistoricalData": true,
                          "filterByExternalIds": [
                            "anonymous_id"
                          ],
                          "backfillEventDataDays": 7
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MA==",
                      "previous": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.listAudienceConsumersFromSpaceAndAudience('9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsswThIGTUYm2K8FjOOfXtY1K')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"aud_0ujsswThIGTUYm2K8FjOOfXtY1K\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha.\n        ListAudienceSearchInput search = new ListAudienceSearchInput(); // ListAudienceSearchInput | Optional search criteria  This parameter exists in alpha.\n        ListAudienceConsumersSortInput sort = new ListAudienceConsumersSortInput(); // ListAudienceConsumersSortInput | Optional sort criteria  This parameter exists in alpha.\n        try {\n            ListAudienceConsumersFromSpaceAndAudience200Response result = apiInstance.listAudienceConsumersFromSpaceAndAudience(spaceId, id, pagination, search, sort);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#listAudienceConsumersFromSpaceAndAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_audience_consumers_from_space_and_audience200_response import ListAudienceConsumersFromSpaceAndAudience200Response\nfrom segment_public_api.models.list_audience_consumers_sort_input import ListAudienceConsumersSortInput\nfrom segment_public_api.models.list_audience_search_input import ListAudienceSearchInput\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = 'aud_0ujsswThIGTUYm2K8FjOOfXtY1K' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)\n    search = segment_public_api.ListAudienceSearchInput() # ListAudienceSearchInput | Optional search criteria  This parameter exists in alpha. (optional)\n    sort = segment_public_api.ListAudienceConsumersSortInput() # ListAudienceConsumersSortInput | Optional sort criteria  This parameter exists in alpha. (optional)\n\n    try:\n        # List Audience Consumers from Space And Audience\n        api_response = api_instance.list_audience_consumers_from_space_and_audience(space_id, id, pagination=pagination, search=search, sort=sort)\n        print(\"The response of AudiencesApi->list_audience_consumers_from_space_and_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->list_audience_consumers_from_space_and_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"aud_0ujsswThIGTUYm2K8FjOOfXtY1K\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Information about the pagination of this response.  [See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.  This parameter exists in alpha. (optional)\n    search := *api.NewListAudienceSearchInput(\"Type_example\", \"Query_example\") // ListAudienceSearchInput | Optional search criteria  This parameter exists in alpha. (optional)\n    sort := *api.NewListAudienceConsumersSortInput(\"Field_example\", \"Direction_example\") // ListAudienceConsumersSortInput | Optional sort criteria  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.ListAudienceConsumersFromSpaceAndAudience(ctx, spaceId, id).Pagination(pagination).Search(search).Sort(sort).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.ListAudienceConsumersFromSpaceAndAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListAudienceConsumersFromSpaceAndAudience`: ListAudienceConsumersFromSpaceAndAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.ListAudienceConsumersFromSpaceAndAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/audiences/{id}/schedules": {
      "get": {
        "summary": "List Audience Schedules from Space And Audience",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "example": "aud_0ujsszwN8NRY24YaXiTIE2VWDTS",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Returns the list of schedules for the given audience.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Audience feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listAudienceSchedulesFromSpaceAndAudience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAudienceSchedulesFromSpaceAndAudienceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "audienceSchedules": [
                      {
                        "id": "sch_0ujsszwN8NRY24YaXiTIE2VWDTS",
                        "strategy": "PERIODIC",
                        "config": {
                          "interval": "24h"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Audiences"
        ],
        "tags": [
          "Audiences"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.audiences.listAudienceSchedulesFromSpaceAndAudience('9aQ1Lj62S4bomZKLF4DPqW', 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AudiencesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AudiencesApi apiInstance = new AudiencesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String id = \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\"; // String | \n        try {\n            ListAudienceSchedulesFromSpaceAndAudience200Response result = apiInstance.listAudienceSchedulesFromSpaceAndAudience(spaceId, id);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AudiencesApi#listAudienceSchedulesFromSpaceAndAudience\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_audience_schedules_from_space_and_audience200_response import ListAudienceSchedulesFromSpaceAndAudience200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AudiencesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    id = 'aud_0ujsszwN8NRY24YaXiTIE2VWDTS' # str | \n\n    try:\n        # List Audience Schedules from Space And Audience\n        api_response = api_instance.list_audience_schedules_from_space_and_audience(space_id, id)\n        print(\"The response of AudiencesApi->list_audience_schedules_from_space_and_audience:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AudiencesApi->list_audience_schedules_from_space_and_audience: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    id := \"aud_0ujsszwN8NRY24YaXiTIE2VWDTS\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AudiencesAPI.ListAudienceSchedulesFromSpaceAndAudience(ctx, spaceId, id).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AudiencesAPI.ListAudienceSchedulesFromSpaceAndAudience``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListAudienceSchedulesFromSpaceAndAudience`: ListAudienceSchedulesFromSpaceAndAudience200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AudiencesAPI.ListAudienceSchedulesFromSpaceAndAudience`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/audit-events": {
      "get": {
        "summary": "List Audit Events",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "description": "Filter response to events that happened after this time.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that happened after this time.",
              "type": "string",
              "title": "startTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that happened before this time.\nDefaults to the current time, or the end time from the pagination cursor.",
              "type": "string",
              "title": "endTime"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceId",
            "description": "Filter response to events that affect a specific resource, for example, a single Source.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that affect a specific resource, for example, a single Source.",
              "type": "string",
              "title": "resourceId"
            },
            "example": "9aQ1Lj62S4bomZKLF4DPqW"
          },
          {
            "in": "query",
            "required": false,
            "name": "resourceType",
            "description": "Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.",
              "type": "string",
              "title": "resourceType"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Audit Trail events.",
        "operationId": "listAuditEvents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDQuMjY2WiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDQuMjY2WiJ9"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDQuMjY2WiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDQuMjY2WiJ9"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDMuOTUyWiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDMuOTUyWiJ9"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListAuditEventsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "events": [
                      {
                        "id": "events/145876976",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Deleted",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "8AWE8yZRdy",
                        "resourceType": "function",
                        "resourceName": "Foo Func 543"
                      },
                      {
                        "id": "events/145876978",
                        "timestamp": "2022-03-04T21:29:22Z",
                        "type": "Source Function Modified",
                        "actor": "public-api-token/TJ7z8cg6",
                        "resourceId": "sfnc_tFXvS0Rs6T",
                        "resourceType": "function",
                        "resourceName": "displayName"
                      }
                    ],
                    "pagination": {
                      "current": "eyJwYWdlVG9rZW4iOiJNUT09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDMuNzMzWiJ9",
                      "next": "eyJwYWdlVG9rZW4iOiJNZz09IiwiZW5kVGltZSI6IjIwMjQtMDItMDdUMDA6MDQ6MDMuNzMzWiJ9"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "Audit Trail"
        ],
        "tags": [
          "Audit Trail"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.auditTrail.listAuditEvents())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.AuditTrailApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        AuditTrailApi apiInstance = new AuditTrailApi(defaultClient);\n        String startTime = \"startTime_example\"; // String | Filter response to events that happened after this time.  This parameter exists in v1.\n        String endTime = \"endTime_example\"; // String | Filter response to events that happened before this time. Defaults to the current time, or the end time from the pagination cursor.  This parameter exists in v1.\n        String resourceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | Filter response to events that affect a specific resource, for example, a single Source.  This parameter exists in v1.\n        String resourceType = \"resourceType_example\"; // String | Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.  This parameter exists in v1.\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListAuditEvents200Response result = apiInstance.listAuditEvents(startTime, endTime, resourceId, resourceType, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AuditTrailApi#listAuditEvents\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_audit_events200_response import ListAuditEvents200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.AuditTrailApi(api_client)\n    start_time = 'start_time_example' # str | Filter response to events that happened after this time.  This parameter exists in v1. (optional)\n    end_time = 'end_time_example' # str | Filter response to events that happened before this time. Defaults to the current time, or the end time from the pagination cursor.  This parameter exists in v1. (optional)\n    resource_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | Filter response to events that affect a specific resource, for example, a single Source.  This parameter exists in v1. (optional)\n    resource_type = 'resource_type_example' # str | Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.  This parameter exists in v1. (optional)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Audit Events\n        api_response = api_instance.list_audit_events(start_time=start_time, end_time=end_time, resource_id=resource_id, resource_type=resource_type, pagination=pagination)\n        print(\"The response of AuditTrailApi->list_audit_events:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling AuditTrailApi->list_audit_events: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    startTime := \"startTime_example\" // string | Filter response to events that happened after this time.  This parameter exists in v1. (optional)\n    endTime := \"endTime_example\" // string | Filter response to events that happened before this time. Defaults to the current time, or the end time from the pagination cursor.  This parameter exists in v1. (optional)\n    resourceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | Filter response to events that affect a specific resource, for example, a single Source.  This parameter exists in v1. (optional)\n    resourceType := \"resourceType_example\" // string | Filter response to events that affect a specific type, for example, Sources, Warehouses, and Tracking Plans.  This parameter exists in v1. (optional)\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.AuditTrailAPI.ListAuditEvents(ctx).StartTime(startTime).EndTime(endTime).ResourceId(resourceId).ResourceType(resourceType).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `AuditTrailAPI.ListAuditEvents``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListAuditEvents`: ListAuditEvents200Response\n    fmt.Fprintf(os.Stdout, \"Response from `AuditTrailAPI.ListAuditEvents`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/connected-destinations": {
      "get": {
        "summary": "List Connected Destinations from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params for the request.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Destinations connected to a Source.",
        "operationId": "listConnectedDestinationsFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedDestinationsFromSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "destinations": [],
                    "pagination": {
                      "current": "MQ==",
                      "totalEntries": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listConnectedDestinationsFromSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Required pagination params for the request.  This parameter exists in alpha.\n        try {\n            ListConnectedDestinationsFromSource200Response result = apiInstance.listConnectedDestinationsFromSource(sourceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#listConnectedDestinationsFromSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_connected_destinations_from_source200_response import ListConnectedDestinationsFromSource200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Required pagination params for the request.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Connected Destinations from Source\n        api_response = api_instance.list_connected_destinations_from_source(source_id, pagination=pagination)\n        print(\"The response of SourcesApi->list_connected_destinations_from_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->list_connected_destinations_from_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Required pagination params for the request.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.ListConnectedDestinationsFromSource(ctx, sourceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.ListConnectedDestinationsFromSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListConnectedDestinationsFromSource`: ListConnectedDestinationsFromSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.ListConnectedDestinationsFromSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources": {
      "get": {
        "summary": "List Connected Sources from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=1"
          }
        ],
        "deprecated": false,
        "description": "Returns the list of Sources that are connected to a Warehouse.",
        "operationId": "listConnectedSourcesFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedSourcesFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sources": [
                      {
                        "id": "qQEHquLrjRDN9j1ByrChyn",
                        "slug": "swift",
                        "name": "",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "writeKeys": [
                          "bEj5MzDqCkHYRqreZgbPuH"
                        ],
                        "metadata": {
                          "id": "dZeHygTSD4",
                          "slug": "swift",
                          "name": "Apple",
                          "categories": [
                            "Mobile"
                          ],
                          "description": "The hassle-free way to add Segment analytics to your swift app (iOS, macOS, tvOS).",
                          "logos": {
                            "default": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "alt": "https://cdn.filepicker.io/api/file/qWgSP5cpS7eeW2voq13u",
                            "mark": "https://cdn.filepicker.io/api/file/CoPDNKCgSlyYVeQow6JW"
                          },
                          "options": [],
                          "isCloudEventSource": false
                        },
                        "settings": {},
                        "labels": []
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MQ==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Warehouses"
        ],
        "tags": [
          "Warehouses"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.warehouses.listConnectedSourcesFromWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.WarehousesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        WarehousesApi apiInstance = new WarehousesApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListConnectedSourcesFromWarehouse200Response result = apiInstance.listConnectedSourcesFromWarehouse(warehouseId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling WarehousesApi#listConnectedSourcesFromWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_connected_sources_from_warehouse200_response import ListConnectedSourcesFromWarehouse200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.WarehousesApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Connected Sources from Warehouse\n        api_response = api_instance.list_connected_sources_from_warehouse(warehouse_id, pagination=pagination)\n        print(\"The response of WarehousesApi->list_connected_sources_from_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling WarehousesApi->list_connected_sources_from_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.WarehousesAPI.ListConnectedSourcesFromWarehouse(ctx, warehouseId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `WarehousesAPI.ListConnectedSourcesFromWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListConnectedSourcesFromWarehouse`: ListConnectedSourcesFromWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `WarehousesAPI.ListConnectedSourcesFromWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/connected-warehouses": {
      "get": {
        "summary": "List Connected Warehouses from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Required pagination params for the request.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Warehouses connected to a Source.",
        "operationId": "listConnectedWarehousesFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListConnectedWarehousesFromSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "warehouses": [
                      {
                        "id": "kjU72LCJexvrqL7G4TMHHN",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "55d3d3aea3c",
                          "slug": "postgres",
                          "name": "Postgres",
                          "description": "Open source data warehouse",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/postgres-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      },
                      {
                        "id": "v1e6FCE8P9EvQmCLWpKtJ3",
                        "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                        "enabled": true,
                        "metadata": {
                          "id": "aea3c55dsz",
                          "slug": "redshift",
                          "name": "Redshift",
                          "description": "Powered by Amazon Web Services",
                          "logos": {
                            "default": "https://d3hotuclm6if1r.cloudfront.net/logos/redshift-default.svg",
                            "mark": "",
                            "alt": ""
                          },
                          "options": [
                            {
                              "name": "port",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "database",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "hostname",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "password",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "username",
                              "required": true,
                              "type": "string"
                            },
                            {
                              "name": "ciphertext",
                              "required": true,
                              "type": "string"
                            }
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 2
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listConnectedWarehousesFromSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Required pagination params for the request.  This parameter exists in alpha.\n        try {\n            ListConnectedWarehousesFromSource200Response result = apiInstance.listConnectedWarehousesFromSource(sourceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#listConnectedWarehousesFromSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_connected_warehouses_from_source200_response import ListConnectedWarehousesFromSource200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Required pagination params for the request.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Connected Warehouses from Source\n        api_response = api_instance.list_connected_warehouses_from_source(source_id, pagination=pagination)\n        print(\"The response of SourcesApi->list_connected_warehouses_from_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->list_connected_warehouses_from_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Required pagination params for the request.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.ListConnectedWarehousesFromSource(ctx, sourceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.ListConnectedWarehousesFromSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListConnectedWarehousesFromSource`: ListConnectedWarehousesFromSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.ListConnectedWarehousesFromSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destinations/{destinationId}/delivery-metrics": {
      "get": {
        "summary": "List Delivery Metrics Summary from Destination",
        "parameters": [
          {
            "in": "path",
            "name": "destinationId",
            "required": true,
            "example": "fP7qoQw2HTWt9WdMr718gn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "sourceId",
            "description": "The id of the Source linked to the Destination.\n\nConfig API note: analogous to `parent`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The id of the Source linked to the Destination.\n\nConfig API note: analogous to `parent`.",
              "type": "string",
              "title": "sourceId"
            },
            "example": "rh5BDZp6QDHvXFCkibm1pR"
          },
          {
            "in": "query",
            "required": false,
            "name": "startTime",
            "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "Filter events that happened after this time.\n\nDefaults to:\n- 1 hour ago if granularity is `MINUTE`.\n- 7 days ago if granularity is `HOUR`.\n- 30 days ago if granularity is `DAY`.",
              "type": "string",
              "title": "startTime"
            },
            "example": "2006-01-02T15:04:05.000Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "endTime",
            "description": "Filter events that happened before this time. Defaults to now if not set.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "Filter events that happened before this time. Defaults to now if not set.",
              "type": "string",
              "title": "endTime"
            },
            "example": "2006-01-02T15:04:05.000Z"
          },
          {
            "in": "query",
            "required": false,
            "name": "granularity",
            "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.\n\nThis parameter exists in beta.",
            "schema": {
              "description": "The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.\n\nDefaults to `MINUTE` if not set.",
              "enum": [
                "DAY",
                "HOUR",
                "MINUTE"
              ],
              "type": "string",
              "title": "granularity"
            },
            "example": "DAY"
          }
        ],
        "deprecated": false,
        "description": "Get an event delivery metrics summary from a Destination.\n\nBased on the granularity chosen, there are restrictions on the time range you can query:\n\n**Minute**:\n- Max time range: 4 hours\n- Oldest possible start time: 48 hours in the past\n\n**Hour**:\n- Max Time range: 7 days\n- Oldest possible start time: 7 days in the past\n\n**Day**:\n- Max time range: 14 days\n- Oldest possible start time: 14 days in the past",
        "operationId": "listDeliveryMetricsSummaryFromDestination",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDeliveryMetricsSummaryFromDestinationBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "deliveryMetricsSummary": {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "destination-id",
                      "metrics": [
                        {
                          "metricName": "successes",
                          "total": 120,
                          "breakdown": [
                            {
                              "metricName": "successes_on_first_attempt",
                              "value": 60
                            },
                            {
                              "metricName": "successes_after_retry",
                              "value": 60
                            }
                          ]
                        },
                        {
                          "metricName": "expired",
                          "total": 0
                        },
                        {
                          "metricName": "discarded",
                          "total": 0
                        },
                        {
                          "metricName": "retried",
                          "total": 0
                        },
                        {
                          "metricName": "time_to_success",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_success_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_success_p95",
                              "value": 0
                            }
                          ]
                        },
                        {
                          "metricName": "time_to_first_attempt",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_first_attempt_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_first_attempt_p95",
                              "value": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListDeliveryMetricsSummaryFromDestinationBetaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "deliveryMetricsSummary": {
                      "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                      "destinationMetadataId": "destination-id",
                      "metrics": [
                        {
                          "metricName": "successes",
                          "total": 120,
                          "breakdown": [
                            {
                              "metricName": "successes_on_first_attempt",
                              "value": 60
                            },
                            {
                              "metricName": "successes_after_retry",
                              "value": 60
                            }
                          ]
                        },
                        {
                          "metricName": "expired",
                          "total": 0
                        },
                        {
                          "metricName": "discarded",
                          "total": 0
                        },
                        {
                          "metricName": "retried",
                          "total": 0
                        },
                        {
                          "metricName": "time_to_success",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_success_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_success_p95",
                              "value": 0
                            }
                          ]
                        },
                        {
                          "metricName": "time_to_first_attempt",
                          "total": 10,
                          "breakdown": [
                            {
                              "metricName": "time_to_first_attempt_average",
                              "value": 0
                            },
                            {
                              "metricName": "time_to_first_attempt_p95",
                              "value": 0
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destinations"
        ],
        "tags": [
          "Destinations"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinations.listDeliveryMetricsSummaryFromDestination('fP7qoQw2HTWt9WdMr718gn', 'rh5BDZp6QDHvXFCkibm1pR')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationsApi apiInstance = new DestinationsApi(defaultClient);\n        String destinationId = \"fP7qoQw2HTWt9WdMr718gn\"; // String | \n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | The id of the Source linked to the Destination.  Config API note: analogous to `parent`.  This parameter exists in beta.\n        String startTime = \"2006-01-02T15:04:05.000Z\"; // String | Filter events that happened after this time.  Defaults to: - 1 hour ago if granularity is `MINUTE`. - 7 days ago if granularity is `HOUR`. - 30 days ago if granularity is `DAY`.  This parameter exists in beta.\n        String endTime = \"2006-01-02T15:04:05.000Z\"; // String | Filter events that happened before this time. Defaults to now if not set.  This parameter exists in beta.\n        String granularity = \"DAY\"; // String | The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.  Defaults to `MINUTE` if not set.  This parameter exists in beta.\n        try {\n            ListDeliveryMetricsSummaryFromDestination200Response result = apiInstance.listDeliveryMetricsSummaryFromDestination(destinationId, sourceId, startTime, endTime, granularity);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationsApi#listDeliveryMetricsSummaryFromDestination\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_delivery_metrics_summary_from_destination200_response import ListDeliveryMetricsSummaryFromDestination200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationsApi(api_client)\n    destination_id = 'fP7qoQw2HTWt9WdMr718gn' # str | \n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | The id of the Source linked to the Destination.  Config API note: analogous to `parent`.  This parameter exists in beta.\n    start_time = '2006-01-02T15:04:05.000Z' # str | Filter events that happened after this time.  Defaults to: - 1 hour ago if granularity is `MINUTE`. - 7 days ago if granularity is `HOUR`. - 30 days ago if granularity is `DAY`.  This parameter exists in beta. (optional)\n    end_time = '2006-01-02T15:04:05.000Z' # str | Filter events that happened before this time. Defaults to now if not set.  This parameter exists in beta. (optional)\n    granularity = 'DAY' # str | The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.  Defaults to `MINUTE` if not set.  This parameter exists in beta. (optional)\n\n    try:\n        # List Delivery Metrics Summary from Destination\n        api_response = api_instance.list_delivery_metrics_summary_from_destination(destination_id, source_id, start_time=start_time, end_time=end_time, granularity=granularity)\n        print(\"The response of DestinationsApi->list_delivery_metrics_summary_from_destination:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationsApi->list_delivery_metrics_summary_from_destination: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    destinationId := \"fP7qoQw2HTWt9WdMr718gn\" // string | \n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | The id of the Source linked to the Destination.  Config API note: analogous to `parent`.  This parameter exists in beta.\n    startTime := \"2006-01-02T15:04:05.000Z\" // string | Filter events that happened after this time.  Defaults to: - 1 hour ago if granularity is `MINUTE`. - 7 days ago if granularity is `HOUR`. - 30 days ago if granularity is `DAY`.  This parameter exists in beta. (optional)\n    endTime := \"2006-01-02T15:04:05.000Z\" // string | Filter events that happened before this time. Defaults to now if not set.  This parameter exists in beta. (optional)\n    granularity := \"DAY\" // string | The granularity to filter metrics to. Either `MINUTE`, `HOUR` or `DAY`.  Defaults to `MINUTE` if not set.  This parameter exists in beta. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationsAPI.ListDeliveryMetricsSummaryFromDestination(ctx, destinationId).SourceId(sourceId).StartTime(startTime).EndTime(endTime).Granularity(granularity).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationsAPI.ListDeliveryMetricsSummaryFromDestination``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListDeliveryMetricsSummaryFromDestination`: ListDeliveryMetricsSummaryFromDestination200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationsAPI.ListDeliveryMetricsSummaryFromDestination`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/functions/{functionId}/versions": {
      "get": {
        "summary": "List Function Versions",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Lists versions for a Function in a Workspace.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listFunctionVersions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListFunctionVersionsAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "versions": [
                      {
                        "author": "",
                        "code": "async function onTrack(event, settings) {console.log('Test')}"
                      },
                      {
                        "author": "",
                        "code": "async function onTrack(event, settings) {console.log('Test')}"
                      },
                      {
                        "author": "",
                        "code": "async function onTrack(event, settings) {console.log('Test')}"
                      }
                    ],
                    "pagination": {
                      "current": "MQ=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.functions.listFunctionVersions('sfnc_wXzcDGFR3KmjLDrtSawNHf'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfnc_wXzcDGFR3KmjLDrtSawNHf\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination parameters.  This parameter exists in alpha.\n        try {\n            ListFunctionVersions200Response result = apiInstance.listFunctionVersions(functionId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#listFunctionVersions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_function_versions200_response import ListFunctionVersions200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfnc_wXzcDGFR3KmjLDrtSawNHf' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination parameters.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Function Versions\n        api_response = api_instance.list_function_versions(function_id, pagination=pagination)\n        print(\"The response of FunctionsApi->list_function_versions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->list_function_versions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfnc_wXzcDGFR3KmjLDrtSawNHf\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination parameters.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.ListFunctionVersions(ctx, functionId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.ListFunctionVersions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListFunctionVersions`: ListFunctionVersions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.ListFunctionVersions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "post": {
        "summary": "Restore Function Version",
        "parameters": [
          {
            "in": "path",
            "name": "functionId",
            "required": true,
            "example": "sfnc_wXzcDGFR3KmjLDrtSawNHf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Restore an old Function version as the latest version.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Functions feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "restoreFunctionVersion",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreFunctionVersionAlphaInput"
              },
              "example": {
                "versionId": "2Ma03fahSqLoEzQfV5o2aSfVEHs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RestoreFunctionVersionAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "version": {
                      "author": "",
                      "code": "async function onTrack(event, settings) {console.log('Test')}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Functions"
        ],
        "tags": [
          "Functions"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.functions.restoreFunctionVersion('sfnc_wXzcDGFR3KmjLDrtSawNHf', { versionId: '2Ma03fahSqLoEzQfV5o2aSfVEHs' })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.FunctionsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        FunctionsApi apiInstance = new FunctionsApi(defaultClient);\n        String functionId = \"sfnc_wXzcDGFR3KmjLDrtSawNHf\"; // String | \n        RestoreFunctionVersionAlphaInput restoreFunctionVersionAlphaInput = new RestoreFunctionVersionAlphaInput(); // RestoreFunctionVersionAlphaInput | \n        try {\n            RestoreFunctionVersion200Response result = apiInstance.restoreFunctionVersion(functionId, restoreFunctionVersionAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FunctionsApi#restoreFunctionVersion\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.restore_function_version200_response import RestoreFunctionVersion200Response\nfrom segment_public_api.models.restore_function_version_alpha_input import RestoreFunctionVersionAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.FunctionsApi(api_client)\n    function_id = 'sfnc_wXzcDGFR3KmjLDrtSawNHf' # str | \n    restore_function_version_alpha_input = {\"versionId\":\"2Ma03fahSqLoEzQfV5o2aSfVEHs\"} # RestoreFunctionVersionAlphaInput | \n\n    try:\n        # Restore Function Version\n        api_response = api_instance.restore_function_version(function_id, restore_function_version_alpha_input)\n        print(\"The response of FunctionsApi->restore_function_version:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling FunctionsApi->restore_function_version: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    functionId := \"sfnc_wXzcDGFR3KmjLDrtSawNHf\" // string | \n    restoreFunctionVersionAlphaInput := *api.NewRestoreFunctionVersionAlphaInput(\"VersionId_example\") // RestoreFunctionVersionAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.FunctionsAPI.RestoreFunctionVersion(ctx, functionId).RestoreFunctionVersionAlphaInput(restoreFunctionVersionAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `FunctionsAPI.RestoreFunctionVersion``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RestoreFunctionVersion`: RestoreFunctionVersion200Response\n    fmt.Fprintf(os.Stdout, \"Response from `FunctionsAPI.RestoreFunctionVersion`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/groups/{userGroupId}/invites": {
      "get": {
        "summary": "List Invites from User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for invites to the group.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns the emails of invitees to a user group.",
        "operationId": "listInvitesFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListInvitesFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "emails": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.listInvitesFromUserGroup('bBABwqbaDf2QdwTbW8bNEm'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination for invites to the group.  This parameter exists in v1.\n        try {\n            ListInvitesFromUserGroup200Response result = apiInstance.listInvitesFromUserGroup(userGroupId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#listInvitesFromUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_invites_from_user_group200_response import ListInvitesFromUserGroup200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination for invites to the group.  This parameter exists in v1. (optional)\n\n    try:\n        # List Invites from User Group\n        api_response = api_instance.list_invites_from_user_group(user_group_id, pagination=pagination)\n        print(\"The response of IAMGroupsApi->list_invites_from_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->list_invites_from_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination for invites to the group.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.ListInvitesFromUserGroup(ctx, userGroupId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.ListInvitesFromUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListInvitesFromUserGroup`: ListInvitesFromUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.ListInvitesFromUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/reverse-etl-models/{modelId}/subscriptionId/{subscriptionId}/syncs": {
      "get": {
        "summary": "List Reverse ETL Sync Statuses from Model And Subscription Id",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "example": "modelId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "example": "subscriptionId",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "count",
            "description": "The number of items to retrieve in a page, between 1 and 100. Default is 10\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The number of items to retrieve in a page, between 1 and 100. Default is 10",
              "type": "number",
              "title": "count"
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "cursor",
            "description": "The page to request. Acceptable values to use are from the `current`, `next`, and `previous` keys.\n\nThis parameter exists in alpha.",
            "schema": {
              "description": "The page to request. Acceptable values to use are from the `current`, `next`, and `previous` keys.",
              "type": "string",
              "title": "cursor"
            }
          }
        ],
        "deprecated": false,
        "description": "Get the sync statuses for a Reverse ETL mapping subscription. \nThe sync status includes all detailed information about the sync - sync status, duration, details about the extract and load phase if applicable, etc. \nThe default page count is 10, and then the next page can be fetched by passing the `cursor` query parameter.",
        "operationId": "listReverseETLSyncStatusesFromModelAndSubscriptionId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListReverseETLSyncStatusesFromModelAndSubscriptionIdOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "syncStatuses": [
                      {
                        "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                        "modelId": "pUy1F8Xsy3cLR25QBDNsbN",
                        "syncId": "1",
                        "syncStatus": "SUCCESS",
                        "duration": "21.481s",
                        "error": "",
                        "errorCode": "",
                        "startedAt": "2024-01-25T18:58:10.16064Z",
                        "finishedAt": "2024-01-25T18:58:31.64138Z",
                        "extractPhase": {
                          "addedCount": "1000",
                          "updatedCount": "0",
                          "deletedCount": "0",
                          "unmodifiedCount": "0",
                          "extractCount": "1000",
                          "errorCode": "",
                          "startedAt": "2024-01-25T18:58:10.31623Z",
                          "finishedAt": "2024-01-25T18:58:20.692479Z"
                        },
                        "loadPhase": {
                          "deliverSuccessCount": "1000",
                          "deliverFailureCount": "0",
                          "errorCode": "",
                          "startedAt": "2024-01-25T18:58:20.84456Z",
                          "finishedAt": "2024-01-25T18:58:31.64138Z"
                        }
                      }
                    ],
                    "pagination": {
                      "current": "2024-01-25T18:58:20.84456Z",
                      "next": "2024-01-25T19:58:20.84456Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Reverse ETL"
        ],
        "tags": [
          "Reverse ETL"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.reverseEtl.listReverseETLSyncStatusesFromModelAndSubscriptionId('modelId', 'subscriptionId'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ReverseEtlApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ReverseEtlApi apiInstance = new ReverseEtlApi(defaultClient);\n        String modelId = \"modelId\"; // String | \n        String subscriptionId = \"subscriptionId\"; // String | \n        BigDecimal count = new BigDecimal(78); // BigDecimal | The number of items to retrieve in a page, between 1 and 100. Default is 10  This parameter exists in alpha.\n        String cursor = \"cursor_example\"; // String | The page to request. Acceptable values to use are from the `current`, `next`, and `previous` keys.  This parameter exists in alpha.\n        try {\n            ListReverseETLSyncStatusesFromModelAndSubscriptionId200Response result = apiInstance.listReverseETLSyncStatusesFromModelAndSubscriptionId(modelId, subscriptionId, count, cursor);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ReverseEtlApi#listReverseETLSyncStatusesFromModelAndSubscriptionId\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_reverse_etl_sync_statuses_from_model_and_subscription_id200_response import ListReverseETLSyncStatusesFromModelAndSubscriptionId200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ReverseETLApi(api_client)\n    model_id = 'modelId' # str | \n    subscription_id = 'subscriptionId' # str | \n    count = 3.4 # float | The number of items to retrieve in a page, between 1 and 100. Default is 10  This parameter exists in alpha. (optional)\n    cursor = 'cursor_example' # str | The page to request. Acceptable values to use are from the `current`, `next`, and `previous` keys.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Reverse ETL Sync Statuses from Model And Subscription Id\n        api_response = api_instance.list_reverse_etl_sync_statuses_from_model_and_subscription_id(model_id, subscription_id, count=count, cursor=cursor)\n        print(\"The response of ReverseETLApi->list_reverse_etl_sync_statuses_from_model_and_subscription_id:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ReverseETLApi->list_reverse_etl_sync_statuses_from_model_and_subscription_id: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    modelId := \"modelId\" // string | \n    subscriptionId := \"subscriptionId\" // string | \n    count := float32(8.14) // float32 | The number of items to retrieve in a page, between 1 and 100. Default is 10  This parameter exists in alpha. (optional)\n    cursor := \"cursor_example\" // string | The page to request. Acceptable values to use are from the `current`, `next`, and `previous` keys.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ReverseETLAPI.ListReverseETLSyncStatusesFromModelAndSubscriptionId(ctx, modelId, subscriptionId).Count(count).Cursor(cursor).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ReverseETLAPI.ListReverseETLSyncStatusesFromModelAndSubscriptionId``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListReverseETLSyncStatusesFromModelAndSubscriptionId`: ListReverseETLSyncStatusesFromModelAndSubscriptionId200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ReverseETLAPI.ListReverseETLSyncStatusesFromModelAndSubscriptionId`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "summary": "List Roles",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for roles.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns a list of Roles available to apply to permissions for users and/or groups.",
        "operationId": "listRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRolesV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "roles": [
                      {
                        "id": "1WDUuRLxv84rrfCNUwvkrRtkxnS",
                        "name": "Workspace Owner",
                        "description": "Owners have full read and edit access to everything in the workspace, including Sources, Destinations, add-on products, and settings. Owners have full edit access to all Team Permissions."
                      },
                      {
                        "id": "1aEWAcU0fArxScocwH9xxLgW7r3",
                        "name": "Minimal Workspace Access",
                        "description": "Access to view the workspace. Cannot view any sub resources or make changes to the workspace."
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "Mg=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Roles"
        ],
        "tags": [
          "IAM Roles"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamRoles.listRoles())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamRolesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamRolesApi apiInstance = new IamRolesApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination for roles.  This parameter exists in v1.\n        try {\n            ListRoles200Response result = apiInstance.listRoles(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamRolesApi#listRoles\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_roles200_response import ListRoles200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMRolesApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination for roles.  This parameter exists in v1. (optional)\n\n    try:\n        # List Roles\n        api_response = api_instance.list_roles(pagination=pagination)\n        print(\"The response of IAMRolesApi->list_roles:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMRolesApi->list_roles: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination for roles.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMRolesAPI.ListRoles(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMRolesAPI.ListRoles``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListRoles`: ListRoles200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMRolesAPI.ListRoles`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/tracking-plans/{trackingPlanId}/rules": {
      "get": {
        "summary": "List Rules from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination options.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Lists Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 200 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listRulesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "rules": [
                      {
                        "key": "New Tracking Plan Rule",
                        "type": "TRACK",
                        "version": 1,
                        "jsonSchema": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "properties": {
                            "context": {
                              "type": "object"
                            },
                            "traits": {
                              "type": "object"
                            },
                            "properties": {
                              "type": "object"
                            }
                          }
                        },
                        "createdAt": "2006-01-02T15:04:05.000Z",
                        "updatedAt": "2006-01-02T15:04:05.000Z",
                        "deprecatedAt": "2006-01-02T15:04:05.000Z"
                      }
                    ],
                    "pagination": {
                      "current": "MA=="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.trackingPlans.listRulesFromTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination options.  This parameter exists in v1.\n        try {\n            ListRulesFromTrackingPlan200Response result = apiInstance.listRulesFromTrackingPlan(trackingPlanId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#listRulesFromTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_rules_from_tracking_plan200_response import ListRulesFromTrackingPlan200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    try:\n        # List Rules from Tracking Plan\n        api_response = api_instance.list_rules_from_tracking_plan(tracking_plan_id, pagination=pagination)\n        print(\"The response of TrackingPlansApi->list_rules_from_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->list_rules_from_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination options.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.ListRulesFromTrackingPlan(ctx, trackingPlanId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.ListRulesFromTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListRulesFromTrackingPlan`: ListRulesFromTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.ListRulesFromTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "delete": {
        "summary": "Remove Rules from Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "rules",
            "description": "Rules to delete.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "Rules to delete.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RemoveRuleV1"
              },
              "title": "rules"
            },
            "example": "rules.0.key=New%20Rule&rules.0.type=TRACK&rules.0.version=1"
          }
        ],
        "deprecated": false,
        "description": "Deletes Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "removeRulesFromTrackingPlan",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveRulesFromTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.removeRulesFromTrackingPlan(\n      'tp_sprout_rVGCC6WdrNxjCf6JpCHP',\n      'rules.0.key=New%20Rule&rules.0.type=TRACK&rules.0.version=1'\n    )\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        List<RemoveRuleV1> rules = Arrays.asList(); // List<RemoveRuleV1> | Rules to delete.  This parameter exists in v1.\n        try {\n            RemoveRulesFromTrackingPlan200Response result = apiInstance.removeRulesFromTrackingPlan(trackingPlanId, rules);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#removeRulesFromTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_rule_v1 import RemoveRuleV1\nfrom segment_public_api.models.remove_rules_from_tracking_plan200_response import RemoveRulesFromTrackingPlan200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    rules = [segment_public_api.RemoveRuleV1()] # List[RemoveRuleV1] | Rules to delete.  This parameter exists in v1.\n\n    try:\n        # Remove Rules from Tracking Plan\n        api_response = api_instance.remove_rules_from_tracking_plan(tracking_plan_id, rules)\n        print(\"The response of TrackingPlansApi->remove_rules_from_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->remove_rules_from_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    rules := []api.RemoveRuleV1{*api.NewRemoveRuleV1(\"Type_example\", float32(123))} // []RemoveRuleV1 | Rules to delete.  This parameter exists in v1.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.RemoveRulesFromTrackingPlan(ctx, trackingPlanId).Rules(rules).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.RemoveRulesFromTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveRulesFromTrackingPlan`: RemoveRulesFromTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.RemoveRulesFromTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "put": {
        "summary": "Replace Rules in Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replaces Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "replaceRulesInTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Replaced Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.replaceRulesInTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', {\n      rules: [{ key: 'New Replaced Rule', type: 'TRACK', version: 1, jsonSchema: {} }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        ReplaceRulesInTrackingPlanV1Input replaceRulesInTrackingPlanV1Input = new ReplaceRulesInTrackingPlanV1Input(); // ReplaceRulesInTrackingPlanV1Input | \n        try {\n            ReplaceRulesInTrackingPlan200Response result = apiInstance.replaceRulesInTrackingPlan(trackingPlanId, replaceRulesInTrackingPlanV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#replaceRulesInTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_rules_in_tracking_plan200_response import ReplaceRulesInTrackingPlan200Response\nfrom segment_public_api.models.replace_rules_in_tracking_plan_v1_input import ReplaceRulesInTrackingPlanV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    replace_rules_in_tracking_plan_v1_input = {\"rules\":[{\"key\":\"New Replaced Rule\",\"type\":\"TRACK\",\"version\":1,\"jsonSchema\":{}}]} # ReplaceRulesInTrackingPlanV1Input | \n\n    try:\n        # Replace Rules in Tracking Plan\n        api_response = api_instance.replace_rules_in_tracking_plan(tracking_plan_id, replace_rules_in_tracking_plan_v1_input)\n        print(\"The response of TrackingPlansApi->replace_rules_in_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->replace_rules_in_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    replaceRulesInTrackingPlanV1Input := *api.NewReplaceRulesInTrackingPlanV1Input([]api.RuleInputV1{*api.NewRuleInputV1(\"Type_example\", interface{}(123), float32(123))}) // ReplaceRulesInTrackingPlanV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.ReplaceRulesInTrackingPlan(ctx, trackingPlanId).ReplaceRulesInTrackingPlanV1Input(replaceRulesInTrackingPlanV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.ReplaceRulesInTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplaceRulesInTrackingPlan`: ReplaceRulesInTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.ReplaceRulesInTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Rules in Tracking Plan",
        "parameters": [
          {
            "in": "path",
            "name": "trackingPlanId",
            "required": true,
            "example": "tp_sprout_rVGCC6WdrNxjCf6JpCHP",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates Tracking Plan rules.\n\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Protocols feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "updateRulesInTrackingPlan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Input"
              },
              "example": {
                "rules": [
                  {
                    "key": "New Rule",
                    "type": "TRACK",
                    "version": 1,
                    "jsonSchema": {}
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateRulesInTrackingPlanV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Protocols",
          "Tracking Plans"
        ],
        "tags": [
          "Tracking Plans"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.trackingPlans.updateRulesInTrackingPlan('tp_sprout_rVGCC6WdrNxjCf6JpCHP', {\n      rules: [{ key: 'New Rule', type: 'TRACK', version: 1, jsonSchema: {} }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.TrackingPlansApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        TrackingPlansApi apiInstance = new TrackingPlansApi(defaultClient);\n        String trackingPlanId = \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\"; // String | \n        UpdateRulesInTrackingPlanV1Input updateRulesInTrackingPlanV1Input = new UpdateRulesInTrackingPlanV1Input(); // UpdateRulesInTrackingPlanV1Input | \n        try {\n            UpdateRulesInTrackingPlan200Response result = apiInstance.updateRulesInTrackingPlan(trackingPlanId, updateRulesInTrackingPlanV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling TrackingPlansApi#updateRulesInTrackingPlan\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_rules_in_tracking_plan200_response import UpdateRulesInTrackingPlan200Response\nfrom segment_public_api.models.update_rules_in_tracking_plan_v1_input import UpdateRulesInTrackingPlanV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.TrackingPlansApi(api_client)\n    tracking_plan_id = 'tp_sprout_rVGCC6WdrNxjCf6JpCHP' # str | \n    update_rules_in_tracking_plan_v1_input = {\"rules\":[{\"key\":\"New Rule\",\"type\":\"TRACK\",\"version\":1,\"jsonSchema\":{}}]} # UpdateRulesInTrackingPlanV1Input | \n\n    try:\n        # Update Rules in Tracking Plan\n        api_response = api_instance.update_rules_in_tracking_plan(tracking_plan_id, update_rules_in_tracking_plan_v1_input)\n        print(\"The response of TrackingPlansApi->update_rules_in_tracking_plan:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TrackingPlansApi->update_rules_in_tracking_plan: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    trackingPlanId := \"tp_sprout_rVGCC6WdrNxjCf6JpCHP\" // string | \n    updateRulesInTrackingPlanV1Input := *api.NewUpdateRulesInTrackingPlanV1Input([]api.UpsertRuleV1{*api.NewUpsertRuleV1(\"Type_example\", interface{}(123), float32(123))}) // UpdateRulesInTrackingPlanV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.TrackingPlansAPI.UpdateRulesInTrackingPlan(ctx, trackingPlanId).UpdateRulesInTrackingPlanV1Input(updateRulesInTrackingPlanV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `TrackingPlansAPI.UpdateRulesInTrackingPlan``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateRulesInTrackingPlan`: UpdateRulesInTrackingPlan200Response\n    fmt.Fprintf(os.Stdout, \"Response from `TrackingPlansAPI.UpdateRulesInTrackingPlan`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/settings": {
      "get": {
        "summary": "List Schema Settings in Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Retrieves the schema configuration settings for a Source. If Protocols is not enabled for the Source, the configurations specific to Protocols will have default values.",
        "operationId": "listSchemaSettingsInSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": true,
                        "allowUnplannedEventProperties": true,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "group": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "forwardingBlockedEventsTo": "",
                      "forwardingViolationsTo": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.listSchemaSettingsInSource('qQEHquLrjRDN9j1ByrChyn'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        try {\n            ListSchemaSettingsInSource200Response result = apiInstance.listSchemaSettingsInSource(sourceId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#listSchemaSettingsInSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_schema_settings_in_source200_response import ListSchemaSettingsInSource200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n\n    try:\n        # List Schema Settings in Source\n        api_response = api_instance.list_schema_settings_in_source(source_id)\n        print(\"The response of SourcesApi->list_schema_settings_in_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->list_schema_settings_in_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.ListSchemaSettingsInSource(ctx, sourceId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.ListSchemaSettingsInSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSchemaSettingsInSource`: ListSchemaSettingsInSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.ListSchemaSettingsInSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Schema Settings in Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "qQEHquLrjRDN9j1ByrChyn",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the schema configuration for a Source. If Protocols is not enabled for the Source, any updates to Protocols-specific configurations will not be applied.\n\n      Config API omitted fields:\n- `updateMask`\n      ",
        "operationId": "updateSchemaSettingsInSource",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Input"
              },
              "example": {
                "group": {
                  "allowTraitsOnViolations": false,
                  "allowUnplannedTraits": false,
                  "commonEventOnViolations": "ALLOW"
                },
                "identify": {
                  "allowTraitsOnViolations": true,
                  "allowUnplannedTraits": true,
                  "commonEventOnViolations": "BLOCK"
                },
                "track": {
                  "allowEventOnViolations": false,
                  "allowPropertiesOnViolations": false,
                  "allowUnplannedEventProperties": false,
                  "allowUnplannedEvents": false,
                  "commonEventOnViolations": "OMIT_PROPERTIES"
                },
                "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR",
                "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSchemaSettingsInSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "sourceId": "qQEHquLrjRDN9j1ByrChyn",
                    "settings": {
                      "track": {
                        "allowUnplannedEvents": false,
                        "allowUnplannedEventProperties": false,
                        "allowEventOnViolations": false,
                        "allowPropertiesOnViolations": false,
                        "commonEventOnViolations": "OMIT_PROPERTIES"
                      },
                      "group": {
                        "allowTraitsOnViolations": false,
                        "allowUnplannedTraits": false,
                        "commonEventOnViolations": "ALLOW"
                      },
                      "identify": {
                        "allowTraitsOnViolations": true,
                        "allowUnplannedTraits": true,
                        "commonEventOnViolations": "BLOCK"
                      },
                      "forwardingBlockedEventsTo": "rh5BDZp6QDHvXFCkibm1pR",
                      "forwardingViolationsTo": "rh5BDZp6QDHvXFCkibm1pR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.sources.updateSchemaSettingsInSource('qQEHquLrjRDN9j1ByrChyn', {\n      group: { allowTraitsOnViolations: false, allowUnplannedTraits: false, commonEventOnViolations: 'ALLOW' },\n      identify: { allowTraitsOnViolations: true, allowUnplannedTraits: true, commonEventOnViolations: 'BLOCK' },\n      track: {\n        allowEventOnViolations: false,\n        allowPropertiesOnViolations: false,\n        allowUnplannedEventProperties: false,\n        allowUnplannedEvents: false,\n        commonEventOnViolations: 'OMIT_PROPERTIES',\n      },\n      forwardingViolationsTo: 'rh5BDZp6QDHvXFCkibm1pR',\n      forwardingBlockedEventsTo: 'rh5BDZp6QDHvXFCkibm1pR',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"qQEHquLrjRDN9j1ByrChyn\"; // String | \n        UpdateSchemaSettingsInSourceV1Input updateSchemaSettingsInSourceV1Input = new UpdateSchemaSettingsInSourceV1Input(); // UpdateSchemaSettingsInSourceV1Input | \n        try {\n            UpdateSchemaSettingsInSource200Response result = apiInstance.updateSchemaSettingsInSource(sourceId, updateSchemaSettingsInSourceV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#updateSchemaSettingsInSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_schema_settings_in_source200_response import UpdateSchemaSettingsInSource200Response\nfrom segment_public_api.models.update_schema_settings_in_source_v1_input import UpdateSchemaSettingsInSourceV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'qQEHquLrjRDN9j1ByrChyn' # str | \n    update_schema_settings_in_source_v1_input = {\"group\":{\"allowTraitsOnViolations\":false,\"allowUnplannedTraits\":false,\"commonEventOnViolations\":\"ALLOW\"},\"identify\":{\"allowTraitsOnViolations\":true,\"allowUnplannedTraits\":true,\"commonEventOnViolations\":\"BLOCK\"},\"track\":{\"allowEventOnViolations\":false,\"allowPropertiesOnViolations\":false,\"allowUnplannedEventProperties\":false,\"allowUnplannedEvents\":false,\"commonEventOnViolations\":\"OMIT_PROPERTIES\"},\"forwardingViolationsTo\":\"rh5BDZp6QDHvXFCkibm1pR\",\"forwardingBlockedEventsTo\":\"rh5BDZp6QDHvXFCkibm1pR\"} # UpdateSchemaSettingsInSourceV1Input | \n\n    try:\n        # Update Schema Settings in Source\n        api_response = api_instance.update_schema_settings_in_source(source_id, update_schema_settings_in_source_v1_input)\n        print(\"The response of SourcesApi->update_schema_settings_in_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->update_schema_settings_in_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"qQEHquLrjRDN9j1ByrChyn\" // string | \n    updateSchemaSettingsInSourceV1Input := *api.NewUpdateSchemaSettingsInSourceV1Input() // UpdateSchemaSettingsInSourceV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.UpdateSchemaSettingsInSource(ctx, sourceId).UpdateSchemaSettingsInSourceV1Input(updateSchemaSettingsInSourceV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.UpdateSchemaSettingsInSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateSchemaSettingsInSource`: UpdateSchemaSettingsInSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.UpdateSchemaSettingsInSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}/selective-syncs": {
      "get": {
        "summary": "List Selective Syncs from Warehouse And Source",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns the schema for a Warehouse, including Sources, Collections, and Properties.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listSelectiveSyncsFromWarehouseAndSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "items": [
                      {
                        "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                        "collection": "tracks",
                        "warehouseId": "6WzNjtobBv3GjubD8wUnA6",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.listSelectiveSyncsFromWarehouseAndSource('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR')\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SelectiveSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SelectiveSyncApi apiInstance = new SelectiveSyncApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListSelectiveSyncsFromWarehouseAndSource200Response result = apiInstance.listSelectiveSyncsFromWarehouseAndSource(warehouseId, sourceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SelectiveSyncApi#listSelectiveSyncsFromWarehouseAndSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_selective_syncs_from_warehouse_and_source200_response import ListSelectiveSyncsFromWarehouseAndSource200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SelectiveSyncApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Selective Syncs from Warehouse And Source\n        api_response = api_instance.list_selective_syncs_from_warehouse_and_source(warehouse_id, source_id, pagination=pagination)\n        print(\"The response of SelectiveSyncApi->list_selective_syncs_from_warehouse_and_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SelectiveSyncApi->list_selective_syncs_from_warehouse_and_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SelectiveSyncAPI.ListSelectiveSyncsFromWarehouseAndSource(ctx, warehouseId, sourceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SelectiveSyncAPI.ListSelectiveSyncsFromWarehouseAndSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSelectiveSyncsFromWarehouseAndSource`: ListSelectiveSyncsFromWarehouseAndSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SelectiveSyncAPI.ListSelectiveSyncsFromWarehouseAndSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/profiles-warehouses/{warehouseId}/selective-syncs": {
      "get": {
        "summary": "List Selective Syncs from Warehouse And Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "fQyLbqjfwaqg9mr3hDQ7We",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=10"
          }
        ],
        "deprecated": false,
        "description": "Returns the schema for a Space Warehouse connection, including Collections and Properties.",
        "operationId": "listSelectiveSyncsFromWarehouseAndSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSelectiveSyncsFromWarehouseAndSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "pagination": {
                      "current": "MA==",
                      "next": "MTAw",
                      "totalEntries": 10
                    },
                    "enableEventTables": true,
                    "items": [
                      {
                        "warehouseId": "kYap2dzbkZMoBzBWfTvYcU",
                        "collection": "tracks",
                        "enabled": "true",
                        "properties": {
                          "amount": {
                            "enabled": true,
                            "type": "integer",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          },
                          "context_library_name": {
                            "enabled": true,
                            "type": "string",
                            "lastSeenAt": "2006-01-02T15:04:05.000Z",
                            "createdAt": "2006-01-02T15:04:05.000Z"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.profilesSync.listSelectiveSyncsFromWarehouseAndSpace('9aQ1Lj62S4bomZKLF4DPqW', 'fQyLbqjfwaqg9mr3hDQ7We'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ProfilesSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ProfilesSyncApi apiInstance = new ProfilesSyncApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String warehouseId = \"fQyLbqjfwaqg9mr3hDQ7We\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha.\n        try {\n            ListSelectiveSyncsFromWarehouseAndSpace200Response result = apiInstance.listSelectiveSyncsFromWarehouseAndSpace(spaceId, warehouseId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ProfilesSyncApi#listSelectiveSyncsFromWarehouseAndSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_selective_syncs_from_warehouse_and_space200_response import ListSelectiveSyncsFromWarehouseAndSpace200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ProfilesSyncApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    warehouse_id = 'fQyLbqjfwaqg9mr3hDQ7We' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    try:\n        # List Selective Syncs from Warehouse And Space\n        api_response = api_instance.list_selective_syncs_from_warehouse_and_space(space_id, warehouse_id, pagination=pagination)\n        print(\"The response of ProfilesSyncApi->list_selective_syncs_from_warehouse_and_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProfilesSyncApi->list_selective_syncs_from_warehouse_and_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    warehouseId := \"fQyLbqjfwaqg9mr3hDQ7We\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ProfilesSyncAPI.ListSelectiveSyncsFromWarehouseAndSpace(ctx, spaceId, warehouseId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ProfilesSyncAPI.ListSelectiveSyncsFromWarehouseAndSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSelectiveSyncsFromWarehouseAndSpace`: ListSelectiveSyncsFromWarehouseAndSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ProfilesSyncAPI.ListSelectiveSyncsFromWarehouseAndSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Selective Sync for Warehouse And Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "qABd3NVTPfTLQ3kXWoBhgi",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates the schema for a Space Warehouse connection, including Collections and Properties.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Modified` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "updateSelectiveSyncForWarehouseAndSpace",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput"
              },
              "example": {
                "syncOverrides": [
                  {
                    "enabled": true,
                    "collection": "tracks",
                    "property": "context_ip"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.updateSelectiveSyncForWarehouseAndSpace('9aQ1Lj62S4bomZKLF4DPqW', 'qABd3NVTPfTLQ3kXWoBhgi', {\n      syncOverrides: [{ enabled: true, collection: 'tracks', property: 'context_ip' }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ProfilesSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ProfilesSyncApi apiInstance = new ProfilesSyncApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String warehouseId = \"qABd3NVTPfTLQ3kXWoBhgi\"; // String | \n        UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput updateSelectiveSyncForWarehouseAndSpaceAlphaInput = new UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput(); // UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput | \n        try {\n            UpdateSelectiveSyncForWarehouseAndSpace200Response result = apiInstance.updateSelectiveSyncForWarehouseAndSpace(spaceId, warehouseId, updateSelectiveSyncForWarehouseAndSpaceAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ProfilesSyncApi#updateSelectiveSyncForWarehouseAndSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_selective_sync_for_warehouse_and_space200_response import UpdateSelectiveSyncForWarehouseAndSpace200Response\nfrom segment_public_api.models.update_selective_sync_for_warehouse_and_space_alpha_input import UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ProfilesSyncApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    warehouse_id = 'qABd3NVTPfTLQ3kXWoBhgi' # str | \n    update_selective_sync_for_warehouse_and_space_alpha_input = {\"syncOverrides\":[{\"enabled\":true,\"collection\":\"tracks\",\"property\":\"context_ip\"}]} # UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput | \n\n    try:\n        # Update Selective Sync for Warehouse And Space\n        api_response = api_instance.update_selective_sync_for_warehouse_and_space(space_id, warehouse_id, update_selective_sync_for_warehouse_and_space_alpha_input)\n        print(\"The response of ProfilesSyncApi->update_selective_sync_for_warehouse_and_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProfilesSyncApi->update_selective_sync_for_warehouse_and_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    warehouseId := \"qABd3NVTPfTLQ3kXWoBhgi\" // string | \n    updateSelectiveSyncForWarehouseAndSpaceAlphaInput := *api.NewUpdateSelectiveSyncForWarehouseAndSpaceAlphaInput() // UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ProfilesSyncAPI.UpdateSelectiveSyncForWarehouseAndSpace(ctx, spaceId, warehouseId).UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput(updateSelectiveSyncForWarehouseAndSpaceAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ProfilesSyncAPI.UpdateSelectiveSyncForWarehouseAndSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateSelectiveSyncForWarehouseAndSpace`: UpdateSelectiveSyncForWarehouseAndSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ProfilesSyncAPI.UpdateSelectiveSyncForWarehouseAndSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces": {
      "get": {
        "summary": "List Spaces",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination params\n\nThis parameter exists in alpha.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=200"
          }
        ],
        "deprecated": false,
        "description": "List Spaces.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.",
        "operationId": "listSpaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSpacesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "spaces": [
                      {
                        "id": "9aQ1Lj62S4bomZKLF4DPqW",
                        "name": "Default Space Papi E2E",
                        "slug": "default-space-papi-e2e"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.spaces.listSpaces())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpacesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpacesApi apiInstance = new SpacesApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination params  This parameter exists in alpha.\n        try {\n            ListSpaces200Response result = apiInstance.listSpaces(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpacesApi#listSpaces\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_spaces200_response import ListSpaces200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpacesApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination params  This parameter exists in alpha. (optional)\n\n    try:\n        # List Spaces\n        api_response = api_instance.list_spaces(pagination=pagination)\n        print(\"The response of SpacesApi->list_spaces:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpacesApi->list_spaces: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination params  This parameter exists in alpha. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpacesAPI.ListSpaces(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpacesAPI.ListSpaces``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSpaces`: ListSpaces200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpacesAPI.ListSpaces`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/suppressions": {
      "get": {
        "summary": "List Suppressions",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=5"
          }
        ],
        "deprecated": false,
        "description": "Lists all suppressions in a given Workspace.",
        "operationId": "listSuppressions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSuppressionsV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "suppressed": [
                      {
                        "subjectType": "userId",
                        "subjectIds": [
                          "1"
                        ]
                      }
                    ],
                    "pagination": {
                      "current": "MQ==",
                      "next": "cmVnLTY1MDgtMDA5ODE="
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Deletion and Suppression"
        ],
        "tags": [
          "Deletion and Suppression"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.deletionAndSuppression.listSuppressions())\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DeletionAndSuppressionApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DeletionAndSuppressionApi apiInstance = new DeletionAndSuppressionApi(defaultClient);\n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination parameters.  This parameter exists in v1.\n        try {\n            ListSuppressions200Response result = apiInstance.listSuppressions(pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DeletionAndSuppressionApi#listSuppressions\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_suppressions200_response import ListSuppressions200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DeletionAndSuppressionApi(api_client)\n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Suppressions\n        api_response = api_instance.list_suppressions(pagination=pagination)\n        print(\"The response of DeletionAndSuppressionApi->list_suppressions:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DeletionAndSuppressionApi->list_suppressions: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DeletionAndSuppressionAPI.ListSuppressions(ctx).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DeletionAndSuppressionAPI.ListSuppressions``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSuppressions`: ListSuppressions200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DeletionAndSuppressionAPI.ListSuppressions`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/syncs": {
      "get": {
        "summary": "List Syncs from Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=5"
          }
        ],
        "deprecated": false,
        "description": "Returns the overview of syncs for every Source connected to a Warehouse.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listSyncsFromWarehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.selectiveSync.listSyncsFromWarehouse('kjU72LCJexvrqL7G4TMHHN'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SelectiveSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SelectiveSyncApi apiInstance = new SelectiveSyncApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListSyncsFromWarehouse200Response result = apiInstance.listSyncsFromWarehouse(warehouseId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SelectiveSyncApi#listSyncsFromWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_syncs_from_warehouse200_response import ListSyncsFromWarehouse200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SelectiveSyncApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Syncs from Warehouse\n        api_response = api_instance.list_syncs_from_warehouse(warehouse_id, pagination=pagination)\n        print(\"The response of SelectiveSyncApi->list_syncs_from_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SelectiveSyncApi->list_syncs_from_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SelectiveSyncAPI.ListSyncsFromWarehouse(ctx, warehouseId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SelectiveSyncAPI.ListSyncsFromWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSyncsFromWarehouse`: ListSyncsFromWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SelectiveSyncAPI.ListSyncsFromWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/connected-sources/{sourceId}/syncs": {
      "get": {
        "summary": "List Syncs from Warehouse And Source",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "rh5BDZp6QDHvXFCkibm1pR",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Defines the pagination parameters.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns the overview of syncs for a Source connected to a Warehouse.\n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "listSyncsFromWarehouseAndSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListSyncsFromWarehouseAndSourceV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "reports": [],
                    "pagination": {
                      "next": null,
                      "current": ""
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.selectiveSync.listSyncsFromWarehouseAndSource('kjU72LCJexvrqL7G4TMHHN', 'rh5BDZp6QDHvXFCkibm1pR'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SelectiveSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SelectiveSyncApi apiInstance = new SelectiveSyncApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        String sourceId = \"rh5BDZp6QDHvXFCkibm1pR\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Defines the pagination parameters.  This parameter exists in v1.\n        try {\n            ListSyncsFromWarehouseAndSource200Response result = apiInstance.listSyncsFromWarehouseAndSource(warehouseId, sourceId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SelectiveSyncApi#listSyncsFromWarehouseAndSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_syncs_from_warehouse_and_source200_response import ListSyncsFromWarehouseAndSource200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SelectiveSyncApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    source_id = 'rh5BDZp6QDHvXFCkibm1pR' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    try:\n        # List Syncs from Warehouse And Source\n        api_response = api_instance.list_syncs_from_warehouse_and_source(warehouse_id, source_id, pagination=pagination)\n        print(\"The response of SelectiveSyncApi->list_syncs_from_warehouse_and_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SelectiveSyncApi->list_syncs_from_warehouse_and_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    sourceId := \"rh5BDZp6QDHvXFCkibm1pR\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Defines the pagination parameters.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SelectiveSyncAPI.ListSyncsFromWarehouseAndSource(ctx, warehouseId, sourceId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SelectiveSyncAPI.ListSyncsFromWarehouseAndSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListSyncsFromWarehouseAndSource`: ListSyncsFromWarehouseAndSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SelectiveSyncAPI.ListSyncsFromWarehouseAndSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/users/{userId}/groups": {
      "get": {
        "summary": "List User Groups from User",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "example": "sgJDWk3K21k6LE3tLU9nRK",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": false,
            "name": "pagination",
            "description": "Pagination for groups.\n\nThis parameter exists in v1.",
            "schema": {
              "$ref": "#/components/schemas/PaginationInput"
            },
            "example": "pagination.count=2"
          }
        ],
        "deprecated": false,
        "description": "Returns all groups a user belongs to.",
        "operationId": "listUserGroupsFromUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 0
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ListUserGroupsFromUserV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "groups": [
                      {
                        "id": "bBABwqbaDf2QdwTbW8bNEm",
                        "name": "PAPI Example Group"
                      }
                    ],
                    "pagination": {
                      "current": "MA==",
                      "totalEntries": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Users"
        ],
        "tags": [
          "IAM Users"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamUsers.listUserGroupsFromUser('sgJDWk3K21k6LE3tLU9nRK'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamUsersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamUsersApi apiInstance = new IamUsersApi(defaultClient);\n        String userId = \"sgJDWk3K21k6LE3tLU9nRK\"; // String | \n        PaginationInput pagination = new PaginationInput(); // PaginationInput | Pagination for groups.  This parameter exists in v1.\n        try {\n            ListUserGroupsFromUser200Response result = apiInstance.listUserGroupsFromUser(userId, pagination);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamUsersApi#listUserGroupsFromUser\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.list_user_groups_from_user200_response import ListUserGroupsFromUser200Response\nfrom segment_public_api.models.pagination_input import PaginationInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMUsersApi(api_client)\n    user_id = 'sgJDWk3K21k6LE3tLU9nRK' # str | \n    pagination = segment_public_api.PaginationInput(count=10) # PaginationInput | Pagination for groups.  This parameter exists in v1. (optional)\n\n    try:\n        # List User Groups from User\n        api_response = api_instance.list_user_groups_from_user(user_id, pagination=pagination)\n        print(\"The response of IAMUsersApi->list_user_groups_from_user:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMUsersApi->list_user_groups_from_user: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userId := \"sgJDWk3K21k6LE3tLU9nRK\" // string | \n    pagination := *api.NewPaginationInput(10) // PaginationInput | Pagination for groups.  This parameter exists in v1. (optional)\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMUsersAPI.ListUserGroupsFromUser(ctx, userId).Pagination(pagination).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMUsersAPI.ListUserGroupsFromUser``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ListUserGroupsFromUser`: ListUserGroupsFromUser200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMUsersAPI.ListUserGroupsFromUser`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/destination/filters/preview": {
      "post": {
        "summary": "Preview Destination Filter",
        "parameters": [],
        "deprecated": false,
        "description": "Simulates the application of a Destination filter to a provided JSON payload.",
        "operationId": "previewDestinationFilter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1Input"
              },
              "example": {
                "filter": {
                  "if": "type = \"track\" AND event = \"Order Completed\"",
                  "actions": [
                    {
                      "type": "ALLOW_PROPERTIES",
                      "fields": {
                        "product": [
                          "event",
                          "requestedFrom"
                        ]
                      }
                    }
                  ]
                },
                "payload": {
                  "type": "track",
                  "event": "Order Completed",
                  "product": {
                    "name": "Fake mustache",
                    "requestedFrom": "/products/123/checkout",
                    "referrer": "www.example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      },
                      "type": "track"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      },
                      "type": "track"
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      },
                      "type": "track"
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PreviewDestinationFilterV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "inputPayload": {
                      "type": "track",
                      "event": "Order Completed",
                      "product": {
                        "name": "Fake mustache",
                        "requestedFrom": "/products/123/checkout",
                        "referrer": "www.example.com"
                      }
                    },
                    "result": {
                      "event": "Order Completed",
                      "product": {
                        "requestedFrom": "/products/123/checkout"
                      },
                      "type": "track"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Destination Filters"
        ],
        "tags": [
          "Destination Filters"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.destinationFilters.previewDestinationFilter({\n      filter: {\n        if: 'type = \"track\" AND event = \"Order Completed\"',\n        actions: [{ type: 'ALLOW_PROPERTIES', fields: { product: ['event', 'requestedFrom'] } }],\n      },\n      payload: {\n        type: 'track',\n        event: 'Order Completed',\n        product: { name: 'Fake mustache', requestedFrom: '/products/123/checkout', referrer: 'www.example.com' },\n      },\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.DestinationFiltersApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        DestinationFiltersApi apiInstance = new DestinationFiltersApi(defaultClient);\n        PreviewDestinationFilterV1Input previewDestinationFilterV1Input = new PreviewDestinationFilterV1Input(); // PreviewDestinationFilterV1Input | \n        try {\n            PreviewDestinationFilter200Response result = apiInstance.previewDestinationFilter(previewDestinationFilterV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling DestinationFiltersApi#previewDestinationFilter\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.preview_destination_filter200_response import PreviewDestinationFilter200Response\nfrom segment_public_api.models.preview_destination_filter_v1_input import PreviewDestinationFilterV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.DestinationFiltersApi(api_client)\n    preview_destination_filter_v1_input = {\"filter\":{\"if\":\"type = \\\"track\\\" AND event = \\\"Order Completed\\\"\",\"actions\":[{\"type\":\"ALLOW_PROPERTIES\",\"fields\":{\"product\":[\"event\",\"requestedFrom\"]}}]},\"payload\":{\"type\":\"track\",\"event\":\"Order Completed\",\"product\":{\"name\":\"Fake mustache\",\"requestedFrom\":\"/products/123/checkout\",\"referrer\":\"www.example.com\"}}} # PreviewDestinationFilterV1Input | \n\n    try:\n        # Preview Destination Filter\n        api_response = api_instance.preview_destination_filter(preview_destination_filter_v1_input)\n        print(\"The response of DestinationFiltersApi->preview_destination_filter:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DestinationFiltersApi->preview_destination_filter: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    previewDestinationFilterV1Input := *api.NewPreviewDestinationFilterV1Input(*api.NewPreviewDestinationFilterV1(\"If_example\", []api.DestinationFilterActionV1{*api.NewDestinationFilterActionV1(\"Type_example\")}), map[string]interface{}{\"key\": interface{}(123)}) // PreviewDestinationFilterV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.DestinationFiltersAPI.PreviewDestinationFilter(ctx).PreviewDestinationFilterV1Input(previewDestinationFilterV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `DestinationFiltersAPI.PreviewDestinationFilter``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `PreviewDestinationFilter`: PreviewDestinationFilter200Response\n    fmt.Fprintf(os.Stdout, \"Response from `DestinationFiltersAPI.PreviewDestinationFilter`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/profiles-warehouses/{warehouseId}": {
      "delete": {
        "summary": "Remove Profiles Warehouse from Space",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "qABd3NVTPfTLQ3kXWoBhgi",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Deletes an existing Profiles Warehouse.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Deleted` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "removeProfilesWarehouseFromSpace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveProfilesWarehouseFromSpaceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.profilesSync.removeProfilesWarehouseFromSpace('9aQ1Lj62S4bomZKLF4DPqW', 'qABd3NVTPfTLQ3kXWoBhgi'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ProfilesSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ProfilesSyncApi apiInstance = new ProfilesSyncApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String warehouseId = \"qABd3NVTPfTLQ3kXWoBhgi\"; // String | \n        try {\n            RemoveProfilesWarehouseFromSpace200Response result = apiInstance.removeProfilesWarehouseFromSpace(spaceId, warehouseId);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ProfilesSyncApi#removeProfilesWarehouseFromSpace\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_profiles_warehouse_from_space200_response import RemoveProfilesWarehouseFromSpace200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ProfilesSyncApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    warehouse_id = 'qABd3NVTPfTLQ3kXWoBhgi' # str | \n\n    try:\n        # Remove Profiles Warehouse from Space\n        api_response = api_instance.remove_profiles_warehouse_from_space(space_id, warehouse_id)\n        print(\"The response of ProfilesSyncApi->remove_profiles_warehouse_from_space:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProfilesSyncApi->remove_profiles_warehouse_from_space: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    warehouseId := \"qABd3NVTPfTLQ3kXWoBhgi\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ProfilesSyncAPI.RemoveProfilesWarehouseFromSpace(ctx, spaceId, warehouseId).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ProfilesSyncAPI.RemoveProfilesWarehouseFromSpace``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveProfilesWarehouseFromSpace`: RemoveProfilesWarehouseFromSpace200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ProfilesSyncAPI.RemoveProfilesWarehouseFromSpace`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "patch": {
        "summary": "Update Profiles Warehouse for Space Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "3eadBBqVMQD2DEtaWXSkqA",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Updates an existing Profiles Warehouse.\n\n\n\n• When called, this endpoint may generate the `Profiles Sync Warehouse Updated` event in the [audit trail](/tag/Audit-Trail).\n      ",
        "operationId": "updateProfilesWarehouseForSpaceWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilesWarehouseForSpaceWarehouseAlphaInput"
              },
              "example": {
                "settings": {},
                "enabled": false,
                "name": "testing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateProfilesWarehouseForSpaceWarehouseAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "profilesWarehouse": {
                      "id": "3eadBBqVMQD2DEtaWXSkqA",
                      "spaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "workspaceId": "9aQ1Lj62S4bomZKLF4DPqW",
                      "enabled": false,
                      "metadata": {
                        "id": "CCIl4HLQPz",
                        "slug": "snowflake",
                        "name": "Snowflake",
                        "description": "Data warehouse built for the cloud",
                        "logos": {
                          "default": "https://cdn.filepicker.io/api/file/JrQWOYvMRRCVvSHp4HL0",
                          "mark": "https://cdn.filepicker.io/api/file/OBhrGoCRKaSyvAhDX3fw",
                          "alt": ""
                        },
                        "options": []
                      },
                      "settings": {
                        "name": "testing"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Profiles Sync"
        ],
        "tags": [
          "Profiles Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.profilesSync.updateProfilesWarehouseForSpaceWarehouse('9aQ1Lj62S4bomZKLF4DPqW', '3eadBBqVMQD2DEtaWXSkqA', {\n      settings: {},\n      enabled: false,\n      name: 'testing',\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.ProfilesSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        ProfilesSyncApi apiInstance = new ProfilesSyncApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        String warehouseId = \"3eadBBqVMQD2DEtaWXSkqA\"; // String | \n        UpdateProfilesWarehouseForSpaceWarehouseAlphaInput updateProfilesWarehouseForSpaceWarehouseAlphaInput = new UpdateProfilesWarehouseForSpaceWarehouseAlphaInput(); // UpdateProfilesWarehouseForSpaceWarehouseAlphaInput | \n        try {\n            UpdateProfilesWarehouseForSpaceWarehouse200Response result = apiInstance.updateProfilesWarehouseForSpaceWarehouse(spaceId, warehouseId, updateProfilesWarehouseForSpaceWarehouseAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling ProfilesSyncApi#updateProfilesWarehouseForSpaceWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_profiles_warehouse_for_space_warehouse200_response import UpdateProfilesWarehouseForSpaceWarehouse200Response\nfrom segment_public_api.models.update_profiles_warehouse_for_space_warehouse_alpha_input import UpdateProfilesWarehouseForSpaceWarehouseAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.ProfilesSyncApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    warehouse_id = '3eadBBqVMQD2DEtaWXSkqA' # str | \n    update_profiles_warehouse_for_space_warehouse_alpha_input = {\"settings\":{},\"enabled\":false,\"name\":\"testing\"} # UpdateProfilesWarehouseForSpaceWarehouseAlphaInput | \n\n    try:\n        # Update Profiles Warehouse for Space Warehouse\n        api_response = api_instance.update_profiles_warehouse_for_space_warehouse(space_id, warehouse_id, update_profiles_warehouse_for_space_warehouse_alpha_input)\n        print(\"The response of ProfilesSyncApi->update_profiles_warehouse_for_space_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProfilesSyncApi->update_profiles_warehouse_for_space_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    warehouseId := \"3eadBBqVMQD2DEtaWXSkqA\" // string | \n    updateProfilesWarehouseForSpaceWarehouseAlphaInput := *api.NewUpdateProfilesWarehouseForSpaceWarehouseAlphaInput(map[string]interface{}{\"key\": interface{}(123)}) // UpdateProfilesWarehouseForSpaceWarehouseAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.ProfilesSyncAPI.UpdateProfilesWarehouseForSpaceWarehouse(ctx, spaceId, warehouseId).UpdateProfilesWarehouseForSpaceWarehouseAlphaInput(updateProfilesWarehouseForSpaceWarehouseAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `ProfilesSyncAPI.UpdateProfilesWarehouseForSpaceWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateProfilesWarehouseForSpaceWarehouse`: UpdateProfilesWarehouseForSpaceWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `ProfilesSyncAPI.UpdateProfilesWarehouseForSpaceWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/group/{userGroupId}/users": {
      "delete": {
        "summary": "Remove Users from User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "query",
            "required": true,
            "name": "emails",
            "description": "The list of emails to remove from the user group.\n\nThis parameter exists in v1.",
            "schema": {
              "description": "The list of emails to remove from the user group.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "emails"
            },
            "example": "emails.0=foo%40example.com"
          }
        ],
        "deprecated": false,
        "description": "Removes one or multiple users or invites from a user group by email.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Group Memberships Deleted\n* User Removed From User Group\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "removeUsersFromUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveUsersFromUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.removeUsersFromUserGroup('bBABwqbaDf2QdwTbW8bNEm', 'emails.0=foo%40example.com'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        List<String> emails = Arrays.asList(); // List<String> | The list of emails to remove from the user group.  This parameter exists in v1.\n        try {\n            RemoveUsersFromUserGroup200Response result = apiInstance.removeUsersFromUserGroup(userGroupId, emails);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#removeUsersFromUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_users_from_user_group200_response import RemoveUsersFromUserGroup200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    emails = ['emails.0=foo%40example.com'] # List[str] | The list of emails to remove from the user group.  This parameter exists in v1.\n\n    try:\n        # Remove Users from User Group\n        api_response = api_instance.remove_users_from_user_group(user_group_id, emails)\n        print(\"The response of IAMGroupsApi->remove_users_from_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->remove_users_from_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    emails := []string{\"Inner_example\"} // []string | The list of emails to remove from the user group.  This parameter exists in v1.\n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.RemoveUsersFromUserGroup(ctx, userGroupId).Emails(emails).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.RemoveUsersFromUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveUsersFromUserGroup`: RemoveUsersFromUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.RemoveUsersFromUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      },
      "put": {
        "summary": "Replace Users in User Group",
        "parameters": [
          {
            "in": "path",
            "name": "userGroupId",
            "required": true,
            "example": "bBABwqbaDf2QdwTbW8bNEm",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Replaces the members of a user group by email.\n\n\n\n• When called, this endpoint may generate one or more of the following [audit trail](/tag/Audit-Trail) events:* Subjects Added to Group\n* User Added To User Group\n* Group Memberships Deleted\n      \n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replaceUsersInUserGroup",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Input"
              },
              "example": {
                "emails": [
                  "foo@example.com"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceUsersInUserGroupV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "userGroup": {
                      "id": "bBABwqbaDf2QdwTbW8bNEm",
                      "name": "PAPI Example Group",
                      "memberCount": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Admin",
          "IAM Groups"
        ],
        "tags": [
          "IAM Groups"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.iamGroups.replaceUsersInUserGroup('bBABwqbaDf2QdwTbW8bNEm', { emails: ['foo@example.com'] }))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.IamGroupsApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        IamGroupsApi apiInstance = new IamGroupsApi(defaultClient);\n        String userGroupId = \"bBABwqbaDf2QdwTbW8bNEm\"; // String | \n        ReplaceUsersInUserGroupV1Input replaceUsersInUserGroupV1Input = new ReplaceUsersInUserGroupV1Input(); // ReplaceUsersInUserGroupV1Input | \n        try {\n            ReplaceUsersInUserGroup200Response result = apiInstance.replaceUsersInUserGroup(userGroupId, replaceUsersInUserGroupV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling IamGroupsApi#replaceUsersInUserGroup\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_users_in_user_group200_response import ReplaceUsersInUserGroup200Response\nfrom segment_public_api.models.replace_users_in_user_group_v1_input import ReplaceUsersInUserGroupV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.IAMGroupsApi(api_client)\n    user_group_id = 'bBABwqbaDf2QdwTbW8bNEm' # str | \n    replace_users_in_user_group_v1_input = {\"emails\":[\"foo@example.com\"]} # ReplaceUsersInUserGroupV1Input | \n\n    try:\n        # Replace Users in User Group\n        api_response = api_instance.replace_users_in_user_group(user_group_id, replace_users_in_user_group_v1_input)\n        print(\"The response of IAMGroupsApi->replace_users_in_user_group:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling IAMGroupsApi->replace_users_in_user_group: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    userGroupId := \"bBABwqbaDf2QdwTbW8bNEm\" // string | \n    replaceUsersInUserGroupV1Input := *api.NewReplaceUsersInUserGroupV1Input([]string{\"Emails_example\"}) // ReplaceUsersInUserGroupV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.IAMGroupsAPI.ReplaceUsersInUserGroup(ctx, userGroupId).ReplaceUsersInUserGroupV1Input(replaceUsersInUserGroupV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `IAMGroupsAPI.ReplaceUsersInUserGroup``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplaceUsersInUserGroup`: ReplaceUsersInUserGroup200Response\n    fmt.Fprintf(os.Stdout, \"Response from `IAMGroupsAPI.ReplaceUsersInUserGroup`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/sources/{sourceId}/writekey/{writeKey}": {
      "delete": {
        "summary": "Remove Write Key from Source",
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "example": "idR4zzU9iGcGJgoAX891nf",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          },
          {
            "in": "path",
            "name": "writeKey",
            "required": true,
            "example": "wk123",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Removes a Write Key from a Source.\n\n\n\n• When called, this endpoint may generate the `Source Modified` event in the [audit trail](/tag/Audit-Trail).\n",
        "operationId": "removeWriteKeyFromSource",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RemoveWriteKeyFromSourceAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "SUCCESS"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Sources"
        ],
        "tags": [
          "Sources"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(api.sources.removeWriteKeyFromSource('idR4zzU9iGcGJgoAX891nf', 'wk123'))\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SourcesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SourcesApi apiInstance = new SourcesApi(defaultClient);\n        String sourceId = \"idR4zzU9iGcGJgoAX891nf\"; // String | \n        String writeKey = \"wk123\"; // String | \n        try {\n            RemoveWriteKeyFromSource200Response result = apiInstance.removeWriteKeyFromSource(sourceId, writeKey);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SourcesApi#removeWriteKeyFromSource\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.remove_write_key_from_source200_response import RemoveWriteKeyFromSource200Response\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SourcesApi(api_client)\n    source_id = 'idR4zzU9iGcGJgoAX891nf' # str | \n    write_key = 'wk123' # str | \n\n    try:\n        # Remove Write Key from Source\n        api_response = api_instance.remove_write_key_from_source(source_id, write_key)\n        print(\"The response of SourcesApi->remove_write_key_from_source:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SourcesApi->remove_write_key_from_source: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    sourceId := \"idR4zzU9iGcGJgoAX891nf\" // string | \n    writeKey := \"wk123\" // string | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SourcesAPI.RemoveWriteKeyFromSource(ctx, sourceId, writeKey).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SourcesAPI.RemoveWriteKeyFromSource``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `RemoveWriteKeyFromSource`: RemoveWriteKeyFromSource200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SourcesAPI.RemoveWriteKeyFromSource`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/spaces/{spaceId}/messaging-subscriptions": {
      "put": {
        "summary": "Replace Messaging Subscriptions in Spaces",
        "parameters": [
          {
            "in": "path",
            "name": "spaceId",
            "required": true,
            "example": "9aQ1Lj62S4bomZKLF4DPqW",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "\n<div style=\"background-color: #fff3cd; border: 1px solid #ffc107; border-radius: 6px; padding: 16px; margin: 16px 0; color: #856404; display: flex; align-items: center; gap: 12px; line-height: 1.5;\">\n  <span style=\"color: #ff9800; font-size: 16px; flex-shrink: 0;\">⚠️</span>\n  <div style=\"line-height: 1.5;\">\n    <div style=\"font-weight: 600; font-size: 14px; margin-bottom: 6px;\">\n      Engage Premier features will no longer be available after December 15, 2025.\n    </div>\n    <div style=\"font-size: 13px;\">\n      This API will be deactivated after this date.\n    </div>\n  </div>\n</div>\nReplace Messaging Subscriptions in Spaces.\n\n• This endpoint is in **Alpha** testing.  Please submit any feedback by sending an email to friends@segment.com.\n\n\n• In order to successfully call this endpoint, the specified Workspace needs to have the Spaces feature enabled. Please reach out to your customer success manager for more information.\n\n\nThe rate limit for this endpoint is 60 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "replaceMessagingSubscriptionsInSpaces",
        "requestBody": {
          "required": true,
          "content": {
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceMessagingSubscriptionsInSpacesAlphaInput"
              },
              "example": {
                "subscriptions": [
                  {
                    "key": "jacob@exmple.com",
                    "type": "EMAIL",
                    "status": "SUBSCRIBED"
                  },
                  {
                    "key": "jane@exmple.com",
                    "type": "EMAIL",
                    "status": "SUBSCRIBED",
                    "groups": [
                      {
                        "name": "promotions",
                        "status": "SUBSCRIBED"
                      }
                    ]
                  },
                  {
                    "key": "pgibbonsexample.com",
                    "type": "EMAIL",
                    "status": "UNSUBSCRIBED"
                  },
                  {
                    "key": "+12162226233",
                    "type": "SMS",
                    "status": "DID_NOT_SUBSCRIBE"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReplaceMessagingSubscriptionsInSpacesAlphaOutput"
                    }
                  }
                },
                "example": {
                  "data": {
                    "successes": [
                      {
                        "key": "jacob@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED"
                      },
                      {
                        "key": "jane@exmple.com",
                        "type": "EMAIL",
                        "status": "SUBSCRIBED",
                        "groups": [
                          {
                            "name": "promotions",
                            "status": "SUBSCRIBED",
                            "id": "grp_id"
                          }
                        ]
                      },
                      {
                        "key": "2162226233",
                        "type": "SMS",
                        "status": "DID_NOT_SUBSCRIBE"
                      }
                    ],
                    "failures": [
                      {
                        "key": "pgibbonsexample.com",
                        "type": "EMAIL",
                        "status": "UNSUBSCRIBED",
                        "errors": [
                          {
                            "code": "INVALID_EMAIL",
                            "message": "Email is not valid"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Engage",
          "Spaces"
        ],
        "tags": [
          "Spaces"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.spaces.replaceMessagingSubscriptionsInSpaces('9aQ1Lj62S4bomZKLF4DPqW', {\n      subscriptions: [\n        { key: 'jacob@exmple.com', type: 'EMAIL', status: 'SUBSCRIBED' },\n        { key: 'jane@exmple.com', type: 'EMAIL', status: 'SUBSCRIBED', groups: [{ name: 'promotions', status: 'SUBSCRIBED' }] },\n        { key: 'pgibbonsexample.com', type: 'EMAIL', status: 'UNSUBSCRIBED' },\n        { key: '+12162226233', type: 'SMS', status: 'DID_NOT_SUBSCRIBE' },\n      ],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SpacesApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SpacesApi apiInstance = new SpacesApi(defaultClient);\n        String spaceId = \"9aQ1Lj62S4bomZKLF4DPqW\"; // String | \n        ReplaceMessagingSubscriptionsInSpacesAlphaInput replaceMessagingSubscriptionsInSpacesAlphaInput = new ReplaceMessagingSubscriptionsInSpacesAlphaInput(); // ReplaceMessagingSubscriptionsInSpacesAlphaInput | \n        try {\n            ReplaceMessagingSubscriptionsInSpaces200Response result = apiInstance.replaceMessagingSubscriptionsInSpaces(spaceId, replaceMessagingSubscriptionsInSpacesAlphaInput);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SpacesApi#replaceMessagingSubscriptionsInSpaces\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.replace_messaging_subscriptions_in_spaces200_response import ReplaceMessagingSubscriptionsInSpaces200Response\nfrom segment_public_api.models.replace_messaging_subscriptions_in_spaces_alpha_input import ReplaceMessagingSubscriptionsInSpacesAlphaInput\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SpacesApi(api_client)\n    space_id = '9aQ1Lj62S4bomZKLF4DPqW' # str | \n    replace_messaging_subscriptions_in_spaces_alpha_input = {\"subscriptions\":[{\"key\":\"jacob@exmple.com\",\"type\":\"EMAIL\",\"status\":\"SUBSCRIBED\"},{\"key\":\"jane@exmple.com\",\"type\":\"EMAIL\",\"status\":\"SUBSCRIBED\",\"groups\":[{\"name\":\"promotions\",\"status\":\"SUBSCRIBED\"}]},{\"key\":\"pgibbonsexample.com\",\"type\":\"EMAIL\",\"status\":\"UNSUBSCRIBED\"},{\"key\":\"+12162226233\",\"type\":\"SMS\",\"status\":\"DID_NOT_SUBSCRIBE\"}]} # ReplaceMessagingSubscriptionsInSpacesAlphaInput | \n\n    try:\n        # Replace Messaging Subscriptions in Spaces\n        api_response = api_instance.replace_messaging_subscriptions_in_spaces(space_id, replace_messaging_subscriptions_in_spaces_alpha_input)\n        print(\"The response of SpacesApi->replace_messaging_subscriptions_in_spaces:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SpacesApi->replace_messaging_subscriptions_in_spaces: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    spaceId := \"9aQ1Lj62S4bomZKLF4DPqW\" // string | \n    replaceMessagingSubscriptionsInSpacesAlphaInput := *api.NewReplaceMessagingSubscriptionsInSpacesAlphaInput([]api.MessagesSubscriptionRequest{*api.NewMessagesSubscriptionRequest(\"Key_example\", \"Type_example\")}) // ReplaceMessagingSubscriptionsInSpacesAlphaInput | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SpacesAPI.ReplaceMessagingSubscriptionsInSpaces(ctx, spaceId).ReplaceMessagingSubscriptionsInSpacesAlphaInput(replaceMessagingSubscriptionsInSpacesAlphaInput).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SpacesAPI.ReplaceMessagingSubscriptionsInSpaces``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `ReplaceMessagingSubscriptionsInSpaces`: ReplaceMessagingSubscriptionsInSpaces200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SpacesAPI.ReplaceMessagingSubscriptionsInSpaces`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    },
    "/warehouses/{warehouseId}/selective-sync": {
      "patch": {
        "summary": "Update Selective Sync for Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "warehouseId",
            "required": true,
            "example": "kjU72LCJexvrqL7G4TMHHN",
            "schema": {
              "type": "string",
              "minimum": 1,
              "maximum": 255
            }
          }
        ],
        "deprecated": false,
        "description": "Configures the schema for a Warehouse, including Sources, Collections, and Properties.\n\n\n\n• When called, this endpoint may generate the `Storage Destination Modified` event in the [audit trail](/tag/Audit-Trail).\n      \n\n\nThe rate limit for this endpoint is 2 requests per minute, which is lower than the default due to access pattern restrictions. Once reached, this endpoint will respond with the 429 HTTP status code with headers indicating the limit parameters. See [Rate Limiting](/#tag/Rate-Limits) for more information.",
        "operationId": "updateSelectiveSyncForWarehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1beta+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            },
            "application/vnd.segment.v1alpha+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Input"
              },
              "example": {
                "syncOverrides": [
                  {
                    "sourceId": "rh5BDZp6QDHvXFCkibm1pR",
                    "enabled": true,
                    "collection": "checkout_started",
                    "property": "context_ip"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.segment.v1+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              },
              "application/vnd.segment.v1beta+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              },
              "application/vnd.segment.v1alpha+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UpdateSelectiveSyncForWarehouseV1Output"
                    }
                  }
                },
                "example": {
                  "data": {
                    "status": "UPDATED",
                    "warnings": []
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "NotFound",
                      "message": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "422": {
            "description": "Validation failure",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "ValidationFailure",
                      "message": "Validation failure"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "type": "RateLimited",
                      "message": "Rate limit exceeded"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/RequestErrorEnvelope"
                }
              }
            }
          }
        },
        "x-domain-hierarchy": [
          "Connections",
          "Selective Sync"
        ],
        "tags": [
          "Selective Sync"
        ],
        "x-codeSamples": [
          {
            "lang": "TypeScript",
            "source": "import { configureApis, unwrap } from '@segment/public-api-sdk-typescript'\n\nconst api = configureApis('/* Insert your Public API token here */')\n\ntry {\n  const result = await unwrap(\n    api.selectiveSync.updateSelectiveSyncForWarehouse('kjU72LCJexvrqL7G4TMHHN', {\n      syncOverrides: [{ sourceId: 'rh5BDZp6QDHvXFCkibm1pR', enabled: true, collection: 'checkout_started', property: 'context_ip' }],\n    })\n  )\n  console.log(JSON.stringify(result))\n} catch (e) {\n  console.log('ERROR:', e)\n}\n"
          },
          {
            "lang": "Java",
            "source": "// Import classes:\nimport com.segment.publicapi.ApiClient;\nimport com.segment.publicapi.ApiException;\nimport com.segment.publicapi.Configuration;\nimport com.segment.publicapi.auth.*;\nimport com.segment.publicapi.models.*;\nimport com.segment.publicapi.api.SelectiveSyncApi;\n\npublic class Example {\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure HTTP bearer authorization: token\n        HttpBearerAuth token = (HttpBearerAuth) defaultClient.getAuthentication(\"token\");\n        token.setBearerToken(\"BEARER TOKEN\");\n\n        SelectiveSyncApi apiInstance = new SelectiveSyncApi(defaultClient);\n        String warehouseId = \"kjU72LCJexvrqL7G4TMHHN\"; // String | \n        UpdateSelectiveSyncForWarehouseV1Input updateSelectiveSyncForWarehouseV1Input = new UpdateSelectiveSyncForWarehouseV1Input(); // UpdateSelectiveSyncForWarehouseV1Input | \n        try {\n            UpdateSelectiveSyncForWarehouse200Response result = apiInstance.updateSelectiveSyncForWarehouse(warehouseId, updateSelectiveSyncForWarehouseV1Input);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling SelectiveSyncApi#updateSelectiveSyncForWarehouse\");\n            System.err.println(\"Status code: \" + e.getCode());\n            System.err.println(\"Reason: \" + e.getResponseBody());\n            System.err.println(\"Response headers: \" + e.getResponseHeaders());\n            e.printStackTrace();\n        }\n    }\n}"
          },
          {
            "lang": "Python",
            "source": "import time\nimport os\nimport segment_public_api\nfrom segment_public_api.models.update_selective_sync_for_warehouse200_response import UpdateSelectiveSyncForWarehouse200Response\nfrom segment_public_api.models.update_selective_sync_for_warehouse_v1_input import UpdateSelectiveSyncForWarehouseV1Input\nfrom segment_public_api.rest import ApiException\nfrom pprint import pprint\n\n\n\n# Configure Bearer authorization: token\nconfiguration = segment_public_api.Configuration(\n    access_token = os.environ[\"BEARER_TOKEN\"]\n)\n\n# Enter a context with an instance of the API client\nwith segment_public_api.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = segment_public_api.SelectiveSyncApi(api_client)\n    warehouse_id = 'kjU72LCJexvrqL7G4TMHHN' # str | \n    update_selective_sync_for_warehouse_v1_input = {\"syncOverrides\":[{\"sourceId\":\"rh5BDZp6QDHvXFCkibm1pR\",\"enabled\":true,\"collection\":\"checkout_started\",\"property\":\"context_ip\"}]} # UpdateSelectiveSyncForWarehouseV1Input | \n\n    try:\n        # Update Selective Sync for Warehouse\n        api_response = api_instance.update_selective_sync_for_warehouse(warehouse_id, update_selective_sync_for_warehouse_v1_input)\n        print(\"The response of SelectiveSyncApi->update_selective_sync_for_warehouse:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SelectiveSyncApi->update_selective_sync_for_warehouse: %s\\n\" % e)"
          },
          {
            "lang": "Go",
            "source": "package main\n\nimport (\n    \"context\"\n    \"fmt\"\n    \"os\"\n    api \"github.com/segmentio/public-api-sdk-go\"\n)\n\nfunc main() {\n    warehouseId := \"kjU72LCJexvrqL7G4TMHHN\" // string | \n    updateSelectiveSyncForWarehouseV1Input := *api.NewUpdateSelectiveSyncForWarehouseV1Input([]api.WarehouseSyncOverrideV1{*api.NewWarehouseSyncOverrideV1(\"SourceId_example\", false)}) // UpdateSelectiveSyncForWarehouseV1Input | \n\n    configuration := api.NewConfiguration()\n    apiClient := api.NewAPIClient(configuration)\n    token := \"<BEARER_TOKEN>\"\n    ctx := context.WithValue(context.Background(), api.ContextAccessToken, token)\n    resp, r, err := apiClient.SelectiveSyncAPI.UpdateSelectiveSyncForWarehouse(ctx, warehouseId).UpdateSelectiveSyncForWarehouseV1Input(updateSelectiveSyncForWarehouseV1Input).Execute()\n    if err != nil {\n        fmt.Fprintf(os.Stderr, \"Error when calling `SelectiveSyncAPI.UpdateSelectiveSyncForWarehouse``: %v\\n\", err)\n        fmt.Fprintf(os.Stderr, \"Full HTTP response: %v\\n\", r)\n        responseErrors := api.UnwrapFullErrors(err)\n        if responseErrors != nil {\n            for _, responseError := range responseErrors.Errors {\n                fmt.Fprintf(os.Stderr, \"Full error message: %v\\n\", *responseError.Message)\n            }\n        }\n    }\n    // response from `UpdateSelectiveSyncForWarehouse`: UpdateSelectiveSyncForWarehouse200Response\n    fmt.Fprintf(os.Stdout, \"Response from `SelectiveSyncAPI.UpdateSelectiveSyncForWarehouse`: %v\\n\", resp.GetData())\n}"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AuditEventV1": {
        "description": "Represents an Audit Trail event.",
        "title": "AuditEventV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for this audit trail event.",
            "type": "string",
            "title": "id"
          },
          "timestamp": {
            "description": "The timestamp of this event in ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          },
          "type": {
            "description": "The type of this event.",
            "type": "string",
            "title": "type"
          },
          "actor": {
            "description": "The user or API token that triggered this event.",
            "type": "string",
            "title": "actor"
          },
          "actorEmail": {
            "description": "The email of the user that triggered this event.",
            "type": "string",
            "title": "actorEmail"
          },
          "resourceId": {
            "description": "The identifier of the resource affected by this event.",
            "type": "string",
            "title": "resourceId"
          },
          "resourceType": {
            "description": "The kind of resource affected by this event.",
            "type": "string",
            "title": "resourceType"
          },
          "resourceName": {
            "description": "The name of the resource affected by this event.",
            "type": "string",
            "title": "resourceName"
          }
        },
        "additionalProperties": false,
        "required": [
          "actor",
          "id",
          "resourceId",
          "resourceName",
          "resourceType",
          "timestamp",
          "type"
        ]
      },
      "ListAuditEventsV1Input": {
        "description": "Retrieves all Audit Trail events for the current Workspace.",
        "title": "ListAuditEventsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListAuditEventsV1Output": {
        "description": "Returns a list of Audit Trail events for the current Workspace.",
        "title": "ListAuditEventsV1Output",
        "type": "object",
        "properties": {
          "events": {
            "description": "Audit trail events for the current Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditEventV1"
            },
            "title": "events"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "events"
        ]
      },
      "DestinationInput": {
        "description": "The Destination Input Object.",
        "title": "DestinationInput",
        "type": "object",
        "properties": {
          "id": {
            "description": "The Destination instance id.",
            "type": "string",
            "title": "id"
          },
          "type": {
            "description": "Type of Destination to add to the audience.",
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ]
      },
      "AddDestinationToAudienceAlphaInput": {
        "description": "Input to Add a Destination into an Audience.",
        "title": "AddDestinationToAudienceAlphaInput",
        "type": "object",
        "properties": {
          "versionSchema": {
            "description": "Version Schema.",
            "type": "string",
            "title": "versionSchema"
          },
          "workspaceId": {
            "description": "The id of the Workspace the audience exists within.",
            "type": "string",
            "title": "workspaceId"
          },
          "destination": {
            "description": "The Destination id.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationInput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destination",
          "versionSchema",
          "workspaceId"
        ]
      },
      "AddDestinationToAudienceAlphaOutput": {
        "title": "AddDestinationToAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "connection": {
            "description": "The connection that was created.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The id of the connection that was created.",
                "type": "string",
                "title": "id"
              }
            },
            "additionalProperties": false,
            "required": [
              "id"
            ],
            "title": "connection"
          }
        },
        "additionalProperties": false,
        "required": [
          "connection"
        ]
      },
      "AddActivationToAudienceAlphaInput": {
        "description": "Input to create an activation.",
        "title": "AddActivationToAudienceAlphaInput",
        "type": "object",
        "properties": {
          "versionSchema": {
            "description": "Version Schema.",
            "type": "string",
            "title": "versionSchema"
          },
          "workspaceId": {
            "description": "The id of the Workspace the audience exists within.",
            "type": "string",
            "title": "workspaceId"
          },
          "destinationId": {
            "description": "The Destination id.",
            "type": "string",
            "title": "destinationId"
          },
          "enabled": {
            "description": "Whether the event emitter should be created in an enabled state.",
            "type": "boolean",
            "title": "enabled"
          },
          "hasEnabledResync": {
            "description": "Whether the event emitter should be created with the resync option.",
            "type": "boolean",
            "title": "hasEnabledResync"
          },
          "emitEntityContext": {
            "description": "Whether the event emitter should emit events when the profile changes or when any enriched entity values changes.\nOnly valid for identify events.",
            "type": "string",
            "title": "emitEntityContext"
          },
          "eventEmitter": {
            "description": "Configuration settings for the event emitter to be created.",
            "title": "eventEmitter"
          },
          "subscription": {
            "description": "Subscription info to connect the event emitter to a Destination attached\nto the audience.",
            "title": "subscription"
          }
        },
        "additionalProperties": false,
        "required": [
          "destinationId",
          "eventEmitter",
          "subscription",
          "versionSchema",
          "workspaceId"
        ]
      },
      "AddActivationToAudienceAlphaOutput": {
        "description": "Activation output for create.",
        "title": "AddActivationToAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "activation": {
            "title": "activation",
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivationSummaryOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "activation"
        ]
      },
      "ListActivationsAlphaInput": {
        "description": "Input to list all activations.",
        "title": "ListActivationsAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetActivationAlphaInput": {
        "description": "Input to get a single activation.",
        "title": "GetActivationAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteActivationAlphaInput": {
        "description": "Input to delete an activation.",
        "title": "DeleteActivationAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteActivationAlphaOutput": {
        "description": "Output for deleting an activation.",
        "title": "DeleteActivationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Deletion status.",
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "GetActivationFromAudienceOutput": {
        "description": "Output for getting an activation from space and audience.",
        "title": "GetActivationFromAudienceOutput",
        "type": "object",
        "properties": {
          "activation": {
            "title": "activation",
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivationSummaryOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "activation"
        ]
      },
      "UpdateActivationForAudienceOutput": {
        "description": "Output for updating an activation for audience.",
        "title": "UpdateActivationForAudienceOutput",
        "type": "object",
        "properties": {
          "activation": {
            "title": "activation",
            "allOf": [
              {
                "$ref": "#/components/schemas/ActivationSummaryOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "activation"
        ]
      },
      "RemoveActivationFromAudienceOutput": {
        "description": "Output for removing an activation from audience.",
        "title": "RemoveActivationFromAudienceOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Deletion status.",
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListActivationsFromAudienceOutput": {
        "description": "Output for listing activations from space and audience.",
        "title": "ListActivationsFromAudienceOutput",
        "type": "object",
        "properties": {
          "activations": {
            "description": "A list of activation results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivationSummaryOutput"
            },
            "title": "activations"
          },
          "pagination": {
            "description": "An optional pagination object that is present when pagination input is present.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "activations"
        ]
      },
      "UpdateActivationForAudienceAlphaInput": {
        "description": "Input to update an activation.",
        "title": "UpdateActivationForAudienceAlphaInput",
        "type": "object",
        "properties": {
          "workspaceId": {
            "description": "The Workspace id.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Determines whether an activation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "eventEmitter": {
            "description": "Configuration settings for the event emitter to be created.",
            "title": "eventEmitter"
          },
          "subscription": {
            "description": "Subscription info to connect the event emitter to a Destination attached\nto the audience.",
            "title": "subscription"
          }
        },
        "additionalProperties": false,
        "required": [
          "eventEmitter",
          "subscription",
          "workspaceId"
        ]
      },
      "ActivationSummaryOutput": {
        "description": "A class that encapsulates the output shared across endpoints for a given activation.",
        "title": "ActivationSummaryOutput",
        "type": "object",
        "properties": {
          "id": {
            "description": "The activation id.",
            "type": "string",
            "title": "id"
          },
          "enabled": {
            "description": "Activation Enabled Status.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id"
        ]
      },
      "ListActivationsAlphaOutput": {
        "description": "Output for listing all activations.",
        "title": "ListActivationsAlphaOutput",
        "type": "object",
        "properties": {
          "activations": {
            "description": "A list of activation results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivationSummaryOutput"
            },
            "title": "activations"
          },
          "pagination": {
            "description": "An optional pagination object that is present when pagination input is present.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "activations"
        ]
      },
      "TraitDefinition": {
        "title": "TraitDefinition",
        "type": "object",
        "properties": {
          "type": {
            "description": "The underlying data type being aggregated for this computed trait.\n\nPossible values: users, accounts.",
            "enum": [
              "ACCOUNTS",
              "USERS"
            ],
            "type": "string",
            "title": "type"
          },
          "query": {
            "description": "The query language string defining the computed trait aggregation criteria.\nFor guidance on using the query language, see the [Segment documentation site](https://segment.com/docs/api/public-api/query-language).",
            "type": "string",
            "title": "query"
          }
        },
        "additionalProperties": false,
        "required": [
          "query",
          "type"
        ]
      },
      "TraitOptions": {
        "title": "TraitOptions",
        "type": "object",
        "properties": {
          "includeHistoricalData": {
            "description": "Determines whether data prior to the computed trait being created is included when determining the computed trait value.\nNote that including historical data may be needed in order to properly handle the definition specified. In these cases, Segment will automatically handle including historical data and the response will return the includeHistoricalData parameter as true.",
            "type": "boolean",
            "title": "includeHistoricalData"
          },
          "includeAnonymousUsers": {
            "description": "Determines whether anonymous users should be included when determining the computed trait value.",
            "type": "boolean",
            "title": "includeAnonymousUsers"
          }
        },
        "additionalProperties": false
      },
      "ComputedTraitsDefinition": {
        "description": "Defines an computed trait definition.",
        "title": "ComputedTraitsDefinition",
        "type": "object",
        "properties": {
          "query": {
            "description": "The query language string defining the computed trait aggregation criteria.\nFor guidance on using the query language, see the [Segment documentation site](https://segment.com/docs/api/public-api/query-language).",
            "type": "string",
            "title": "query"
          },
          "type": {
            "description": "The underlying data type being aggregated for this computed trait.\n\nPossible values: users, accounts.",
            "enum": [
              "ACCOUNTS",
              "USERS"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "query",
          "type"
        ]
      },
      "CreateComputedTraitAlphaInput": {
        "description": "Input to create a trait.",
        "title": "CreateComputedTraitAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the computation.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Determines whether a computation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "description": {
            "description": "The description of the computation.",
            "type": "string",
            "title": "description"
          },
          "definition": {
            "description": "Represents the Compute Query Language definition of the computation and type of computation.",
            "title": "definition",
            "allOf": [
              {
                "$ref": "#/components/schemas/TraitDefinition"
              }
            ]
          },
          "options": {
            "description": "Options which should be applied when aggregating computed traits.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/TraitOptions"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "definition",
          "name"
        ]
      },
      "CreateComputedTraitAlphaOutput": {
        "description": "Computed Trait output for create.",
        "title": "CreateComputedTraitAlphaOutput",
        "type": "object",
        "properties": {
          "computedTrait": {
            "description": "The computed trait summary output.",
            "title": "computedTrait",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputedTraitSummary"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "computedTrait"
        ]
      },
      "ComputedTraitSummary": {
        "description": "Defines a Computed trait.",
        "title": "ComputedTraitSummary",
        "type": "object",
        "properties": {
          "id": {
            "description": "Computed trait id.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "Space id for the computed trait.",
            "type": "string",
            "title": "spaceId"
          },
          "name": {
            "description": "Name of the computed trait.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "Description of the computed trait.",
            "type": "string",
            "title": "description"
          },
          "key": {
            "description": "Key for the computed trait.",
            "type": "string",
            "title": "key"
          },
          "enabled": {
            "description": "Enabled/disabled status for the computed trait.",
            "type": "boolean",
            "title": "enabled"
          },
          "definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ComputedTraitsDefinition"
              }
            ],
            "description": "Query language definition and type.",
            "title": "definition",
            "nullable": true,
            "type": "object"
          },
          "status": {
            "description": "Status for the computed trait.\n\nPossible values: Backfilling, Computing, Failed, Live, Awaiting Destinations, Disabled.",
            "type": "string",
            "title": "status"
          },
          "createdBy": {
            "description": "User id who created the computed trait.",
            "type": "string",
            "title": "createdBy"
          },
          "updatedBy": {
            "description": "User id who last updated the computed trait.",
            "type": "string",
            "title": "updatedBy"
          },
          "createdAt": {
            "description": "The timestamp of the computed trait's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of the computed trait's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "options": {
            "description": "Options which should be applied when segmenting traits.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/TraitOptions"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "createdBy",
          "definition",
          "enabled",
          "id",
          "key",
          "name",
          "spaceId",
          "updatedAt",
          "updatedBy"
        ]
      },
      "GetComputedTraitAlphaInput": {
        "description": "Input to get a computed trait.",
        "title": "GetComputedTraitAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListComputedTraitsAlphaInput": {
        "description": "Input to list computed traits for a space id.",
        "title": "ListComputedTraitsAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "UpdateComputedTraitForSpaceAlphaInput": {
        "description": "Input to update a computed trait.",
        "title": "UpdateComputedTraitForSpaceAlphaInput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enabled/disabled status for the computed trait.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "The name of the computation.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the computation.",
            "type": "string",
            "title": "description"
          },
          "definition": {
            "description": "Query language definition and type.\nNote: The definition for a Computed Trait updated using the API is not editable through the Segment App.",
            "title": "definition",
            "allOf": [
              {
                "$ref": "#/components/schemas/TraitDefinition"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "RemoveComputedTraitFromSpaceAlphaInput": {
        "description": "Input to delete a computed trait.",
        "title": "RemoveComputedTraitFromSpaceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetComputedTraitAlphaOutput": {
        "description": "Computed Trait output for get and update.",
        "title": "GetComputedTraitAlphaOutput",
        "type": "object",
        "properties": {
          "computedTrait": {
            "description": "The computed trait summary output.",
            "title": "computedTrait",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputedTraitSummary"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "computedTrait"
        ]
      },
      "UpdateComputedTraitForSpaceAlphaOutput": {
        "description": "Computed Trait output for get and update.",
        "title": "UpdateComputedTraitForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "computedTrait": {
            "description": "The computed trait summary output.",
            "title": "computedTrait",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputedTraitSummary"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "computedTrait"
        ]
      },
      "ListComputedTraitsAlphaOutput": {
        "description": "List computed traits endpoint output.",
        "title": "ListComputedTraitsAlphaOutput",
        "type": "object",
        "properties": {
          "computedTraits": {
            "description": "A list of computed trait summary results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputedTraitSummary"
            },
            "title": "computedTraits"
          },
          "pagination": {
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "computedTraits",
          "pagination"
        ]
      },
      "RemoveComputedTraitFromSpaceAlphaOutput": {
        "description": "Delete computed trait endpoint output.",
        "title": "RemoveComputedTraitFromSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "CreateDownloadAlphaInput": {
        "description": "Input to create presigned URLs for Granular Observability Collection logs.",
        "title": "CreateDownloadAlphaInput",
        "type": "object",
        "properties": {
          "collectionId": {
            "description": "The collection's unique id.",
            "type": "string",
            "title": "collectionId"
          },
          "hour": {
            "description": "The ISO8601 formatted timestamp corresponding to a specific hour and day to retrieve data for. E.g.: 2025-05-07T23:00:00Z\nObjects are bucketed by hour and a month of data is retained.",
            "type": "string",
            "title": "hour"
          }
        },
        "additionalProperties": false,
        "required": [
          "collectionId",
          "hour"
        ]
      },
      "Download": {
        "title": "Download",
        "type": "object",
        "properties": {
          "urls": {
            "description": "List of presigned URLs from S3.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "urls"
          }
        },
        "additionalProperties": false,
        "required": [
          "urls"
        ]
      },
      "CreateDownloadAlphaOutput": {
        "title": "CreateDownloadAlphaOutput",
        "type": "object",
        "properties": {
          "download": {
            "description": "An object containing the downloaded data.",
            "title": "download",
            "allOf": [
              {
                "$ref": "#/components/schemas/Download"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "download"
        ]
      },
      "AllowedLabelBeta": {
        "description": "Defines a label that you may apply to resources within a Workspace.",
        "title": "AllowedLabelBeta",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key identifier for this label.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "A description of what this label represents.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "value"
        ]
      },
      "CreateDbtModelSyncTriggerInput": {
        "description": "Input for the createDbtModelSyncTriggerBySourceId endpoint.",
        "title": "CreateDbtModelSyncTriggerInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id to trigger a dbt model sync.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "additionalProperties": false,
        "required": [
          "sourceId"
        ]
      },
      "CreateDbtModelSyncTriggerOutput": {
        "description": "Output for the createDbtModelSyncTriggerBySourceId endpoint.",
        "title": "CreateDbtModelSyncTriggerOutput",
        "type": "object",
        "properties": {
          "dbtModelSyncTrigger": {
            "description": "The dbt model sync trigger.",
            "title": "dbtModelSyncTrigger",
            "allOf": [
              {
                "$ref": "#/components/schemas/DbtModelSyncTrigger"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "dbtModelSyncTrigger"
        ]
      },
      "DbtModelSyncTrigger": {
        "description": "Defines the dbt Model Sync Trigger.",
        "title": "DbtModelSyncTrigger",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the dbt model sync.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The Source id that was triggered.",
            "type": "string",
            "title": "sourceId"
          },
          "status": {
            "description": "The status of the trigger.",
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "status"
        ]
      },
      "DeliveryOverviewSuccessfullyReceivedFilterBy": {
        "description": "The `DeliveryOverviewSuccessfullyReceivedFilterBy` object is a map of the filterable fields and their values for the Successfully Received pipeline step.",
        "title": "DeliveryOverviewSuccessfullyReceivedFilterBy",
        "type": "object",
        "properties": {
          "eventName": {
            "description": "A list of strings of event names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventName"
          },
          "eventType": {
            "description": "A list of strings of event types.\nValid options are: `alias`, `group`, `identify`, `page`, `screen`, and `track`.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventType"
          },
          "appVersion": {
            "description": "A list of strings of app versions.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "appVersion"
          }
        },
        "additionalProperties": false
      },
      "DeliveryOverviewSourceFilterBy": {
        "description": "The `DeliveryOverviewSourceFilterBy` object is a map of the filterable fields and their values.",
        "title": "DeliveryOverviewSourceFilterBy",
        "type": "object",
        "properties": {
          "discardReason": {
            "description": "A list of strings of discard reasons.\n\nSee [Discard Record Documentation](https://segment.com/docs/connections/delivery-overview/#troubleshooting) for valid error codes.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "discardReason"
          },
          "eventName": {
            "description": "A list of strings of event names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventName"
          },
          "eventType": {
            "description": "A list of strings of event types.\nValid options are: `alias`, `group`, `identify`, `page`, `screen`, and `track`.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventType"
          },
          "appVersion": {
            "description": "A list of strings of app versions.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "appVersion"
          }
        },
        "additionalProperties": false
      },
      "DeliveryOverviewDestinationFilterBy": {
        "description": "The `DeliveryOverviewDestinationFilterBy` object is a map of the filterable fields and their values.",
        "title": "DeliveryOverviewDestinationFilterBy",
        "type": "object",
        "properties": {
          "discardReason": {
            "description": "A list of strings of discard reasons.\n\nSee [Discard Record Documentation](https://segment.com/docs/connections/delivery-overview/#troubleshooting) for valid error codes.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "discardReason"
          },
          "eventName": {
            "description": "A list of strings of event names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventName"
          },
          "eventType": {
            "description": "A list of strings of event types.\nValid options are: `alias`, `group`, `identify`, `page`, `screen`, and `track`.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventType"
          },
          "appVersion": {
            "description": "A list of strings of app versions.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "appVersion"
          },
          "subscriptionId": {
            "description": "A list of strings of subscription IDs for Actions Destinations.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subscriptionId"
          },
          "activationId": {
            "description": "A list of strings of event context IDs from a Linked Audience mapping/activation.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "activationId"
          },
          "audienceId": {
            "description": "A list of strings of audience IDs for a Linked Audience.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "audienceId"
          },
          "spaceId": {
            "description": "A list of strings of space IDs for a Linked Audience.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "spaceId"
          }
        },
        "additionalProperties": false
      },
      "GetDeliveryOverviewSuccessfullyReceivedBetaInput": {
        "description": "Input of the Delivery Overview Successfully Received step.",
        "title": "GetDeliveryOverviewSuccessfullyReceivedBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDeliveryOverviewFailedIngestBetaInput": {
        "description": "Input of the Delivery Overview Failed On Ingest step.",
        "title": "GetDeliveryOverviewFailedIngestBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDeliveryOverviewFilteredSourceBetaInput": {
        "description": "Input of the Delivery Overview Filtered at Source step.",
        "title": "GetDeliveryOverviewFilteredSourceBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDeliveryOverviewFilteredDestinationBetaInput": {
        "description": "Input of the Delivery Overview Filtered at Destination step.",
        "title": "GetDeliveryOverviewFilteredDestinationBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDeliveryOverviewFailedDeliveryBetaInput": {
        "description": "Input of the Delivery Overview Failed Delivery step.",
        "title": "GetDeliveryOverviewFailedDeliveryBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDeliveryOverviewSuccessfulDeliveryBetaInput": {
        "description": "Input of the Delivery Overview Successful Delivery step.",
        "title": "GetDeliveryOverviewSuccessfulDeliveryBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDeliveryOverviewMetricsBetaOutput": {
        "description": "Output of the Delivery Overview public API endpoints.",
        "title": "GetDeliveryOverviewMetricsBetaOutput",
        "type": "object",
        "properties": {
          "total": {
            "description": "The total number of events for the returned dataset.",
            "type": "number",
            "title": "total"
          },
          "dataset": {
            "description": "Represents the list of series broken down by the dimensions and\ntime frame requested.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryOverviewMetricsDataset"
            },
            "title": "dataset"
          },
          "pagination": {
            "description": "The result object used to specify the page cursor and count.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "dataset",
          "pagination",
          "total"
        ]
      },
      "DeliveryOverviewMetricsDataset": {
        "description": "Dataset within GetDeliveryOverviewMetricsBetaOutput.",
        "title": "DeliveryOverviewMetricsDataset",
        "type": "object",
        "properties": {
          "eventName": {
            "description": "The name of the event if group By[] included 'event Name' in the request.",
            "type": "string",
            "title": "eventName"
          },
          "appVersion": {
            "description": "The version of the app if group By[] included 'app Version' in the request.",
            "type": "string",
            "title": "appVersion"
          },
          "eventType": {
            "description": "The event type if group By[] included 'event Type' in the request.",
            "type": "string",
            "title": "eventType"
          },
          "discardReason": {
            "description": "The discard reason for dropped events if group By[] included 'discard Reason' in the request.",
            "type": "string",
            "title": "discardReason"
          },
          "total": {
            "description": "Holds the count of all event counts over the time frame of the series.",
            "type": "number",
            "title": "total"
          },
          "series": {
            "description": "A list of the event counts broken down by the requested\ngranularity, time frame, and group By options.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryOverviewMetricsDatapoint"
            },
            "title": "series"
          },
          "totalRetryCount": {
            "description": "The number of events successfully delivered upon retry.",
            "type": "number",
            "title": "totalRetryCount"
          }
        },
        "additionalProperties": false,
        "required": [
          "series",
          "total"
        ]
      },
      "DeliveryOverviewMetricsDatapoint": {
        "description": "Series within DeliveryOverviewMetricsDataset.",
        "title": "DeliveryOverviewMetricsDatapoint",
        "type": "object",
        "properties": {
          "time": {
            "description": "The timestamp corresponding to the beginning of the window given\nby the requested granularity.",
            "type": "string",
            "title": "time"
          },
          "count": {
            "description": "Holds the number of events within the specified granularity and\ngroup By options.",
            "type": "number",
            "title": "count"
          },
          "retryCount": {
            "description": "The number of retried events that were successfully delivered.",
            "type": "number",
            "title": "retryCount"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "time"
        ]
      },
      "CreateAudienceAlphaInput": {
        "description": "Input to create an audience.",
        "title": "CreateAudienceAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the audience.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Determines whether a computation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "description": {
            "description": "Description of the audience.",
            "type": "string",
            "title": "description"
          },
          "definition": {
            "description": "Query language definition and type.",
            "title": "definition",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceDefinition"
              }
            ]
          },
          "options": {
            "description": "Represents the options of Including Anonymous users and Historical Data.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceOptions"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "definition",
          "name"
        ]
      },
      "CreateAudienceAlphaOutput": {
        "description": "Audience output for create.",
        "title": "CreateAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "audience": {
            "description": "The audience summary output.",
            "title": "audience",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSummary"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audience"
        ]
      },
      "GetAudienceAlphaInput": {
        "description": "Input to get an audience.",
        "title": "GetAudienceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListAudiencesAlphaInput": {
        "description": "Input to list audiences for a space id.",
        "title": "ListAudiencesAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListAudienceConsumersSortInput": {
        "description": "Sort criteria input for list audience consumers.",
        "title": "ListAudienceConsumersSortInput",
        "type": "object",
        "properties": {
          "field": {
            "description": "Field to sort by.",
            "enum": [
              "CREATED_AT",
              "NAME",
              "UPDATED_AT"
            ],
            "type": "string",
            "title": "field"
          },
          "direction": {
            "description": "Sort direction (ascending or descending).",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "title": "direction"
          }
        },
        "additionalProperties": false,
        "required": [
          "direction",
          "field"
        ]
      },
      "ListAudienceConsumersFromSpaceAndAudienceAlphaInput": {
        "description": "Input to list audiences for a space id.",
        "title": "ListAudienceConsumersFromSpaceAndAudienceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "UpdateAudienceForSpaceAlphaInput": {
        "description": "Input to update an audience.",
        "title": "UpdateAudienceForSpaceAlphaInput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enabled/disabled status for the audience.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "The name of the computation.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the computation.",
            "type": "string",
            "title": "description"
          },
          "definition": {
            "description": "Represents the Compute Query Language definition of the computation and type of computation.\nNote: The definition for an Audience updated using the API is not editable through the Segment App.",
            "title": "definition",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceDefinition"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "RemoveAudienceFromSpaceAlphaInput": {
        "description": "Input to delete an audience.",
        "title": "RemoveAudienceFromSpaceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "UpdateAudienceForSpaceAlphaOutput": {
        "description": "Audience output for update.",
        "title": "UpdateAudienceForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "audience": {
            "description": "The audience summary output.",
            "title": "audience",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSummary"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audience"
        ]
      },
      "GetAudienceAlphaOutput": {
        "description": "Audience output for get.",
        "title": "GetAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "audience": {
            "description": "The audience summary output.",
            "title": "audience",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSummaryWithAudienceTypeAndLookback"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audience"
        ]
      },
      "ListAudiencesAlphaOutput": {
        "description": "List audiences endpoint output.",
        "title": "ListAudiencesAlphaOutput",
        "type": "object",
        "properties": {
          "audiences": {
            "description": "A list of audience summary results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSummaryWithAudienceTypeAndLookback"
            },
            "title": "audiences"
          },
          "pagination": {
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audiences",
          "pagination"
        ]
      },
      "ListAudienceConsumersFromSpaceAndAudienceAlphaOutput": {
        "description": "List Audience consumers output.",
        "title": "ListAudienceConsumersFromSpaceAndAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "audiences": {
            "description": "The list of audience consumers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSummary"
            },
            "title": "audiences"
          },
          "pagination": {
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audiences",
          "pagination"
        ]
      },
      "ListAudienceSchedulesFromSpaceAndAudienceAlphaInput": {
        "description": "Input to list audience schedules for a space and audience.",
        "title": "ListAudienceSchedulesFromSpaceAndAudienceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListAudienceSchedulesFromSpaceAndAudienceAlphaOutput": {
        "description": "Output for list audience schedules.",
        "title": "ListAudienceSchedulesFromSpaceAndAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "audienceSchedules": {
            "description": "A list of audience schedules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSchedule"
            },
            "title": "audienceSchedules"
          }
        },
        "additionalProperties": false,
        "required": [
          "audienceSchedules"
        ]
      },
      "GetAudienceScheduleFromSpaceAndAudienceAlphaInput": {
        "description": "Input to get a single audience schedule.",
        "title": "GetAudienceScheduleFromSpaceAndAudienceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetAudienceScheduleFromSpaceAndAudienceAlphaOutput": {
        "description": "Output for get audience schedule.",
        "title": "GetAudienceScheduleFromSpaceAndAudienceAlphaOutput",
        "type": "object",
        "properties": {
          "audienceSchedule": {
            "description": "The audience schedule.",
            "title": "audienceSchedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSchedule"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audienceSchedule"
        ]
      },
      "RemoveAudienceFromSpaceAlphaOutput": {
        "description": "Delete audience endpoint output.",
        "title": "RemoveAudienceFromSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "CreateAudiencePreviewOptions": {
        "description": "Options which should be applied when segmenting audience previews.",
        "title": "CreateAudiencePreviewOptions",
        "type": "object",
        "properties": {
          "filterByExternalIds": {
            "description": "The set of profile external identifiers being used to determine audience preview membership.\nProfiles will only be considered for audience preview membership if the profile has at least one external id whose key matches a value in this set.\nIf unspecified, a default set of external identifiers will be used: `['user_id', 'email', 'android.idfa', 'ios.idfa']`.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "filterByExternalIds"
          },
          "backfillEventDataDays": {
            "description": "If specified, the value of this field indicates the number of days (specified from the date the audience preview was created) that event data will be included from when determining audience preview membership.\nIf not specified, the default is set to the maximum event window size, or 7 days if no window condition is defined. Note that this is applied on a best-effort basis and may not always be applicable. In such cases, the response will not return a backfillEventDataDays value, and all available data will be taken into account.",
            "type": "number",
            "title": "backfillEventDataDays"
          }
        },
        "additionalProperties": false
      },
      "ReadAudiencePreviewOptions": {
        "description": "Options which should be applied when segmenting audience previews.",
        "title": "ReadAudiencePreviewOptions",
        "type": "object",
        "properties": {
          "filterByExternalIds": {
            "description": "The set of profile external identifiers being used to determine audience preview membership.\nProfiles will only be considered for audience preview membership if the profile has at least one external id whose key matches a value in this set.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "filterByExternalIds"
          },
          "includeHistoricalData": {
            "description": "Determines whether data prior to the audience preview being created is included when determining audience preview membership.\nNote that including historical data may be needed in order to properly handle the definition specified. In these cases, Segment will automatically handle including historical data and the response will return the includeHistoricalData parameter as true.",
            "type": "boolean",
            "title": "includeHistoricalData"
          },
          "backfillEventDataDays": {
            "description": "If specified, the value of this field indicates the number of days (specified from the date the audience preview was created) that event data will be included from when determining audience preview membership.\nIf unspecified, defer to the value of `includeHistoricalData` to determine whether historical data is either entirely included or entirely excluded when determining audience preview membership.",
            "type": "number",
            "title": "backfillEventDataDays"
          }
        },
        "additionalProperties": false,
        "required": [
          "filterByExternalIds",
          "includeHistoricalData"
        ]
      },
      "CreateAudiencePreviewAlphaInput": {
        "description": "Input to create an audience preview.",
        "title": "CreateAudiencePreviewAlphaInput",
        "type": "object",
        "properties": {
          "definition": {
            "description": "Query language definition.",
            "title": "definition",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceDefinitionWithoutType"
              }
            ]
          },
          "audienceType": {
            "description": "Discriminator denoting the audience's product type.\n\nPossible values: USERS, ACCOUNTS, LINKED.",
            "enum": [
              "ACCOUNTS",
              "LINKED",
              "USERS"
            ],
            "type": "string",
            "title": "audienceType"
          },
          "options": {
            "description": "Options which should be applied when segmenting audiences.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateAudiencePreviewOptions"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audienceType",
          "definition"
        ]
      },
      "CreateAudiencePreviewAlphaOutput": {
        "description": "Output when creating an audience preview.",
        "title": "CreateAudiencePreviewAlphaOutput",
        "type": "object",
        "properties": {
          "audiencePreview": {
            "description": "The audience preview identifier. The audience preview results are calculated asyncronously and can be obtained by polling the getAudiencePreview endpoint.",
            "title": "audiencePreview",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudiencePreviewIdentifier"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audiencePreview"
        ]
      },
      "GetAudiencePreviewAlphaInput": {
        "description": "Input to read an audience preview.",
        "title": "GetAudiencePreviewAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetAudiencePreviewAlphaOutput": {
        "description": "Output when reading an audience preview.",
        "title": "GetAudiencePreviewAlphaOutput",
        "type": "object",
        "properties": {
          "audiencePreview": {
            "description": "The audience preview.",
            "title": "audiencePreview",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudiencePreview"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audiencePreview"
        ]
      },
      "AudiencePreviewIdentifier": {
        "description": "Identifier for an audience preview.",
        "title": "AudiencePreviewIdentifier",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for tracking and retrieving results of an audience preview.",
            "type": "string",
            "title": "id"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "AudiencePreviewAccountResult": {
        "description": "Result membership object for an audience preview with `audienceType: ACCOUNTS`.",
        "title": "AudiencePreviewAccountResult",
        "type": "object",
        "properties": {
          "id": {
            "description": "Account id.",
            "type": "string",
            "title": "id"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "AudiencePreviewProfileResult": {
        "description": "Result membership object for an audience preview with `audienceType: USERS` or `audienceType: LINKED`.",
        "title": "AudiencePreviewProfileResult",
        "type": "object",
        "properties": {
          "id": {
            "description": "Segment id.",
            "type": "string",
            "title": "id"
          },
          "entities": {
            "description": "The entities associated with the profile. Will only have a value if the audience preview has `audienceType: LINKED` and entities are referenced in the audience preview's definition.",
            "title": "entities",
            "allOf": [
              {
                "$ref": "#/components/schemas/AssociatedEntities"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "EntityDetails": {
        "description": "Entity details.",
        "title": "EntityDetails",
        "type": "object",
        "properties": {
          "id": {
            "description": "The entity primary key value.",
            "type": "string",
            "title": "id"
          },
          "idProperty": {
            "description": "The entity primary key column name.",
            "type": "string",
            "title": "idProperty"
          },
          "relationshipSlug": {
            "description": "The entity relationship slug.",
            "type": "string",
            "title": "relationshipSlug"
          },
          "properties": {
            "description": "The entity properties.",
            "title": "properties",
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityProperties"
              }
            ]
          },
          "entities": {
            "description": "Related entities that are one level deeper will only be returned if those entities are referenced in the audience definition.",
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "title": "entities"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "idProperty",
          "relationshipSlug"
        ]
      },
      "EntityProperties": {
        "description": "Entity properties.",
        "title": "EntityProperties",
        "type": "object",
        "additionalProperties": {}
      },
      "AssociatedEntities": {
        "description": "Associated entities.",
        "title": "AssociatedEntities",
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EntityDetails"
          }
        }
      },
      "AudiencePreviewResult": {
        "title": "AudiencePreviewResult",
        "anyOf": [
          {
            "$ref": "#/components/schemas/AudiencePreviewAccountResult"
          },
          {
            "$ref": "#/components/schemas/AudiencePreviewProfileResult"
          }
        ]
      },
      "AudiencePreview": {
        "description": "An audience preview.",
        "title": "AudiencePreview",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for tracking and retrieving results of an audience preview.",
            "type": "string",
            "title": "id"
          },
          "audienceType": {
            "description": "The audience type of the preview.",
            "enum": [
              "ACCOUNTS",
              "LINKED",
              "USERS"
            ],
            "type": "string",
            "title": "audienceType"
          },
          "definition": {
            "description": "Definition that was used to calculate the audience preview.",
            "title": "definition",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceDefinitionWithoutType"
              }
            ]
          },
          "options": {
            "description": "Options that were used to calculate the audience preview.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReadAudiencePreviewOptions"
              }
            ]
          },
          "status": {
            "description": "Status for the audience preview.",
            "enum": [
              "COMPLETED",
              "FAILED",
              "RUNNING"
            ],
            "type": "string",
            "title": "status"
          },
          "results": {
            "description": "Sampled result membership for the audience preview. Only has a value if the status is 'COMPLETED'.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudiencePreviewResult"
            },
            "title": "results"
          },
          "size": {
            "description": "Result membership size for the audience preview. Only has a value if status is 'COMPLETED'.",
            "title": "size",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSize"
              }
            ]
          },
          "failureReason": {
            "description": "Explanation of why the audience preview failed. Only has a value if status is 'FAILED'.",
            "type": "string",
            "title": "failureReason"
          }
        },
        "additionalProperties": false,
        "required": [
          "audienceType",
          "definition",
          "id",
          "options",
          "status"
        ]
      },
      "GetAudienceBetaInput": {
        "description": "Input to get an audience.",
        "title": "GetAudienceBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetAudienceBetaOutput": {
        "description": "Audience output for get.",
        "title": "GetAudienceBetaOutput",
        "type": "object",
        "properties": {
          "audience": {
            "description": "The audience summary output.",
            "title": "audience",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSummaryWithAudienceTypeAndLookback"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audience"
        ]
      },
      "ListAudiencesBetaOutput": {
        "description": "List audiences endpoint output.",
        "title": "ListAudiencesBetaOutput",
        "type": "object",
        "properties": {
          "audiences": {
            "description": "A list of audience summary results.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSummaryWithAudienceTypeAndLookback"
            },
            "title": "audiences"
          },
          "pagination": {
            "description": "Information about the pagination of this response.\n\n[See pagination](https://docs.segmentapis.com/tag/Pagination/#section/Pagination-parameters) for more info.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audiences",
          "pagination"
        ]
      },
      "ListAudiencesBetaInput": {
        "description": "Input to list audiences for a space id.",
        "title": "ListAudiencesBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "AudienceDefinitionWithoutType": {
        "title": "AudienceDefinitionWithoutType",
        "type": "object",
        "properties": {
          "query": {
            "description": "The query language string defining the audience segmentation criteria.\n\nFor guidance on using the query language, see the [Segment documentation site](https://segment.com/docs/api/public-api/query-language).",
            "type": "string",
            "title": "query"
          }
        },
        "additionalProperties": false,
        "required": [
          "query"
        ]
      },
      "AudienceDefinition": {
        "title": "AudienceDefinition",
        "type": "object",
        "properties": {
          "type": {
            "description": "The underlying data type being segmented for this audience.\n\nPossible values: users, accounts.",
            "enum": [
              "ACCOUNTS",
              "USERS"
            ],
            "type": "string",
            "title": "type"
          },
          "query": {
            "description": "The query language string defining the audience segmentation criteria.\n\nFor guidance on using the query language, see the [Segment documentation site](https://segment.com/docs/api/public-api/query-language).",
            "type": "string",
            "title": "query"
          }
        },
        "additionalProperties": false,
        "required": [
          "query",
          "type"
        ]
      },
      "AudienceOptions": {
        "title": "AudienceOptions",
        "type": "object",
        "properties": {
          "includeHistoricalData": {
            "description": "Determines whether data prior to the audience being created is included when determining audience membership.\nNote that including historical data may be needed in order to properly handle the definition specified. In these cases, Segment will automatically handle including historical data and the response will return the includeHistoricalData parameter as true.",
            "type": "boolean",
            "title": "includeHistoricalData"
          },
          "includeAnonymousUsers": {
            "description": "Determines whether anonymous users should be included when determining audience membership.",
            "type": "boolean",
            "title": "includeAnonymousUsers"
          },
          "filterByExternalIds": {
            "description": "The set of profile external identifiers being used to determine audience membership.\nProfiles will only be considered for audience membership if the profile has at least one external id whose key matches a value in this set.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "filterByExternalIds"
          },
          "backfillEventDataDays": {
            "description": "If specified, the value of this field indicates the number of days, specified from the date the audience was created, that event data will be included from when determining audience membership.\nIf unspecified, defer to the value of `includeHistoricalData` to determine whether historical data is either entirely included or entirely excluded when determining audience membership.",
            "type": "number",
            "title": "backfillEventDataDays"
          }
        },
        "additionalProperties": false
      },
      "AudienceOptionsWithLookback": {
        "title": "AudienceOptionsWithLookback",
        "type": "object",
        "properties": {
          "filterByExternalIds": {
            "description": "The set of profile external identifiers being used to determine audience membership.\nProfiles will only be considered for audience membership if the profile has at least one external id whose key matches a value in this set.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "filterByExternalIds"
          },
          "includeHistoricalData": {
            "description": "Determines whether data prior to the audience being created is included when determining audience membership.\nNote that including historical data may be needed in order to properly handle the definition specified. In these cases, Segment will automatically handle including historical data and the response will return the includeHistoricalData parameter as true.",
            "type": "boolean",
            "title": "includeHistoricalData"
          },
          "includeAnonymousUsers": {
            "description": "Determines whether anonymous users should be included when determining audience membership.",
            "type": "boolean",
            "title": "includeAnonymousUsers"
          },
          "backfillEventDataDays": {
            "description": "If specified, the value of this field indicates the number of days, specified from the date the audience was created, that event data will be included from when determining audience membership.\nIf unspecified, defer to the value of `includeHistoricalData` to determine whether historical data is either entirely included or entirely excluded when determining audience membership.",
            "type": "number",
            "title": "backfillEventDataDays"
          }
        },
        "additionalProperties": false,
        "required": [
          "filterByExternalIds"
        ]
      },
      "PeriodicConfig": {
        "description": "Configures a periodic schedule interval.",
        "title": "PeriodicConfig",
        "type": "object",
        "properties": {
          "interval": {
            "description": "Go duration format string, only supporting units \"day\" (days), \"h\" (hours) and \"m\" (minutes).",
            "type": "string",
            "title": "interval"
          }
        },
        "additionalProperties": false,
        "required": [
          "interval"
        ]
      },
      "SpecificDaysConfig": {
        "description": "Configures a schedule for specific days and times.",
        "title": "SpecificDaysConfig",
        "type": "object",
        "properties": {
          "days": {
            "description": "Days of week for schedule (0=Sunday, 6=Saturday).",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "days"
          },
          "hours": {
            "description": "Hours of day for schedule (0-23).",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "hours"
          },
          "timezone": {
            "description": "TZ database time zone identifier; for example, America/New_York.",
            "type": "string",
            "title": "timezone"
          }
        },
        "additionalProperties": false,
        "required": [
          "days",
          "hours",
          "timezone"
        ]
      },
      "AudienceSchedule": {
        "description": "Defines an Audience Schedule.",
        "title": "AudienceSchedule",
        "type": "object",
        "properties": {
          "id": {
            "description": "Distinct identifier for the schedule.",
            "type": "string",
            "title": "id"
          },
          "strategy": {
            "description": "Strategy of the audience schedule (manual, periodic, or specific days).",
            "enum": [
              "MANUAL",
              "PERIODIC",
              "SPECIFIC_DAYS"
            ],
            "type": "string",
            "title": "strategy"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PeriodicConfig"
              },
              {
                "$ref": "#/components/schemas/SpecificDaysConfig"
              }
            ],
            "description": "Configuration for PERIODIC or SPECIFIC_DAYS strategies.",
            "title": "config",
            "nullable": true,
            "type": "object"
          },
          "nextExecution": {
            "description": "The next scheduled execution time (RFC3339).",
            "type": "string",
            "title": "nextExecution"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "strategy"
        ]
      },
      "AudienceSummary": {
        "description": "Defines an Audience.",
        "title": "AudienceSummary",
        "type": "object",
        "properties": {
          "id": {
            "description": "Audience id.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "Space id for the audience.",
            "type": "string",
            "title": "spaceId"
          },
          "name": {
            "description": "Name of the audience.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "Description of the audience.",
            "type": "string",
            "title": "description"
          },
          "key": {
            "description": "Key for the audience.",
            "type": "string",
            "title": "key"
          },
          "enabled": {
            "description": "Enabled/disabled status for the audience.",
            "type": "boolean",
            "title": "enabled"
          },
          "definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudienceDefinition"
              }
            ],
            "description": "Query language definition and type.",
            "title": "definition",
            "nullable": true,
            "type": "object"
          },
          "status": {
            "description": "Status for the audience.\n\nPossible values: Backfilling, Computing, Failed, Live, Awaiting Destinations, Disabled.",
            "type": "string",
            "title": "status"
          },
          "createdBy": {
            "description": "User id who created the audience.",
            "type": "string",
            "title": "createdBy"
          },
          "updatedBy": {
            "description": "User id who last updated the audience.",
            "type": "string",
            "title": "updatedBy"
          },
          "createdAt": {
            "description": "Date the audience was created.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "Date the audience was last updated.",
            "type": "string",
            "title": "updatedAt"
          },
          "audienceType": {
            "description": "Discriminator denoting the audience's product type.",
            "enum": [
              "ACCOUNTS",
              "LINKED",
              "USERS"
            ],
            "type": "string",
            "title": "audienceType"
          },
          "options": {
            "description": "Options which should be applied when segmenting audiences.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceOptions"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "audienceType",
          "createdAt",
          "createdBy",
          "definition",
          "enabled",
          "id",
          "key",
          "name",
          "spaceId",
          "updatedAt",
          "updatedBy"
        ]
      },
      "AudienceSummaryWithAudienceTypeAndLookback": {
        "title": "AudienceSummaryWithAudienceTypeAndLookback",
        "type": "object",
        "properties": {
          "computeCadence": {
            "description": "Details the cadence on which the audience's membership is computed.",
            "title": "computeCadence",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceComputeCadence"
              }
            ]
          },
          "size": {
            "description": "Object containing details about audience membership size(s).",
            "title": "size",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceSize"
              }
            ]
          },
          "options": {
            "description": "Options which should be applied when segmenting audiences.",
            "title": "options",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudienceOptionsWithLookback"
              }
            ]
          },
          "schedules": {
            "description": "List of schedules for the audience.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSchedule"
            },
            "title": "schedules"
          },
          "id": {
            "description": "Audience id.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "Space id for the audience.",
            "type": "string",
            "title": "spaceId"
          },
          "name": {
            "description": "Name of the audience.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "Description of the audience.",
            "type": "string",
            "title": "description"
          },
          "key": {
            "description": "Key for the audience.",
            "type": "string",
            "title": "key"
          },
          "enabled": {
            "description": "Enabled/disabled status for the audience.",
            "type": "boolean",
            "title": "enabled"
          },
          "definition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudienceDefinition"
              }
            ],
            "description": "Query language definition and type.",
            "title": "definition",
            "nullable": true,
            "type": "object"
          },
          "status": {
            "description": "Status for the audience.\n\nPossible values: Backfilling, Computing, Failed, Live, Awaiting Destinations, Disabled.",
            "type": "string",
            "title": "status"
          },
          "createdBy": {
            "description": "User id who created the audience.",
            "type": "string",
            "title": "createdBy"
          },
          "updatedBy": {
            "description": "User id who last updated the audience.",
            "type": "string",
            "title": "updatedBy"
          },
          "createdAt": {
            "description": "Date the audience was created.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "Date the audience was last updated.",
            "type": "string",
            "title": "updatedAt"
          },
          "audienceType": {
            "description": "Discriminator denoting the audience's product type.",
            "enum": [
              "ACCOUNTS",
              "LINKED",
              "USERS"
            ],
            "type": "string",
            "title": "audienceType"
          }
        },
        "additionalProperties": false,
        "required": [
          "audienceType",
          "computeCadence",
          "createdAt",
          "createdBy",
          "definition",
          "enabled",
          "id",
          "key",
          "name",
          "spaceId",
          "updatedAt",
          "updatedBy"
        ]
      },
      "AudienceSize": {
        "title": "AudienceSize",
        "type": "object",
        "properties": {
          "count": {
            "description": "The total audience membership count. Refer to the type field to determine the unit for this field (profiles, accounts, etc).",
            "type": "number",
            "title": "count"
          },
          "type": {
            "description": "The unit type for the count(s) being returned.",
            "enum": [
              "ACCOUNTS",
              "USERS"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "type"
        ]
      },
      "AudienceComputeCadence": {
        "title": "AudienceComputeCadence",
        "type": "object",
        "properties": {
          "type": {
            "description": "The cadence type on which the audience's membership is computed.\nIf 'BATCH', the audience is computed on a periodic basis.\nIf 'REALTIME', the audience is continously computed.",
            "enum": [
              "BATCH",
              "REALTIME"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "type"
        ]
      },
      "ListAudiencesPaginationInput": {
        "description": "Fork of Autobahn's PaginationInput. Count is limited to 200 in this fork.\n\nPagination parameters.\n\nEvery resource that returns a list of items in its `Output` object may contain a `PaginationInput` in its `Input`\nobject. Required, though some of its fields are optional.",
        "title": "ListAudiencesPaginationInput",
        "type": "object",
        "properties": {
          "cursor": {
            "description": "The page to request.\n\nAcceptable values to use here are in PaginationOutput objects, in the `current`, `next`, and `previous` keys.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "cursor"
          },
          "count": {
            "description": "The number of items to retrieve in a page, between 1 and 200.",
            "type": "number",
            "title": "count"
          }
        },
        "additionalProperties": false,
        "required": [
          "count"
        ]
      },
      "ListAudienceSearchInput": {
        "description": "Search criteria input for list audience consumers.",
        "title": "ListAudienceSearchInput",
        "type": "object",
        "properties": {
          "type": {
            "description": "Field to filter by.",
            "enum": [
              "DEFINITION",
              "KEY",
              "NAME"
            ],
            "type": "string",
            "title": "type"
          },
          "query": {
            "description": "Text to match against the selected field (max 255 characters).\nWhen searching by KEY, a prefix match is used. For all other options, a full wildcard search will be used.",
            "type": "string",
            "title": "query"
          }
        },
        "additionalProperties": false,
        "required": [
          "query",
          "type"
        ]
      },
      "GetDestinationsCatalogV1Input": {
        "description": "Contains filter parameters used for loading the Destinations public catalog.",
        "title": "GetDestinationsCatalogV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDestinationsCatalogV1Output": {
        "description": "Returns a list of all Destination catalog items contained within a given page.",
        "title": "GetDestinationsCatalogV1Output",
        "type": "object",
        "properties": {
          "destinationsCatalog": {
            "description": "All Destination catalog items contained within the requested page.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataV1"
            },
            "title": "destinationsCatalog"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destinationsCatalog",
          "pagination"
        ]
      },
      "GetDestinationMetadataV1Input": {
        "description": "Loads a Destination catalog item by id.",
        "title": "GetDestinationMetadataV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDestinationMetadataV1Output": {
        "description": "Returns a Destination catalog item.",
        "title": "GetDestinationMetadataV1Output",
        "type": "object",
        "properties": {
          "destinationMetadata": {
            "description": "The catalog item matched by id.",
            "title": "destinationMetadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destinationMetadata"
        ]
      },
      "ListFiltersFromDestinationV1Input": {
        "description": "Input for ListDestinationFiltersV1.",
        "title": "ListFiltersFromDestinationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetFilterInDestinationV1Input": {
        "description": "Input for GetDestinationFilterV1.",
        "title": "GetFilterInDestinationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveFilterFromDestinationV1Input": {
        "description": "Input for DeleteDestinationFilterV1.",
        "title": "RemoveFilterFromDestinationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DestinationFilterActionV1": {
        "description": "Represents a Destination filter action.",
        "title": "DestinationFilterActionV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The kind of Transformation to apply to any matched properties.",
            "enum": [
              "ALLOW_PROPERTIES",
              "DROP",
              "DROP_PROPERTIES",
              "SAMPLE"
            ],
            "type": "string",
            "title": "type"
          },
          "fields": {
            "description": "A dictionary of paths to object keys that this filter applies to.\n The literal string '' represents the top level of the object.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "percent": {
            "description": "A decimal between 0 and 1 used for 'sample' type events and\ninfluences the likelihood of sampling to occur.",
            "type": "number",
            "title": "percent"
          },
          "path": {
            "description": "The JSON path to a property within a payload object from which Segment generates a deterministic\nsampling rate.",
            "type": "string",
            "title": "path"
          }
        },
        "additionalProperties": false,
        "required": [
          "type"
        ]
      },
      "CreateFilterForDestinationV1Input": {
        "description": "Input for CreateDestinationFilterV1.",
        "title": "CreateFilterForDestinationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "if": {
            "description": "The filter's condition.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "Actions for the Destination filter.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          },
          "title": {
            "description": "The title of the filter.",
            "type": "string",
            "title": "title"
          },
          "description": {
            "description": "The description of the filter.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "When set to true, the Destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "additionalProperties": false,
        "required": [
          "actions",
          "enabled",
          "if",
          "sourceId",
          "title"
        ]
      },
      "PreviewDestinationFilterV1": {
        "description": "A simplified Destination filter that includes the if and actions for a DestinationFilterV1.",
        "title": "PreviewDestinationFilterV1",
        "type": "object",
        "properties": {
          "if": {
            "description": "A FQL statement which determines if the provided filter's actions will apply to the provided JSON payload.\nThe literal string \"all\" will result in this filter to all events.\nFor guidance on using FQL, see the Segment documentation site.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "The filtering action to take on events that match the \"if\" statement.\nAction types must be one of: \"drop\", \"allow_properties\", \"drop_properties\" or \"sample\".",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          }
        },
        "additionalProperties": false,
        "required": [
          "actions",
          "if"
        ]
      },
      "PreviewDestinationFilterV1Input": {
        "description": "Input of the Destination filter to preview.\nFor guidance on using FQL, see the Segment documentation site.",
        "title": "PreviewDestinationFilterV1Input",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The filter to preview.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/PreviewDestinationFilterV1"
              }
            ]
          },
          "payload": {
            "description": "The JSON payload to apply the filter to.",
            "type": "object",
            "additionalProperties": true,
            "title": "payload"
          }
        },
        "additionalProperties": false,
        "required": [
          "filter",
          "payload"
        ]
      },
      "PreviewDestinationFilterV1Output": {
        "description": "Preview output from applying the Destination filter.\nSegment modifies or nullifies payloads depending on the provided filter actions.",
        "title": "PreviewDestinationFilterV1Output",
        "type": "object",
        "properties": {
          "inputPayload": {
            "description": "The pre-filter JSON input.",
            "type": "object",
            "additionalProperties": true,
            "title": "inputPayload"
          },
          "result": {
            "description": "The filtered JSON output.",
            "title": "result",
            "nullable": true,
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "inputPayload",
          "result"
        ]
      },
      "DestinationFilterV1": {
        "description": "Represents a Destination filter.",
        "title": "DestinationFilterV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique id of this filter.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The id of the Source associated with this filter.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationId": {
            "description": "The id of the Destination associated with this filter.",
            "type": "string",
            "title": "destinationId"
          },
          "if": {
            "description": "A condition that defines whether to apply this filter to a payload.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "A list of actions this filter performs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          },
          "title": {
            "description": "A title for this filter.",
            "type": "string",
            "title": "title"
          },
          "description": {
            "description": "A description for this filter.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "When set to true, this filter is active.",
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "description": "The timestamp of this filter's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this filter's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "actions",
          "createdAt",
          "destinationId",
          "enabled",
          "id",
          "if",
          "sourceId",
          "title",
          "updatedAt"
        ]
      },
      "ListFiltersFromDestinationV1Output": {
        "description": "Output for ListDestinationFiltersV1.",
        "title": "ListFiltersFromDestinationV1Output",
        "type": "object",
        "properties": {
          "filters": {
            "description": "A list of the filters that belong to the specified Destination instance.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterV1"
            },
            "title": "filters"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filters",
          "pagination"
        ]
      },
      "GetFilterInDestinationV1Output": {
        "description": "Output for GetDestinationFiltersV1.",
        "title": "GetFilterInDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The requested Destination filter.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationFilterV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filter"
        ]
      },
      "CreateFilterForDestinationV1Output": {
        "description": "Output for CreateDestinationFiltersV1.",
        "title": "CreateFilterForDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The newly created Destination filter.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationFilterV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filter"
        ]
      },
      "RemoveFilterFromDestinationV1Output": {
        "description": "Output for DeleteDestinationFilterV1.",
        "title": "RemoveFilterFromDestinationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of delete operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateFilterForDestinationV1Input": {
        "description": "Input for UpdateDestinationFilterV1.",
        "title": "UpdateFilterForDestinationV1Input",
        "type": "object",
        "properties": {
          "if": {
            "description": "The FQL if condition to update.",
            "type": "string",
            "title": "if"
          },
          "actions": {
            "description": "Actions for this Destination filter.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationFilterActionV1"
            },
            "title": "actions"
          },
          "title": {
            "description": "The title to update.",
            "type": "string",
            "title": "title"
          },
          "description": {
            "description": "The description of this filter.",
            "type": "string",
            "title": "description",
            "nullable": true
          },
          "enabled": {
            "description": "When set to true, this Destination filter is active.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "additionalProperties": false
      },
      "UpdateFilterForDestinationV1Output": {
        "description": "Output for UpdateDestinationFilterV1.",
        "title": "UpdateFilterForDestinationV1Output",
        "type": "object",
        "properties": {
          "filter": {
            "description": "The updated Destination filter.",
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationFilterV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filter"
        ]
      },
      "DestinationMetadataV1": {
        "description": "Represents a Destination within Segment.\n\nA Destination is a target for Segment to forward data to, and represents a tool or storage Destination.",
        "title": "DestinationMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Destination metadata.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of the Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the Destination.",
            "type": "string",
            "title": "description"
          },
          "slug": {
            "description": "The slug used to identify the Destination in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "logos": {
            "description": "The Destination's logos.",
            "title": "logos",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogosBeta"
              }
            ]
          },
          "options": {
            "description": "Options configured for the Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationOptionBeta"
            },
            "title": "options"
          },
          "status": {
            "description": "Support status of the Destination.",
            "enum": [
              "DEPRECATED",
              "PRIVATE_BETA",
              "PRIVATE_BUILDING",
              "PRIVATE_SUBMITTED",
              "PUBLIC",
              "PUBLIC_BETA",
              "UNAVAILABLE"
            ],
            "type": "string",
            "title": "status"
          },
          "previousNames": {
            "description": "A list of names previously used by the Destination.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "previousNames"
          },
          "categories": {
            "description": "A list of categories with which the Destination is associated.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "categories"
          },
          "website": {
            "description": "A website URL for this Destination.",
            "type": "string",
            "title": "website"
          },
          "components": {
            "description": "A list of components this Destination provides.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataComponentV1"
            },
            "title": "components"
          },
          "supportedFeatures": {
            "description": "Features that this Destination supports.\n\nConfig API note: holds `browserUnbundling` fields.",
            "title": "supportedFeatures",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataFeaturesV1"
              }
            ]
          },
          "supportedMethods": {
            "description": "Methods that this Destination supports.\n\nConfig API note: equal to `methods`.",
            "title": "supportedMethods",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataMethodsV1"
              }
            ]
          },
          "supportedPlatforms": {
            "description": "Platforms from which the Destination receives events.\n\nConfig API note: equal to `platforms`.",
            "title": "supportedPlatforms",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataPlatformsV1"
              }
            ]
          },
          "actions": {
            "description": "Actions available for the Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataActionV1"
            },
            "title": "actions"
          },
          "presets": {
            "description": "Predefined Destination subscriptions that can optionally be applied when connecting a new instance of the Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataSubscriptionPresetV1"
            },
            "title": "presets"
          },
          "contacts": {
            "description": "Contact info for Integration Owners.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "title": "contacts"
          },
          "partnerOwned": {
            "description": "Partner Owned flag.",
            "type": "boolean",
            "title": "partnerOwned"
          },
          "supportedRegions": {
            "description": "A list of supported regions for this Destination.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "supportedRegions"
          },
          "regionEndpoints": {
            "description": "The list of regional endpoints for this Destination.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "regionEndpoints"
          },
          "multiInstanceSupportedVersion": {
            "description": "This Destination's support for multiple instance types.",
            "type": "string",
            "title": "multiInstanceSupportedVersion"
          }
        },
        "additionalProperties": false,
        "required": [
          "actions",
          "categories",
          "components",
          "description",
          "id",
          "logos",
          "name",
          "options",
          "presets",
          "previousNames",
          "slug",
          "status",
          "supportedFeatures",
          "supportedMethods",
          "supportedPlatforms",
          "website"
        ]
      },
      "Contact": {
        "description": "The contact info for Integration Owners.",
        "title": "Contact",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of this contact.",
            "type": "string",
            "title": "name"
          },
          "email": {
            "description": "Email of this contact.",
            "type": "string",
            "title": "email"
          },
          "role": {
            "description": "Role of this contact.",
            "type": "string",
            "title": "role"
          },
          "isPrimary": {
            "description": "Whether this is a primary contact.",
            "type": "boolean",
            "title": "isPrimary"
          }
        },
        "additionalProperties": false,
        "required": [
          "email"
        ]
      },
      "DestinationMetadataComponentV1": {
        "description": "Represents a component this Destination provides.",
        "title": "DestinationMetadataComponentV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The component type.",
            "enum": [
              "ANDROID",
              "BROWSER",
              "IOS",
              "SERVER"
            ],
            "type": "string",
            "title": "type"
          },
          "code": {
            "description": "Link to the repository hosting the code for this component.",
            "type": "string",
            "title": "code"
          },
          "owner": {
            "description": "The owner of this component. Either 'SEGMENT' or 'PARTNER'.",
            "enum": [
              "PARTNER",
              "SEGMENT"
            ],
            "type": "string",
            "title": "owner"
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "type"
        ]
      },
      "DestinationMetadataMethodsV1": {
        "description": "Represents methods that a given Destination supports.",
        "title": "DestinationMetadataMethodsV1",
        "type": "object",
        "properties": {
          "pageview": {
            "description": "Identifies if the Destination supports the `pageview` method.",
            "type": "boolean",
            "title": "pageview"
          },
          "identify": {
            "description": "Identifies if the Destination supports the `identify` method.",
            "type": "boolean",
            "title": "identify"
          },
          "alias": {
            "description": "Identifies if the Destination supports the `alias` method.",
            "type": "boolean",
            "title": "alias"
          },
          "track": {
            "description": "Identifies if the Destination supports the `track` method.",
            "type": "boolean",
            "title": "track"
          },
          "group": {
            "description": "Identifies if the Destination supports the `group` method.",
            "type": "boolean",
            "title": "group"
          }
        },
        "additionalProperties": false
      },
      "DestinationMetadataPlatformsV1": {
        "description": "Represents platforms that a given Destination supports.",
        "title": "DestinationMetadataPlatformsV1",
        "type": "object",
        "properties": {
          "browser": {
            "description": "Whether this Destination supports browser events.",
            "type": "boolean",
            "title": "browser"
          },
          "server": {
            "description": "Whether this Destination supports server events.",
            "type": "boolean",
            "title": "server"
          },
          "mobile": {
            "description": "Whether this Destination supports mobile events.",
            "type": "boolean",
            "title": "mobile"
          },
          "warehouse": {
            "description": "Whether this Destination supports Warehouse events.",
            "type": "boolean",
            "title": "warehouse"
          },
          "cloudAppObject": {
            "description": "Whether this Destination supports cloud app object events.",
            "type": "boolean",
            "title": "cloudAppObject"
          },
          "linkedAudiences": {
            "description": "Whether this Destination supports linked audiences.",
            "type": "boolean",
            "title": "linkedAudiences"
          }
        },
        "additionalProperties": false
      },
      "DestinationMetadataFeaturesV1": {
        "description": "Represents features that a given Destination supports.",
        "title": "DestinationMetadataFeaturesV1",
        "type": "object",
        "properties": {
          "cloudModeInstances": {
            "description": "This Destination's support level for cloud mode instances.\nThe values '0' and 'NONE', and '1' and 'SINGLE' are equivalent.",
            "enum": [
              "0",
              "1",
              "MULTIPLE",
              "NONE",
              "SINGLE"
            ],
            "type": "string",
            "title": "cloudModeInstances"
          },
          "deviceModeInstances": {
            "description": "This Destination's support level for device mode instances.\nSupport for multiple device mode instances is currently not planned.\nThe values '0' and 'NONE', and '1' and 'SINGLE' are equivalent.",
            "enum": [
              "0",
              "1",
              "NONE",
              "SINGLE"
            ],
            "type": "string",
            "title": "deviceModeInstances"
          },
          "replay": {
            "description": "Whether this Destination supports replays.",
            "type": "boolean",
            "title": "replay"
          },
          "browserUnbundling": {
            "description": "Whether this Destination supports browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundling"
          },
          "browserUnbundlingPublic": {
            "description": "Whether this Destination supports public browser unbundling.",
            "type": "boolean",
            "title": "browserUnbundlingPublic"
          }
        },
        "additionalProperties": false
      },
      "DestinationMetadataActionV1": {
        "description": "Represents an Action, a building block of behavior that can be performed by the Destination.",
        "title": "DestinationMetadataActionV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key of the action.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "A machine-readable key unique to the action definition.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "A human-readable name for the action.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A human-readable description of the action. May include Markdown.",
            "type": "string",
            "title": "description"
          },
          "platform": {
            "description": "The platform on which this action runs.",
            "enum": [
              "CLOUD",
              "MOBILE",
              "WEB"
            ],
            "type": "string",
            "title": "platform"
          },
          "hidden": {
            "description": "Whether the action should be hidden.",
            "type": "boolean",
            "title": "hidden"
          },
          "defaultTrigger": {
            "description": "The default value used as the trigger when connecting this action.",
            "type": "string",
            "title": "defaultTrigger",
            "nullable": true
          },
          "fields": {
            "description": "The fields expected in order to perform the action.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationMetadataActionFieldV1"
            },
            "title": "fields"
          }
        },
        "additionalProperties": false,
        "required": [
          "defaultTrigger",
          "description",
          "fields",
          "hidden",
          "id",
          "name",
          "platform",
          "slug"
        ]
      },
      "DestinationMetadataActionFieldV1": {
        "description": "Represents a field used in configuring an action.",
        "title": "DestinationMetadataActionFieldV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The primary key of the field.",
            "type": "string",
            "title": "id"
          },
          "sortOrder": {
            "description": "The order this particular field is (used in the UI for displaying the fields in a specified order).",
            "type": "number",
            "title": "sortOrder"
          },
          "fieldKey": {
            "description": "A unique machine-readable key for the field. Should ideally match the expected key in the action\\'s API request.",
            "type": "string",
            "title": "fieldKey"
          },
          "label": {
            "description": "A human-readable label for this value.",
            "type": "string",
            "title": "label"
          },
          "type": {
            "description": "The data type for this value.",
            "enum": [
              "BOOLEAN",
              "DATETIME",
              "HIDDEN",
              "INTEGER",
              "NUMBER",
              "OBJECT",
              "PASSWORD",
              "STRING",
              "TEXT"
            ],
            "type": "string",
            "title": "type"
          },
          "description": {
            "description": "A human-readable description of this value. You can use Markdown.",
            "type": "string",
            "title": "description"
          },
          "placeholder": {
            "description": "An example value displayed but not saved.",
            "type": "string",
            "title": "placeholder"
          },
          "defaultValue": {
            "description": "A default value that is saved the first time an action is created.",
            "title": "defaultValue"
          },
          "required": {
            "description": "Whether this field is required.",
            "type": "boolean",
            "title": "required"
          },
          "multiple": {
            "description": "Whether a user can provide multiples of this field.",
            "type": "boolean",
            "title": "multiple"
          },
          "choices": {
            "description": "A list of machine-readable value/label pairs to populate a static dropdown.",
            "title": "choices"
          },
          "dynamic": {
            "description": "Whether this field should execute a dynamic request to fetch choices to populate a dropdown. When true, `choices` is ignored.",
            "type": "boolean",
            "title": "dynamic"
          },
          "allowNull": {
            "description": "Whether this field allows null values.",
            "type": "boolean",
            "title": "allowNull"
          },
          "hidden": {
            "description": "Whether the action field should be hidden or not.",
            "type": "boolean",
            "title": "hidden"
          }
        },
        "additionalProperties": false,
        "required": [
          "allowNull",
          "description",
          "dynamic",
          "fieldKey",
          "id",
          "label",
          "multiple",
          "required",
          "sortOrder",
          "type"
        ]
      },
      "DestinationMetadataSubscriptionPresetV1": {
        "description": "Represents a set of defaults for a Destination subscription.",
        "title": "DestinationMetadataSubscriptionPresetV1",
        "type": "object",
        "properties": {
          "actionId": {
            "description": "The unique identifier for the Destination Action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "name": {
            "description": "The name of the subscription.",
            "type": "string",
            "title": "name"
          },
          "fields": {
            "description": "The default settings for action fields.",
            "type": "object",
            "additionalProperties": true,
            "title": "fields"
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger an action. See https://segment.com/docs/config-api/fql/ for more information regarding Segment's Filter Query Language (FQL).",
            "type": "string",
            "title": "trigger"
          }
        },
        "additionalProperties": false,
        "required": [
          "actionId",
          "fields",
          "name",
          "trigger"
        ]
      },
      "DestinationSubscription": {
        "title": "DestinationSubscription",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the subscription.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the subscription.",
            "type": "string",
            "title": "name"
          },
          "actionId": {
            "description": "The unique identifier for the Destination action to trigger.",
            "type": "string",
            "title": "actionId"
          },
          "actionSlug": {
            "description": "The URL-friendly key for the associated Destination action.",
            "type": "string",
            "title": "actionSlug"
          },
          "destinationId": {
            "description": "The associated Destination instance id.",
            "type": "string",
            "title": "destinationId"
          },
          "enabled": {
            "description": "Is the subscription enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The customer settings for action fields.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionFields"
              }
            ]
          },
          "trigger": {
            "description": "FQL string that describes what events should trigger a Destination action.",
            "type": "string",
            "title": "trigger"
          },
          "modelId": {
            "description": "The unique identifier for the linked ReverseETLModel, if this part of a\nReverse ETL connection.",
            "type": "string",
            "title": "modelId"
          },
          "reverseETLSchedule": {
            "description": "The schedule for the Reverse ETL subscription.",
            "title": "reverseETLSchedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlScheduleDefinition"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "actionId",
          "actionSlug",
          "destinationId",
          "enabled",
          "id",
          "name",
          "settings",
          "trigger"
        ]
      },
      "DestinationSubscriptionFields": {
        "description": "Represents settings used to configure an action subscription.",
        "title": "DestinationSubscriptionFields",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSubscriptionsFromDestinationAlphaInput": {
        "description": "Input for ListDestinationSubscriptionsAlpha.",
        "title": "ListSubscriptionsFromDestinationAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSubscriptionsFromDestinationAlphaOutput": {
        "description": "Output for ListDestinationSubscriptionsAlpha.",
        "title": "ListSubscriptionsFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "A list of Destination subscriptions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationSubscription"
            },
            "title": "subscriptions"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptions"
        ]
      },
      "GetSubscriptionFromDestinationAlphaInput": {
        "description": "Fetches a Destination subscription.",
        "title": "GetSubscriptionFromDestinationAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetSubscriptionFromDestinationAlphaOutput": {
        "description": "Returns a subscription for a given subscription id.",
        "title": "GetSubscriptionFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscription": {
            "description": "The Destination subscription.",
            "title": "subscription",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscription"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "subscription"
        ]
      },
      "CreateDestinationSubscriptionAlphaInput": {
        "description": "The basic input parameters for creating a Destination subscription.",
        "title": "CreateDestinationSubscriptionAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "A user-defined name for the subscription.",
            "type": "string",
            "title": "name"
          },
          "actionId": {
            "description": "The associated action id the subscription should trigger.",
            "type": "string",
            "title": "actionId"
          },
          "trigger": {
            "description": "The FQL statement.",
            "type": "string",
            "title": "trigger"
          },
          "enabled": {
            "description": "Is the subscription enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The fields used for configuring this action.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionFields"
              }
            ]
          },
          "modelId": {
            "description": "When creating a Reverse ETL connection, indicates the Model being used to\nextract data.",
            "type": "string",
            "title": "modelId"
          }
        },
        "additionalProperties": false,
        "required": [
          "actionId",
          "enabled",
          "name",
          "trigger"
        ]
      },
      "CreateDestinationSubscriptionAlphaOutput": {
        "description": "Returns a newly created Destination subscription.",
        "title": "CreateDestinationSubscriptionAlphaOutput",
        "type": "object",
        "properties": {
          "destinationSubscription": {
            "description": "The Destination subscription.",
            "title": "destinationSubscription",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscription"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destinationSubscription"
        ]
      },
      "DestinationSubscriptionUpdateInput": {
        "description": "The input parameters for updating a Destination subscription.",
        "title": "DestinationSubscriptionUpdateInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The user-defined name for the subscription.",
            "type": "string",
            "title": "name"
          },
          "trigger": {
            "description": "The fql statement.",
            "type": "string",
            "title": "trigger"
          },
          "enabled": {
            "description": "Is the subscription enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The fields used for configuring this action.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionFields"
              }
            ]
          },
          "reverseETLModelId": {
            "description": "(Reverse ETL only) The reverse ETL model to attach this subscription to.",
            "type": "string",
            "title": "reverseETLModelId"
          },
          "reverseETLSchedule": {
            "description": "(Reverse ETL only) The schedule for the subscription being attached to ReverseETL model.\nSchedule configuration is at https://docs.segmentapis.com/tag/Reverse-ETL#section/Sync-schedule-JSON-configuration.",
            "title": "reverseETLSchedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlScheduleDefinition"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "UpdateSubscriptionForDestinationAlphaInput": {
        "description": "The basic input parameters for updating a Destination subscription.",
        "title": "UpdateSubscriptionForDestinationAlphaInput",
        "type": "object",
        "properties": {
          "input": {
            "description": "A set of valid Destination input params required for updating.",
            "title": "input",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscriptionUpdateInput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "input"
        ]
      },
      "UpdateSubscriptionForDestinationAlphaOutput": {
        "description": "Returns the updated Destination subscription.",
        "title": "UpdateSubscriptionForDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "subscription": {
            "description": "The Destination subscription.",
            "title": "subscription",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationSubscription"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "subscription"
        ]
      },
      "RemoveSubscriptionFromDestinationAlphaInput": {
        "description": "Deletes a Destination by id.",
        "title": "RemoveSubscriptionFromDestinationAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveSubscriptionFromDestinationAlphaOutput": {
        "description": "Returns a Destination deletion flag.",
        "title": "RemoveSubscriptionFromDestinationAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListDeliveryMetricsSummaryFromDestinationBetaInput": {
        "description": "Input to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationBetaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListDeliveryMetricsSummaryFromDestinationBetaOutput": {
        "description": "Output to retrieve event delivery metrics summary for a Destination.",
        "title": "ListDeliveryMetricsSummaryFromDestinationBetaOutput",
        "type": "object",
        "properties": {
          "deliveryMetricsSummary": {
            "description": "The delivery metrics summary returned.",
            "title": "deliveryMetricsSummary",
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryMetricsSummaryBeta"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "deliveryMetricsSummary"
        ]
      },
      "DeliveryMetricsSummaryBeta": {
        "description": "Defines the summary of delivery metrics for a Destination.",
        "title": "DeliveryMetricsSummaryBeta",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The Destination metadata id.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "metrics": {
            "description": "The summary of event delivery metrics for the requested Destination.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricBeta"
            },
            "title": "metrics"
          }
        },
        "additionalProperties": false,
        "required": [
          "destinationMetadataId",
          "metrics",
          "sourceId"
        ]
      },
      "MetricBeta": {
        "description": "The event delivery metric.",
        "title": "MetricBeta",
        "type": "object",
        "properties": {
          "metricName": {
            "description": "The name of the metric.",
            "type": "string",
            "title": "metricName"
          },
          "total": {
            "description": "Number of occurrences of the metric.",
            "type": "number",
            "title": "total"
          },
          "breakdown": {
            "description": "Breakdown of metrics within a metric.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakdownBeta"
            },
            "title": "breakdown"
          }
        },
        "additionalProperties": false,
        "required": [
          "metricName",
          "total"
        ]
      },
      "BreakdownBeta": {
        "description": "The breakdown of a metric.",
        "title": "BreakdownBeta",
        "type": "object",
        "properties": {
          "metricName": {
            "description": "The name of the metric.",
            "type": "string",
            "title": "metricName"
          },
          "value": {
            "description": "Number of occurrences of the metric.",
            "type": "number",
            "title": "value"
          }
        },
        "additionalProperties": false,
        "required": [
          "metricName",
          "value"
        ]
      },
      "DestinationV1": {
        "description": "Business tools or apps that you can connect to the data flowing through Segment.\n\nThis is equal to the Destination object in Config API, with the following fields omitted:\n- catalogId\n- createTime\n- updateTime\n- connectionMode.",
        "title": "DestinationV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this instance of a Destination.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this instance of a Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Whether this instance of a Destination receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadata": {
            "description": "The metadata of the Destination of which this Destination is an instance of. For example, Google Analytics or Amplitude.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationMetadataV1"
              }
            ]
          },
          "sourceId": {
            "description": "The id of a Source connected to this instance of a Destination.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The collection of settings associated with a Destination.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "metadata",
          "settings",
          "sourceId"
        ]
      },
      "ListDestinationsV1Input": {
        "description": "Loads all Destinations connected to the current Workspace.",
        "title": "ListDestinationsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListDestinationsV1Output": {
        "description": "Returns all Destinations connected to the current Workspace.",
        "title": "ListDestinationsV1Output",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "The list that contains the Destinations connected to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationV1"
            },
            "title": "destinations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destinations",
          "pagination"
        ]
      },
      "GetDestinationV1Input": {
        "description": "Looks up a single Destination by its id.",
        "title": "GetDestinationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDestinationV1Output": {
        "description": "Returns a single Destination by its id.",
        "title": "GetDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "description": "The Destination looked up.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destination"
        ]
      },
      "DeleteDestinationV1Input": {
        "description": "Deletes a single Destination by its id.",
        "title": "DeleteDestinationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteDestinationV1Output": {
        "description": "Returns the status of a Destination deletion.",
        "title": "DeleteDestinationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Warehouse deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateDestinationV1Output": {
        "description": "Returns the updated Destination.",
        "title": "UpdateDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "description": "The updated Destination.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destination"
        ]
      },
      "UpdateDestinationV1Input": {
        "description": "Updates a single Destination by its id.",
        "title": "UpdateDestinationV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "Defines the display name of the Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name",
            "nullable": true
          },
          "enabled": {
            "description": "Whether this Destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "An optional object that contains settings for the Destination based on the \"required\" and \"advanced\" settings present\nin the Destination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "additionalProperties": false
      },
      "CreateDestinationV1Output": {
        "description": "Creates a new Destination.",
        "title": "CreateDestinationV1Output",
        "type": "object",
        "properties": {
          "destination": {
            "description": "The created Destination.",
            "title": "destination",
            "allOf": [
              {
                "$ref": "#/components/schemas/DestinationV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destination"
        ]
      },
      "CreateDestinationV1Input": {
        "description": "Creates a new Destination.",
        "title": "CreateDestinationV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source to connect to this Destination instance.\n\nConfig API note: analogous to `parent`.",
            "type": "string",
            "title": "sourceId"
          },
          "metadataId": {
            "description": "The id of the metadata to link to the new Destination.",
            "type": "string",
            "title": "metadataId"
          },
          "enabled": {
            "description": "Whether this Destination should receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the Destination.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for the Destination based on the \"required\" and \"advanced\" settings present in the\nDestination metadata.\n\nConfig API note: equal to `config`.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "additionalProperties": false,
        "required": [
          "metadataId",
          "settings",
          "sourceId"
        ]
      },
      "EchoAlphaInput": {
        "description": "Echo request with options.",
        "title": "EchoAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "EchoAlphaOutput": {
        "description": "Echo response.",
        "title": "EchoAlphaOutput",
        "type": "object",
        "properties": {
          "method": {
            "description": "The HTTP method used for this round-trip.\n\nCurrently, this endpoint supports only `get` and `post` methods.",
            "enum": [
              "get",
              "post"
            ],
            "type": "string",
            "title": "method"
          },
          "message": {
            "description": "The string passed in the `message` input field.",
            "type": "string",
            "title": "message"
          },
          "headers": {
            "description": "The request's HTTP headers.",
            "type": "object",
            "additionalProperties": true,
            "title": "headers"
          }
        },
        "additionalProperties": false,
        "required": [
          "headers",
          "message",
          "method"
        ]
      },
      "EchoV1Input": {
        "description": "Echo request with options.",
        "title": "EchoV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "EchoV1Output": {
        "description": "Echo response.",
        "title": "EchoV1Output",
        "type": "object",
        "properties": {
          "method": {
            "description": "The HTTP method used for this round-trip.\n\nCurrently, this endpoint supports only `get` and `post` methods.",
            "enum": [
              "get",
              "post"
            ],
            "type": "string",
            "title": "method"
          },
          "message": {
            "description": "The string passed in the `message` input field.",
            "type": "string",
            "title": "message"
          },
          "headers": {
            "description": "The request's HTTP headers.",
            "type": "object",
            "additionalProperties": true,
            "title": "headers"
          }
        },
        "additionalProperties": false,
        "required": [
          "headers",
          "message",
          "method"
        ]
      },
      "GenerateUploadURLForEdgeFunctionsAlphaInput": {
        "description": "Input for GenerateSignedUrl.",
        "title": "GenerateUploadURLForEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GenerateUploadURLForEdgeFunctionsAlphaOutput": {
        "description": "Output for GenerateSignedUrl.",
        "title": "GenerateUploadURLForEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "uploadURL": {
            "description": "A temporary URL that can be used to upload your Edge Functions bundle. Expires in 15 minutes.",
            "type": "string",
            "title": "uploadURL"
          }
        },
        "additionalProperties": false,
        "required": [
          "uploadURL"
        ]
      },
      "CreateEdgeFunctionsAlphaInput": {
        "description": "Input for CreateEdgeFunctions.",
        "title": "CreateEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {
          "uploadURL": {
            "description": "The id of the Source associated with this Edge Function.",
            "type": "string",
            "title": "uploadURL"
          }
        },
        "additionalProperties": false,
        "required": [
          "uploadURL"
        ]
      },
      "CreateEdgeFunctionsAlphaOutput": {
        "description": "Output for CreateEdgeFunctions.",
        "title": "CreateEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "description": "The created Edge Function.",
            "title": "edgeFunctions",
            "allOf": [
              {
                "$ref": "#/components/schemas/EdgeFunctionsAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "edgeFunctions"
        ]
      },
      "GetLatestFromEdgeFunctionsAlphaInput": {
        "description": "Input for GetLatestFromEdgeFunctions.",
        "title": "GetLatestFromEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetLatestFromEdgeFunctionsAlphaOutput": {
        "description": "Output for GetLatestFromEdgeFunctions.",
        "title": "GetLatestFromEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "description": "The latest version of Edge Function bundle.",
            "title": "edgeFunctions",
            "allOf": [
              {
                "$ref": "#/components/schemas/EdgeFunctionsAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "edgeFunctions"
        ]
      },
      "DisableEdgeFunctionsAlphaInput": {
        "description": "Input for DisableEdgeFunctions.",
        "title": "DisableEdgeFunctionsAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DisableEdgeFunctionsAlphaOutput": {
        "description": "Output for DisableEdgeFunctions.",
        "title": "DisableEdgeFunctionsAlphaOutput",
        "type": "object",
        "properties": {
          "edgeFunctions": {
            "description": "The latest version of Edge Function bundle.",
            "title": "edgeFunctions",
            "allOf": [
              {
                "$ref": "#/components/schemas/EdgeFunctionsAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "edgeFunctions"
        ]
      },
      "EdgeFunctionsAlpha": {
        "description": "Represents an Edge Function bundle.",
        "title": "EdgeFunctionsAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The Edge Function id.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The Source id.",
            "type": "string",
            "title": "sourceId"
          },
          "createdAt": {
            "description": "Creation date.",
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "description": "Creating user's id.",
            "type": "string",
            "title": "createdBy"
          },
          "downloadURL": {
            "description": "The CDN URL that can be used to fetch your latest EdgeFunctions bundle.",
            "type": "string",
            "title": "downloadURL"
          },
          "version": {
            "description": "Revision number associated with the latest Edge Function.",
            "type": "number",
            "title": "version"
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "createdBy",
          "downloadURL",
          "id",
          "sourceId",
          "version"
        ]
      },
      "ListFiltersPaginationInput": {
        "description": "Pagination for list filters.",
        "title": "ListFiltersPaginationInput",
        "type": "object",
        "properties": {
          "cursor": {
            "description": "The offset.",
            "type": "number",
            "title": "cursor"
          },
          "count": {
            "description": "The number of items to retrieve in a page, between 1 and 10.",
            "type": "number",
            "title": "count"
          }
        },
        "additionalProperties": false,
        "required": [
          "count"
        ]
      },
      "ListFiltersPaginationOutput": {
        "description": "Pagination for list filters.",
        "title": "ListFiltersPaginationOutput",
        "type": "object",
        "properties": {
          "current": {
            "description": "Current.",
            "type": "number",
            "title": "current"
          },
          "next": {
            "description": "Next.",
            "type": "number",
            "title": "next"
          },
          "totalEntries": {
            "description": "Total entries.",
            "type": "number",
            "title": "totalEntries"
          }
        },
        "additionalProperties": false
      },
      "CreateFilterForSpaceInput": {
        "description": "Input for CreateFilter.",
        "title": "CreateFilterForSpaceInput",
        "type": "object",
        "properties": {
          "integrationId": {
            "description": "The Space id to filter on.",
            "type": "string",
            "title": "integrationId"
          },
          "enabled": {
            "description": "Whether the filter is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "The name of the filter.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the filter.",
            "type": "string",
            "title": "description"
          },
          "if": {
            "description": "The \"if\" statement for a filter.",
            "type": "string",
            "title": "if"
          },
          "drop": {
            "description": "Whether the event is dropped.",
            "type": "boolean",
            "title": "drop"
          }
        },
        "additionalProperties": false,
        "required": [
          "if",
          "integrationId",
          "name"
        ]
      },
      "CreateFilterForSpaceOutput": {
        "description": "Output for CreateFilter.",
        "title": "CreateFilterForSpaceOutput",
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/Filter"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filter"
        ]
      },
      "ListFiltersForSpaceInput": {
        "description": "Input for ListFiltersByIntegrationId.",
        "title": "ListFiltersForSpaceInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListFiltersForSpaceOutput": {
        "description": "Output for ListFiltersByIntegrationId.",
        "title": "ListFiltersForSpaceOutput",
        "type": "object",
        "properties": {
          "filters": {
            "description": "Filter output.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            },
            "title": "filters"
          },
          "pagination": {
            "description": "Pagination parameters.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/ListFiltersPaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "GetFilterByIdInput": {
        "description": "Input for GetFilterById.",
        "title": "GetFilterByIdInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetFilterByIdOutput": {
        "description": "Output for GetFilterById.",
        "title": "GetFilterByIdOutput",
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/Filter"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filter"
        ]
      },
      "UpdateFilterByIdInput": {
        "description": "Input for UpdateFilterById.",
        "title": "UpdateFilterByIdInput",
        "type": "object",
        "properties": {
          "integrationId": {
            "description": "The Integration id of the resource.",
            "type": "string",
            "title": "integrationId"
          },
          "enabled": {
            "description": "Whether the filter is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "The name of the filter.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the filter.",
            "type": "string",
            "title": "description"
          },
          "if": {
            "description": "The \"if\" statement for a filter.",
            "type": "string",
            "title": "if"
          },
          "drop": {
            "description": "Whether the event is dropped.",
            "type": "boolean",
            "title": "drop"
          }
        },
        "additionalProperties": false,
        "required": [
          "integrationId"
        ]
      },
      "UpdateFilterByIdOutput": {
        "description": "Output for UpdateFilterById.",
        "title": "UpdateFilterByIdOutput",
        "type": "object",
        "properties": {
          "filter": {
            "title": "filter",
            "allOf": [
              {
                "$ref": "#/components/schemas/Filter"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "filter"
        ]
      },
      "DeleteFilterByIdInput": {
        "description": "Input for DeleteFilterById.",
        "title": "DeleteFilterByIdInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteFilterByIdOutput": {
        "description": "Output for DeleteFilterById.",
        "title": "DeleteFilterByIdOutput",
        "type": "object",
        "properties": {
          "deleted": {
            "description": "Filter deleted by filter id.",
            "type": "boolean",
            "title": "deleted"
          }
        },
        "additionalProperties": false,
        "required": [
          "deleted"
        ]
      },
      "Filter": {
        "description": "Filter output.",
        "title": "Filter",
        "type": "object",
        "properties": {
          "id": {
            "description": "The newly created filter id.",
            "type": "string",
            "title": "id"
          },
          "workspaceId": {
            "description": "The Workspace id to create the filter.",
            "type": "string",
            "title": "workspaceId"
          },
          "integrationId": {
            "description": "The Integration id of the resource.",
            "type": "string",
            "title": "integrationId"
          },
          "enabled": {
            "description": "Whether the filter is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "The name of the filter.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The description of the filter.",
            "type": "string",
            "title": "description"
          },
          "if": {
            "description": "The \"if\" statement for a filter.",
            "type": "string",
            "title": "if"
          },
          "drop": {
            "description": "Whether the event is dropped.",
            "type": "boolean",
            "title": "drop"
          },
          "createdAt": {
            "description": "The timestamp of this filter's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this filter's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "id",
          "integrationId",
          "updatedAt",
          "workspaceId"
        ]
      },
      "ListFunctionVersionsAlphaInput": {
        "description": "Lists all versions of a Function.",
        "title": "ListFunctionVersionsAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListFunctionVersionsAlphaOutput": {
        "description": "Lists Versions of a Function.",
        "title": "ListFunctionVersionsAlphaOutput",
        "type": "object",
        "properties": {
          "versions": {
            "description": "An array of Functions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Version"
            },
            "title": "versions"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "versions"
        ]
      },
      "GetFunctionVersionAlphaInput": {
        "description": "Gets a Function version.",
        "title": "GetFunctionVersionAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetFunctionVersionAlphaOutput": {
        "description": "Get Function version output.",
        "title": "GetFunctionVersionAlphaOutput",
        "type": "object",
        "properties": {
          "version": {
            "description": "Functions version.",
            "title": "version",
            "allOf": [
              {
                "$ref": "#/components/schemas/Version"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "version"
        ]
      },
      "RestoreFunctionVersionAlphaInput": {
        "description": "Restore a given Function version.",
        "title": "RestoreFunctionVersionAlphaInput",
        "type": "object",
        "properties": {
          "versionId": {
            "description": "An identifier for this version.",
            "type": "string",
            "title": "versionId"
          }
        },
        "additionalProperties": false,
        "required": [
          "versionId"
        ]
      },
      "RestoreFunctionVersionAlphaOutput": {
        "description": "Restore version output.",
        "title": "RestoreFunctionVersionAlphaOutput",
        "type": "object",
        "properties": {
          "version": {
            "description": "Restored version.",
            "title": "version",
            "allOf": [
              {
                "$ref": "#/components/schemas/Version"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "version"
        ]
      },
      "InsertFunctionInstanceAlpha": {
        "title": "InsertFunctionInstanceAlpha",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "name": {
            "type": "string",
            "title": "name"
          },
          "integrationId": {
            "type": "string",
            "title": "integrationId"
          },
          "classId": {
            "type": "string",
            "title": "classId"
          },
          "enabled": {
            "type": "boolean",
            "title": "enabled"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "type": "string",
            "title": "updatedAt"
          },
          "settings": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "title": "settings"
          },
          "encryptedSettings": {
            "type": "object",
            "properties": {},
            "additionalProperties": true,
            "title": "encryptedSettings"
          }
        },
        "additionalProperties": false,
        "required": [
          "classId",
          "createdAt",
          "enabled",
          "encryptedSettings",
          "id",
          "integrationId",
          "settings",
          "updatedAt"
        ]
      },
      "CreateInsertFunctionInstanceAlphaInput": {
        "description": "Creates an insert Function instance.",
        "title": "CreateInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {
          "functionId": {
            "description": "Insert Function id to which this instance is associated. \nNote: Remove the ifnd_/ifns_ prefix from the id.",
            "type": "string",
            "title": "functionId"
          },
          "integrationId": {
            "description": "The Source or Destination id to be connected.",
            "type": "string",
            "title": "integrationId"
          },
          "enabled": {
            "description": "Whether this insert Function instance should be enabled for the Destination.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the insert Function instance.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for this insert Function instance based on the settings present in the\ninsert Function class.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "additionalProperties": false,
        "required": [
          "functionId",
          "integrationId",
          "name",
          "settings"
        ]
      },
      "CreateInsertFunctionInstanceAlphaOutput": {
        "description": "Creates an insert Function instance.",
        "title": "CreateInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "insertFunctionInstance": {
            "description": "The created instance.",
            "title": "insertFunctionInstance",
            "allOf": [
              {
                "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "insertFunctionInstance"
        ]
      },
      "ListInsertFunctionInstancesAlphaInput": {
        "description": "List all insert Function instances connected to the insert Function.",
        "title": "ListInsertFunctionInstancesAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListInsertFunctionInstancesAlphaOutput": {
        "description": "Returns a list of insert Function instances connected to the insert Function.",
        "title": "ListInsertFunctionInstancesAlphaOutput",
        "type": "object",
        "properties": {
          "instances": {
            "description": "All insert Function instances found.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
            },
            "title": "instances"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "instances",
          "pagination"
        ]
      },
      "UpdateInsertFunctionInstanceAlphaInput": {
        "description": "Updates an insert Function instance.",
        "title": "UpdateInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether this insert Function instance should be enabled for the Destination.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "Defines the display name of the insert Function instance.",
            "type": "string",
            "title": "name"
          },
          "settings": {
            "description": "An object that contains settings for this insert Function instance based on the settings present in the\ninsert Function class.",
            "type": "object",
            "additionalProperties": true,
            "title": "settings"
          }
        },
        "additionalProperties": false,
        "required": [
          "settings"
        ]
      },
      "UpdateInsertFunctionInstanceAlphaOutput": {
        "description": "Returns the updated insert Function instance.",
        "title": "UpdateInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "insertFunctionInstance": {
            "description": "The updated instance.",
            "title": "insertFunctionInstance",
            "allOf": [
              {
                "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "insertFunctionInstance"
        ]
      },
      "GetInsertFunctionInstanceAlphaInput": {
        "description": "Gets an insert Function instance.",
        "title": "GetInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetInsertFunctionInstanceAlphaOutput": {
        "description": "Returns the insert Function instance.",
        "title": "GetInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "insertFunctionInstance": {
            "description": "The insert Function instance.",
            "title": "insertFunctionInstance",
            "allOf": [
              {
                "$ref": "#/components/schemas/InsertFunctionInstanceAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "insertFunctionInstance"
        ]
      },
      "DeleteInsertFunctionInstanceAlphaInput": {
        "description": "Delete an insert Function instance.",
        "title": "DeleteInsertFunctionInstanceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteInsertFunctionInstanceAlphaOutput": {
        "description": "Delete an insert Function instance.",
        "title": "DeleteInsertFunctionInstanceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "FunctionSettingV1": {
        "title": "FunctionSettingV1",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of this Function Setting.",
            "type": "string",
            "title": "name"
          },
          "label": {
            "description": "The label for this Function Setting.",
            "type": "string",
            "title": "label"
          },
          "description": {
            "description": "A description of this Function Setting.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The type of this Function Setting.",
            "enum": [
              "ARRAY",
              "BOOLEAN",
              "STRING",
              "TEXT_MAP"
            ],
            "type": "string",
            "title": "type"
          },
          "required": {
            "description": "Whether this Function Setting is required.",
            "type": "boolean",
            "title": "required"
          },
          "sensitive": {
            "description": "Whether this Function Setting contains sensitive information.",
            "type": "boolean",
            "title": "sensitive"
          }
        },
        "additionalProperties": false,
        "required": [
          "description",
          "label",
          "name",
          "required",
          "sensitive",
          "type"
        ]
      },
      "FunctionV1": {
        "description": "Represents a Function.",
        "title": "FunctionV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this Function.",
            "type": "string",
            "title": "id"
          },
          "resourceType": {
            "description": "The Function type.\n\nConfig API note: equal to `type`.",
            "enum": [
              "DESTINATION",
              "INSERT_DESTINATION",
              "INSERT_SOURCE",
              "SOURCE"
            ],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": {
            "description": "The time this Function was created.",
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "description": "The id of the user who created this Function.",
            "type": "string",
            "title": "createdBy"
          },
          "code": {
            "description": "The Function code.",
            "type": "string",
            "title": "code"
          },
          "deployedAt": {
            "description": "The time of this Function's last deployment.",
            "type": "string",
            "title": "deployedAt",
            "nullable": true
          },
          "settings": {
            "description": "The list of settings for this Function.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSettingV1"
            },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this Function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": {
            "description": "The URL of the logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "previewWebhookUrl": {
            "description": "The preview webhook URL for this Function.",
            "type": "string",
            "title": "previewWebhookUrl"
          },
          "batchMaxCount": {
            "description": "The max count of the batch for this Function.",
            "type": "number",
            "title": "batchMaxCount"
          },
          "catalogId": {
            "description": "The catalog id of this Function.",
            "type": "string",
            "title": "catalogId"
          },
          "isLatestVersion": {
            "description": "Whether the deployment of this Function is the latest version.",
            "type": "boolean",
            "title": "isLatestVersion"
          }
        },
        "additionalProperties": false
      },
      "ListFunctionItemV1": {
        "description": "Represents a Function in a list.",
        "title": "ListFunctionItemV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this Function.",
            "type": "string",
            "title": "id"
          },
          "resourceType": {
            "description": "The Function type.\n\nConfig API note: equal to `type`.",
            "enum": [
              "DESTINATION",
              "INSERT_DESTINATION",
              "INSERT_SOURCE",
              "SOURCE"
            ],
            "type": "string",
            "title": "resourceType"
          },
          "createdAt": {
            "description": "The time this Function was created.",
            "type": "string",
            "title": "createdAt"
          },
          "createdBy": {
            "description": "The id of the user who created this Function.",
            "type": "string",
            "title": "createdBy"
          },
          "displayName": {
            "description": "A display name for this Function.",
            "type": "string",
            "title": "displayName"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          },
          "logoUrl": {
            "description": "The URL of the logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "catalogId": {
            "description": "The catalog id of this Function.",
            "type": "string",
            "title": "catalogId"
          }
        },
        "additionalProperties": false
      },
      "GetFunctionV1Input": {
        "description": "Gets a single Function.",
        "title": "GetFunctionV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetFunctionV1Output": {
        "description": "Gets a single Function.",
        "title": "GetFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionV1"
              }
            ],
            "description": "A Function object.",
            "title": "function",
            "nullable": true,
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "function"
        ]
      },
      "ListFunctionsV1Input": {
        "description": "Lists all Functions in a Workspace.",
        "title": "ListFunctionsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListFunctionsV1Output": {
        "description": "Lists Functions in a Workspace.",
        "title": "ListFunctionsV1Output",
        "type": "object",
        "properties": {
          "functions": {
            "description": "An array of Functions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListFunctionItemV1"
            },
            "title": "functions"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "functions",
          "pagination"
        ]
      },
      "CreateFunctionV1Input": {
        "description": "Creates a Function.",
        "title": "CreateFunctionV1Input",
        "type": "object",
        "properties": {
          "code": {
            "description": "The Function code.",
            "type": "string",
            "title": "code"
          },
          "settings": {
            "description": "The list of settings for this Function.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSettingV1"
            },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this Function.\n\nNote that Destination Functions append the Workspace to the display name.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": {
            "description": "The URL of the logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "resourceType": {
            "description": "The Function type.\n\nConfig API note: equal to `type`.",
            "enum": [
              "DESTINATION",
              "INSERT_DESTINATION",
              "INSERT_SOURCE",
              "SOURCE"
            ],
            "type": "string",
            "title": "resourceType"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "displayName",
          "resourceType"
        ]
      },
      "CreateFunctionV1Output": {
        "description": "Create a Function.",
        "title": "CreateFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "description": "A Function object.",
            "title": "function",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "function"
        ]
      },
      "DeleteFunctionV1Input": {
        "description": "Delete a single Function.",
        "title": "DeleteFunctionV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteFunctionV1Output": {
        "description": "Delete a single Function.",
        "title": "DeleteFunctionV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateFunctionV1Input": {
        "description": "Update a Function.",
        "title": "UpdateFunctionV1Input",
        "type": "object",
        "properties": {
          "code": {
            "description": "The Function code.",
            "type": "string",
            "title": "code"
          },
          "settings": {
            "description": "The list of settings for this Function.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionSettingV1"
            },
            "title": "settings"
          },
          "displayName": {
            "description": "A display name for this Function.",
            "type": "string",
            "title": "displayName"
          },
          "logoUrl": {
            "description": "A logo for this Function.",
            "type": "string",
            "title": "logoUrl"
          },
          "description": {
            "description": "A description for this Function.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false
      },
      "UpdateFunctionV1Output": {
        "description": "Create a Function.",
        "title": "UpdateFunctionV1Output",
        "type": "object",
        "properties": {
          "function": {
            "description": "The updated Function object.",
            "title": "function",
            "allOf": [
              {
                "$ref": "#/components/schemas/FunctionV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "function"
        ]
      },
      "CreateFunctionDeploymentV1Input": {
        "description": "Updates the deployment for a Source Function instance.",
        "title": "CreateFunctionDeploymentV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "CreateFunctionDeploymentV1Output": {
        "description": "Updates the deployment for a Source Function instance.",
        "title": "CreateFunctionDeploymentV1Output",
        "type": "object",
        "properties": {
          "functionDeployment": {
            "description": "The status of the operation.",
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "SUCCESS"
                ],
                "title": "status"
              }
            },
            "additionalProperties": false,
            "required": [
              "status"
            ],
            "title": "functionDeployment"
          }
        },
        "additionalProperties": false,
        "required": [
          "functionDeployment"
        ]
      },
      "Version": {
        "description": "Represents a Function Version in a list.",
        "title": "Version",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this version.",
            "type": "string",
            "title": "id"
          },
          "author": {
            "description": "Author of this version.",
            "type": "string",
            "title": "author"
          },
          "code": {
            "description": "Source code of this version.",
            "type": "string",
            "title": "code"
          },
          "isDeployed": {
            "description": "The deployed status of this version.",
            "type": "boolean",
            "title": "isDeployed"
          },
          "createdAt": {
            "description": "The time of this Version's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The time of this Version's latest update.",
            "type": "string",
            "title": "updatedAt"
          },
          "deployedAt": {
            "description": "The time of this Version's last deployment.",
            "type": "string",
            "title": "deployedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "id"
        ]
      },
      "HandleWebhookInput": {
        "description": "Function webhook input.",
        "title": "HandleWebhookInput",
        "type": "object",
        "properties": {
          "w": {
            "description": "The Workspace id.",
            "type": "string",
            "title": "w"
          },
          "n": {
            "description": "The webhook nonce.",
            "type": "string",
            "title": "n"
          },
          "t": {
            "description": "The webhook timestamp.",
            "type": "string",
            "title": "t"
          },
          "s": {
            "description": "The webhook signature.",
            "type": "string",
            "title": "s"
          }
        },
        "additionalProperties": false,
        "required": [
          "n",
          "s",
          "t",
          "w"
        ]
      },
      "HandleWebhookOutput": {
        "description": "Function webhook output status.",
        "title": "HandleWebhookOutput",
        "type": "object",
        "properties": {
          "statusCode": {
            "description": "The http status code.",
            "type": "number",
            "title": "statusCode"
          },
          "success": {
            "description": "The status of the operation.",
            "type": "boolean",
            "title": "success"
          }
        },
        "additionalProperties": false,
        "required": [
          "statusCode",
          "success"
        ]
      },
      "ResourceV1": {
        "description": "Represents a permission's resource.",
        "title": "ResourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of this resource.",
            "type": "string",
            "title": "id"
          },
          "type": {
            "description": "The kind of resource this permission applies to.",
            "enum": [
              "FUNCTION",
              "SOURCE",
              "SPACE",
              "WAREHOUSE",
              "WORKSPACE"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ]
      },
      "InvitePermissionV1": {
        "description": "Defines a permission to apply to the user in an invite.",
        "title": "InvitePermissionV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources to grant the invited users access to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceV1"
            },
            "title": "resources"
          },
          "labels": {
            "description": "The labels that determine which resources to grant users access to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedLabelBeta"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "roleId"
        ]
      },
      "InviteV1": {
        "description": "Defines an invitation to join a Workspace.",
        "title": "InviteV1",
        "type": "object",
        "properties": {
          "email": {
            "description": "The invited user's email to attach the permissions to.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions to attach to the invited user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvitePermissionV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "email"
        ]
      },
      "CreateInvitesV1Input": {
        "description": "Invites a user to a Workspace with specified permissions.",
        "title": "CreateInvitesV1Input",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InviteV1"
            },
            "title": "invites"
          }
        },
        "additionalProperties": false,
        "required": [
          "invites"
        ]
      },
      "CreateInvitesV1Output": {
        "description": "Returns the emails of the invited users.",
        "title": "CreateInvitesV1Output",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The list of emails invited to the Workspace.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          }
        },
        "additionalProperties": false,
        "required": [
          "emails"
        ]
      },
      "DeleteInvitesV1Input": {
        "description": "Removes pre-existing invitations to join a Workspace.",
        "title": "DeleteInvitesV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteInvitesV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteInvitesV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the invite deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListInvitesV1Input": {
        "description": "Retrieves a list of existing invitations to join a Workspace.",
        "title": "ListInvitesV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListInvitesV1Output": {
        "description": "Returns the list of invites.",
        "title": "ListInvitesV1Output",
        "type": "object",
        "properties": {
          "invites": {
            "description": "The list of invites.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "invites"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "invites",
          "pagination"
        ]
      },
      "PermissionResourceV1": {
        "description": "The most basic representation of a resource belonging to a set of permissions.",
        "title": "PermissionResourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of this resource.",
            "type": "string",
            "title": "id"
          },
          "type": {
            "description": "The type for this resource.",
            "enum": [
              "FUNCTION",
              "SOURCE",
              "SPACE",
              "WAREHOUSE",
              "WORKSPACE"
            ],
            "type": "string",
            "title": "type"
          },
          "labels": {
            "description": "The labels that further refine access to this resource. Labels are exclusive to Workspace-level permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedLabelBeta"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ]
      },
      "PermissionV1": {
        "description": "A registered set of permissions for a subject, extending a role to a resource.",
        "title": "PermissionV1",
        "type": "object",
        "properties": {
          "roleName": {
            "description": "The name of the role associated with this permission.",
            "type": "string",
            "title": "roleName"
          },
          "roleId": {
            "description": "The id of the role associated with this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources associated with this permission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResourceV1"
            },
            "title": "resources"
          },
          "labels": {
            "description": "The labels to attach to this permission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowedLabelBeta"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "resources",
          "roleId",
          "roleName"
        ]
      },
      "MinimalUserGroupV1": {
        "description": "The least amount of information needed to identify a user group.",
        "title": "MinimalUserGroupV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the user group.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the user group.",
            "type": "string",
            "title": "name"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ]
      },
      "DeleteUsersV1Input": {
        "description": "Removes users from a Workspace.",
        "title": "DeleteUsersV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteUsersV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "DeleteUsersV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag that indicates the status of a successful deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "AccessPermissionV1": {
        "description": "A permission governing access to a resource.",
        "title": "AccessPermissionV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The id of the role that applies to this permission.",
            "type": "string",
            "title": "roleId"
          },
          "roleName": {
            "description": "The name of the role that applies to this permission.",
            "type": "string",
            "title": "roleName"
          },
          "resources": {
            "description": "The resources included with this permission.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResourceV1"
            },
            "title": "resources"
          }
        },
        "additionalProperties": false,
        "required": [
          "resources",
          "roleId",
          "roleName"
        ]
      },
      "PermissionInputV1": {
        "description": "The input for a permission, associated with a resource and/or labels.",
        "title": "PermissionInputV1",
        "type": "object",
        "properties": {
          "roleId": {
            "description": "The role id of this permission.",
            "type": "string",
            "title": "roleId"
          },
          "resources": {
            "description": "The resources to link the selected role to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionResourceV1"
            },
            "title": "resources"
          }
        },
        "additionalProperties": false,
        "required": [
          "resources",
          "roleId"
        ]
      },
      "AddPermissionsToUserV1Input": {
        "description": "Adds a list of permissions to a user.",
        "title": "AddPermissionsToUserV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "AddPermissionsToUserV1Output": {
        "description": "Returns the user's permissions, including the added permissions.",
        "title": "AddPermissionsToUserV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The new permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "ReplacePermissionsForUserV1Input": {
        "description": "Updates the list of permissions for a user.",
        "title": "ReplacePermissionsForUserV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "ReplacePermissionsForUserV1Output": {
        "description": "Returns the user's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "ListUsersV1Input": {
        "description": "Returns a list of users with access to the Workspace.",
        "title": "ListUsersV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListUsersV1Output": {
        "description": "Returns the list of users.",
        "title": "ListUsersV1Output",
        "type": "object",
        "properties": {
          "users": {
            "description": "The list of users.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserV1"
            },
            "title": "users"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "users"
        ]
      },
      "GetUserV1Input": {
        "description": "Returns a user.",
        "title": "GetUserV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetUserV1Output": {
        "description": "Returns the user.",
        "title": "GetUserV1Output",
        "type": "object",
        "properties": {
          "user": {
            "description": "The user object.",
            "title": "user",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "user"
        ]
      },
      "UserV1": {
        "description": "A user belonging to a Segment Workspace.",
        "title": "UserV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The human-readable name of this user.",
            "type": "string",
            "title": "name"
          },
          "email": {
            "description": "The email address associated with this user.",
            "type": "string",
            "title": "email"
          },
          "permissions": {
            "description": "The permissions associated with this user.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "email",
          "id",
          "name"
        ]
      },
      "ListUserGroupsFromUserV1Input": {
        "description": "Retrieves all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListUserGroupsFromUserV1Output": {
        "description": "Returns all user groups the user belongs to.",
        "title": "ListUserGroupsFromUserV1Output",
        "type": "object",
        "properties": {
          "groups": {
            "description": "The user groups that the user belongs to.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinimalUserGroupV1"
            },
            "title": "groups"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "groups",
          "pagination"
        ]
      },
      "ListRolesV1Input": {
        "description": "Returns a list of roles available to apply to permissions for users in the Workspace.",
        "title": "ListRolesV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RoleV1": {
        "description": "Represents a role.",
        "title": "RoleV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the role.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The human-readable name of the role.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The human-readable description of the role.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false,
        "required": [
          "description",
          "id",
          "name"
        ]
      },
      "ListRolesV1Output": {
        "description": "Returns the list of roles.",
        "title": "ListRolesV1Output",
        "type": "object",
        "properties": {
          "roles": {
            "description": "The list of roles.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleV1"
            },
            "title": "roles"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "roles"
        ]
      },
      "MinimalUserV1": {
        "description": "A user belonging to a Segment Workspace.",
        "title": "MinimalUserV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of this user.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The human-readable name of this user.",
            "type": "string",
            "title": "name"
          },
          "email": {
            "description": "The email address associated with this user.",
            "type": "string",
            "title": "email"
          }
        },
        "additionalProperties": false,
        "required": [
          "email",
          "id",
          "name"
        ]
      },
      "CreateUserGroupV1Input": {
        "description": "Creates a user group, used to bundle permissions for its members, within a Workspace.",
        "title": "CreateUserGroupV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the user group to create.",
            "type": "string",
            "title": "name"
          }
        },
        "additionalProperties": false,
        "required": [
          "name"
        ]
      },
      "UserGroupV1": {
        "description": "A set of users with a set of shared permissions.",
        "title": "UserGroupV1",
        "type": "object",
        "properties": {
          "memberCount": {
            "description": "The number of members in the user group.",
            "type": "number",
            "title": "memberCount"
          },
          "permissions": {
            "description": "The permissions associated with the user group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionV1"
            },
            "title": "permissions"
          },
          "id": {
            "description": "The id of the user group.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the user group.",
            "type": "string",
            "title": "name"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "memberCount",
          "name"
        ]
      },
      "CreateUserGroupV1Output": {
        "description": "Returns the newly created user group.",
        "title": "CreateUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The newly created user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "userGroup"
        ]
      },
      "AddPermissionsToUserGroupV1Input": {
        "description": "Adds a list of permissions to a user group.",
        "title": "AddPermissionsToUserGroupV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "AddPermissionsToUserGroupV1Output": {
        "description": "Returns the group's permissions, including the added permissions.",
        "title": "AddPermissionsToUserGroupV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated set of permissions assigned to the user group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "AddUsersToUserGroupV1Input": {
        "description": "Adds a list of users and invites to a user group.",
        "title": "AddUsersToUserGroupV1Input",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The email addresses of the users and invites to add.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          }
        },
        "additionalProperties": false,
        "required": [
          "emails"
        ]
      },
      "AddUsersToUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "AddUsersToUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The updated the user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "userGroup"
        ]
      },
      "DeleteUserGroupV1Input": {
        "description": "Deletes a user group with a given group id from a Workspace.",
        "title": "DeleteUserGroupV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteUserGroupV1Output": {
        "description": "Returns the status of the completed deletion operation.",
        "title": "DeleteUserGroupV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "A flag indicating the status of a successful deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "GetUserGroupV1Input": {
        "description": "Looks up a user group within a Workspace.",
        "title": "GetUserGroupV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetUserGroupV1Output": {
        "description": "Returns a user group with the given id.",
        "title": "GetUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The user group returned from the query.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "userGroup"
        ]
      },
      "UpdateUserGroupV1Input": {
        "description": "Updates a user group with a given id.",
        "title": "UpdateUserGroupV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The intended value to rename the user group to.",
            "type": "string",
            "title": "name"
          }
        },
        "additionalProperties": false,
        "required": [
          "name"
        ]
      },
      "UpdateUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "UpdateUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The updated user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "userGroup"
        ]
      },
      "ListInvitesFromUserGroupV1Input": {
        "description": "Looks up the invitees to a user group within a Workspace.",
        "title": "ListInvitesFromUserGroupV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListInvitesFromUserGroupV1Output": {
        "description": "Returns the emails of invitees to a user group with the given group id.",
        "title": "ListInvitesFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The emails of the invitees to the user group.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "emails",
          "pagination"
        ]
      },
      "ReplaceUsersInUserGroupV1Input": {
        "description": "Replace a user group's list of users and invites with a new one.",
        "title": "ReplaceUsersInUserGroupV1Input",
        "type": "object",
        "properties": {
          "emails": {
            "description": "The email addresses of the users and invites to replace.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "emails"
          }
        },
        "additionalProperties": false,
        "required": [
          "emails"
        ]
      },
      "ReplaceUsersInUserGroupV1Output": {
        "description": "Returns the updated user group.",
        "title": "ReplaceUsersInUserGroupV1Output",
        "type": "object",
        "properties": {
          "userGroup": {
            "description": "The updated the user group.",
            "title": "userGroup",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserGroupV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "userGroup"
        ]
      },
      "ListUserGroupsV1Input": {
        "description": "Loads all user groups for a Workspace.",
        "title": "ListUserGroupsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListUserGroupsV1Output": {
        "description": "Returns a list of user groups with the given Workspace id.",
        "title": "ListUserGroupsV1Output",
        "type": "object",
        "properties": {
          "userGroups": {
            "description": "The user group returned from the query.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserGroupV1"
            },
            "title": "userGroups"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "userGroups"
        ]
      },
      "RemoveUsersFromUserGroupV1Input": {
        "description": "Removes users or invites from a user group.",
        "title": "RemoveUsersFromUserGroupV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveUsersFromUserGroupV1Output": {
        "description": "Returns the status of the removal operation.",
        "title": "RemoveUsersFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the user removal from user group operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ReplacePermissionsForUserGroupV1Input": {
        "description": "Updates the list of permissions for a user group.",
        "title": "ReplacePermissionsForUserGroupV1Input",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The permissions to replace with.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionInputV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "ReplacePermissionsForUserGroupV1Output": {
        "description": "Returns the user group's permissions, including the updated permissions.",
        "title": "ReplacePermissionsForUserGroupV1Output",
        "type": "object",
        "properties": {
          "permissions": {
            "description": "The updated permissions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessPermissionV1"
            },
            "title": "permissions"
          }
        },
        "additionalProperties": false,
        "required": [
          "permissions"
        ]
      },
      "ListUsersFromUserGroupV1Input": {
        "description": "Looks up the members of a user group within a Workspace.",
        "title": "ListUsersFromUserGroupV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListUsersFromUserGroupV1Output": {
        "description": "Returns the members of a user group with the given group id.",
        "title": "ListUsersFromUserGroupV1Output",
        "type": "object",
        "properties": {
          "users": {
            "description": "The users of the user group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinimalUserV1"
            },
            "title": "users"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "users"
        ]
      },
      "IntegrationOptionBeta": {
        "description": "Describes an Integration option field required to set up a Segment Integration such as Sources, Destinations, or\nwarehouses.",
        "title": "IntegrationOptionBeta",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name identifying this option in the context of a Segment Integration.",
            "type": "string",
            "title": "name"
          },
          "type": {
            "description": "Defines the type for this option in the schema. Types are most commonly strings, but may also represent other\nprimitive types, such as booleans, and numbers, as well as complex types, such as objects and arrays.",
            "type": "string",
            "title": "type"
          },
          "required": {
            "description": "Whether this is a required option when setting up the Integration.",
            "type": "boolean",
            "title": "required"
          },
          "description": {
            "description": "An optional short text description of the field.",
            "type": "string",
            "title": "description"
          },
          "defaultValue": {
            "description": "An optional default value for the field.",
            "title": "defaultValue"
          },
          "label": {
            "description": "An optional label for this field.",
            "type": "string",
            "title": "label"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "required",
          "type"
        ]
      },
      "LabelAlpha": {
        "description": "A label lets Workspace owners assign permissions to users, and grant these users access to groups.\n\nA Workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a Source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll Workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelAlpha",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key that represents the name of this label.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "value"
        ]
      },
      "ListLabelsAlphaInput": {
        "description": "Retrieves all available labels for the current Workspace.",
        "title": "ListLabelsAlphaInput",
        "type": "object",
        "additionalProperties": false
      },
      "ListLabelsAlphaOutput": {
        "description": "Returns all available labels for the current Workspace.",
        "title": "ListLabelsAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "DeleteLabelAlphaInput": {
        "description": "Deletes an existing label in the current Workspace.",
        "title": "DeleteLabelAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteLabelAlphaOutput": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "AddLabelsToSourceAlphaInput": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceAlphaInput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The labels to associate with a Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "AddLabelsToSourceAlphaOutput": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceAlphaInput": {
        "description": "Replaces all labels in a Source with a list of new labels.",
        "title": "ReplaceLabelsInSourceAlphaInput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The list of labels to replace in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceAlphaOutput": {
        "description": "Response from replacing a list of labels in a Source.",
        "title": "ReplaceLabelsInSourceAlphaOutput",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelAlpha"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "LabelV1": {
        "description": "A label lets Workspace owners assign permissions to users, and grant these users access to groups.\n\nA Workspace owner may use labels to grant users access to groups of resources.\n\nWhen you add a label to a Source or Personas Spaces, any users granted access to that label gain access to those\nresources.\n\nAll Workspaces include labels for Dev (development) and Prod (production) environments. On top of those, Free and\nTeam plan customers may create up to five labels.\n\nCustomers with the Enterprise pricing package may create an unlimited number of labels.",
        "title": "LabelV1",
        "type": "object",
        "properties": {
          "key": {
            "description": "The key that represents the name of this label.",
            "type": "string",
            "title": "key"
          },
          "value": {
            "description": "The value associated with the key of this label.",
            "type": "string",
            "title": "value"
          },
          "description": {
            "description": "An optional description of the purpose of this label.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "value"
        ]
      },
      "ListLabelsV1Input": {
        "description": "Retrieves all available labels for the current Workspace.",
        "title": "ListLabelsV1Input",
        "type": "object",
        "additionalProperties": false
      },
      "ListLabelsV1Output": {
        "description": "Returns all available labels for the current Workspace.",
        "title": "ListLabelsV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels associated with the current Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "CreateLabelV1Input": {
        "description": "Creates a new label in the current Workspace.",
        "title": "CreateLabelV1Input",
        "type": "object",
        "properties": {
          "label": {
            "description": "The new label to create in the Workspace.",
            "title": "label",
            "allOf": [
              {
                "$ref": "#/components/schemas/LabelV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "label"
        ]
      },
      "CreateLabelV1Output": {
        "description": "Result of creating a new label in the current Workspace.",
        "title": "CreateLabelV1Output",
        "type": "object",
        "properties": {
          "label": {
            "description": "The newly created label.",
            "title": "label",
            "allOf": [
              {
                "$ref": "#/components/schemas/LabelV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "label"
        ]
      },
      "DeleteLabelV1Input": {
        "description": "Deletes an existing label in the current Workspace.",
        "title": "DeleteLabelV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteLabelV1Output": {
        "description": "Returns the status of a label deletion.",
        "title": "DeleteLabelV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the label deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "AddLabelsToSourceV1Input": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceV1Input",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The labels to associate with a Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "AddLabelsToSourceV1Output": {
        "description": "Applies an existing label to an existing Source.",
        "title": "AddLabelsToSourceV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceV1Input": {
        "description": "Replaces all labels in a Source with a list of new labels.",
        "title": "ReplaceLabelsInSourceV1Input",
        "type": "object",
        "properties": {
          "labels": {
            "description": "The list of labels to replace in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "ReplaceLabelsInSourceV1Output": {
        "description": "Response from replacing a list of labels in a Source.",
        "title": "ReplaceLabelsInSourceV1Output",
        "type": "object",
        "properties": {
          "labels": {
            "description": "All labels replaced in the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "labels"
        ]
      },
      "LogosBeta": {
        "description": "Represents a logo.",
        "title": "LogosBeta",
        "type": "object",
        "properties": {
          "default": {
            "description": "The default URL for this logo.",
            "type": "string",
            "title": "default"
          },
          "mark": {
            "description": "The logo mark.",
            "type": "string",
            "title": "mark",
            "nullable": true
          },
          "alt": {
            "description": "The alternative text for this logo.",
            "type": "string",
            "title": "alt",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "default"
        ]
      },
      "EventSourceV1": {
        "description": "Source represents a Segment Source.",
        "title": "EventSourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Source where the events came from.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the Source, if applicable.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug of the Source, if applicable.",
            "type": "string",
            "title": "slug"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "SourceEventVolumeV1": {
        "description": "SourceEventVolume represents a time series of event volume for a Workspace\nbroken down by the dimensions which the customer specifies (optional\nparameters).",
        "title": "SourceEventVolumeV1",
        "type": "object",
        "properties": {
          "source": {
            "description": "The Source where the events originated.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/EventSourceV1"
              }
            ]
          },
          "eventName": {
            "description": "The name of the event, if applicable.",
            "type": "string",
            "title": "eventName"
          },
          "eventType": {
            "description": "The event type, if applicable.",
            "type": "string",
            "title": "eventType"
          },
          "total": {
            "description": "The total count for all events in the requested time frame.",
            "type": "number",
            "title": "total"
          },
          "series": {
            "description": "A list of the event counts broken down by the requested\ngranularity.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceEventVolumeDatapointV1"
            },
            "title": "series"
          }
        },
        "additionalProperties": false,
        "required": [
          "series",
          "total"
        ]
      },
      "SourceEventVolumeDatapointV1": {
        "description": "SourceEventVolumeDatapoint represents an individual timestamp/event count\npair corresponding to a window of time designated by the granularity.",
        "title": "SourceEventVolumeDatapointV1",
        "type": "object",
        "properties": {
          "time": {
            "description": "The timestamp that corresponds to the beginning of the window given\nby the requested granularity.",
            "type": "string",
            "title": "time"
          },
          "count": {
            "description": "The number of valid events Segment received in the given window,\nafter the events completed the validation process.",
            "type": "number",
            "title": "count"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "time"
        ]
      },
      "GetEventsVolumeFromWorkspaceV1Input": {
        "description": "GetEventsVolumeFromWorkspaceV1Input represents the arguments given to the API.",
        "title": "GetEventsVolumeFromWorkspaceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetEventsVolumeFromWorkspaceV1Output": {
        "description": "GetEventsVolumeFromWorkspaceV1Output represents the results given the input query.",
        "title": "GetEventsVolumeFromWorkspaceV1Output",
        "type": "object",
        "properties": {
          "path": {
            "description": "Observability event volume path.",
            "type": "string",
            "title": "path"
          },
          "query": {
            "description": "Input query returned.",
            "title": "query",
            "allOf": [
              {
                "$ref": "#/components/schemas/GetEventsVolumeFromWorkspaceV1Query"
              }
            ]
          },
          "result": {
            "description": "The resultant list of series broken down by the\ndimensions requested over the time frame requested and ordered by the total count of events in all series.\nNote: The limit of entries returned is 5000.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceEventVolumeV1"
            },
            "title": "result"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "path",
          "query",
          "result"
        ]
      },
      "GetEventsVolumeFromWorkspaceV1Query": {
        "description": "GetEventVolumeOutputQuery represents the input query sent to output.",
        "title": "GetEventsVolumeFromWorkspaceV1Query",
        "type": "object",
        "properties": {
          "workspaceId": {
            "description": "Workspace being requested.",
            "type": "string",
            "title": "workspaceId"
          },
          "granularity": {
            "description": "Granularity corresponds to the requested bucket granularity.",
            "enum": [
              "DAY",
              "HOUR",
              "MINUTE"
            ],
            "type": "string",
            "title": "granularity"
          },
          "startTime": {
            "description": "StartTime is the ISO8601 formatted timestamp corresponding to the\nbeginning of the requested time frame, inclusive.",
            "type": "string",
            "title": "startTime"
          },
          "endTime": {
            "description": "EndTime is the ISO8601 formatted timestamp corresponding to the\nend of the requested time frame, noninclusive.",
            "type": "string",
            "title": "endTime"
          },
          "groupBy": {
            "description": "GroupBy is a comma-delimited list of strings representing the dimensions\nto group the result by. The current options are:\n`eventName` or `eventType`.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "groupBy"
          },
          "sourceId": {
            "description": "List of strings which allow you to restrict the result to just\nthe given Sources.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "sourceId"
          },
          "eventName": {
            "description": "EventName is a list of strings which allow you to restrict the result to just\nthe given event names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventName"
          },
          "eventType": {
            "description": "EventType is a list of strings which allow you to restrict the result to just\nthe given event types.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "eventType"
          },
          "appVersion": {
            "description": "AppVersion is a list of strings which allow you to restrict the result to just\nthe given application versions.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "appVersion"
          },
          "limit": {
            "description": "Limit is the total number of items in the result.",
            "type": "number",
            "title": "limit"
          }
        },
        "additionalProperties": false,
        "required": [
          "endTime",
          "granularity",
          "startTime",
          "workspaceId"
        ]
      },
      "ProfilesWarehouseAlpha": {
        "description": "Defines a Profiles data Warehouse used as a Destination for Segment data.",
        "title": "ProfilesWarehouseAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Warehouse.",
            "type": "string",
            "title": "id"
          },
          "spaceId": {
            "description": "The Space id.",
            "type": "string",
            "title": "spaceId"
          },
          "metadata": {
            "description": "The metadata for the Warehouse.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns this Warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this Warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The settings associated with this Warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "schemaName": {
            "description": "The custom schema name that Segment uses on the Warehouse side.",
            "type": "string",
            "title": "schemaName"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "metadata",
          "settings",
          "spaceId",
          "workspaceId"
        ]
      },
      "SpaceWarehouseSelectiveSyncItemAlpha": {
        "description": "Represents an entry in the Space Warehouse Selective Sync schema for a Warehouse and Space pair.",
        "title": "SpaceWarehouseSelectiveSyncItemAlpha",
        "type": "object",
        "properties": {
          "collection": {
            "description": "The collection within the Source.",
            "type": "string",
            "title": "collection"
          },
          "warehouseId": {
            "description": "The id of the Warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "enabled": {
            "description": "The Enabled flag ok telling whether the Collection is enabled or not.",
            "type": "boolean",
            "title": "enabled"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the Warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "additionalProperties": false,
        "required": [
          "collection",
          "enabled",
          "properties",
          "warehouseId"
        ]
      },
      "CreateProfilesWarehouseAlphaInput": {
        "description": "Create a new Profiles Warehouse based on a set of parameters.",
        "title": "CreateProfilesWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The Warehouse metadata to use.",
            "type": "string",
            "title": "metadataId"
          },
          "name": {
            "description": "An optional human-readable name for this Warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "schemaName": {
            "description": "The custom schema name that Segment uses on the Warehouse side. The space slug value is default otherwise.\nThe schema name cannot be an existing schema name in the Warehouse. To use an existing schema name, please\ncreate a profiles Warehouse through the Segment app UI.",
            "type": "string",
            "title": "schemaName"
          }
        },
        "additionalProperties": false,
        "required": [
          "metadataId",
          "settings"
        ]
      },
      "CreateProfilesWarehouseAlphaOutput": {
        "description": "Returns the newly created Warehouse.",
        "title": "CreateProfilesWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "profilesWarehouse": {
            "description": "The newly created Warehouse.",
            "title": "profilesWarehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfilesWarehouseAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "profilesWarehouse"
        ]
      },
      "RemoveProfilesWarehouseFromSpaceAlphaInput": {
        "description": "Deletes an existing Warehouse by id.",
        "title": "RemoveProfilesWarehouseFromSpaceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveProfilesWarehouseFromSpaceAlphaOutput": {
        "description": "Returns the status of a Warehouse deletion.",
        "title": "RemoveProfilesWarehouseFromSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Warehouse deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListProfilesWarehouseInSpaceAlphaInput": {
        "description": "Gets all Profiles Warehouse based on spaceID and pagination.",
        "title": "ListProfilesWarehouseInSpaceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListProfilesWarehouseInSpaceAlphaOutput": {
        "description": "Returns all Profiles Warehouse based on spaceID and pagination.",
        "title": "ListProfilesWarehouseInSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "profilesWarehouses": {
            "description": "A list of Warehouses that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfilesWarehouseAlpha"
            },
            "title": "profilesWarehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "profilesWarehouses"
        ]
      },
      "UpdateProfilesWarehouseForSpaceWarehouseAlphaInput": {
        "description": "Updates a Profiles Warehouse based on a set of parameters.",
        "title": "UpdateProfilesWarehouseForSpaceWarehouseAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name for this Warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "schemaName": {
            "description": "The custom schema name that Segment uses on the Warehouse side. The space slug value is default otherwise.",
            "type": "string",
            "title": "schemaName"
          }
        },
        "additionalProperties": false,
        "required": [
          "settings"
        ]
      },
      "UpdateProfilesWarehouseForSpaceWarehouseAlphaOutput": {
        "description": "Returns the updated Warehouse.",
        "title": "UpdateProfilesWarehouseForSpaceWarehouseAlphaOutput",
        "type": "object",
        "properties": {
          "profilesWarehouse": {
            "description": "The updated Warehouse.",
            "title": "profilesWarehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfilesWarehouseAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "profilesWarehouse"
        ]
      },
      "ListSelectiveSyncsFromWarehouseAndSpaceAlphaInput": {
        "description": "Get the Selective Sync configuration associated with a Space Warehouse Connection.",
        "title": "ListSelectiveSyncsFromWarehouseAndSpaceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSelectiveSyncsFromWarehouseAndSpaceAlphaOutput": {
        "description": "Results containing the Selective Sync configuration for a Space Warehouse Connection.",
        "title": "ListSelectiveSyncsFromWarehouseAndSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of collections and properties synced to the Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceWarehouseSelectiveSyncItemAlpha"
            },
            "title": "items"
          },
          "enableEventTables": {
            "description": "Optional. Represents the enabled state of all event tables.",
            "type": "boolean",
            "title": "enableEventTables"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ]
      },
      "SpaceWarehouseSchemaOverride": {
        "description": "Overrides the enabled or disabled state of the specified collection and / or properties within the schema.",
        "title": "SpaceWarehouseSchemaOverride",
        "type": "object",
        "properties": {
          "collection": {
            "description": "The collection within the Source.",
            "type": "string",
            "title": "collection"
          },
          "enabled": {
            "description": "Represents the overridden enabled state for the listed collection and / or properties.",
            "type": "boolean",
            "title": "enabled"
          },
          "property": {
            "description": "A map that contains the properties within the collection to which the Warehouse should sync.",
            "type": "string",
            "title": "property"
          }
        },
        "additionalProperties": false,
        "required": [
          "collection",
          "enabled"
        ]
      },
      "UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput": {
        "description": "Updates the schema for a Space Warehouse connection.",
        "title": "UpdateSelectiveSyncForWarehouseAndSpaceAlphaInput",
        "type": "object",
        "properties": {
          "syncOverrides": {
            "description": "A list of sync Schema overrides to apply to this Space Warehouse.\nNote: Selective Sync is not supported if the enableEventTables flag is false.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpaceWarehouseSchemaOverride"
            },
            "title": "syncOverrides"
          },
          "enableEventTables": {
            "description": "A flag to enable or disable all event Tables. This field is optional.",
            "type": "boolean",
            "title": "enableEventTables"
          }
        },
        "additionalProperties": false
      },
      "UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput": {
        "description": "Results from a SelectiveSync patch to a Space Warehouse connection.",
        "title": "UpdateSelectiveSyncForWarehouseAndSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": [
              "UNCHANGED",
              "UPDATED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "DestinationStatusV1": {
        "description": "DestinationStatus represents status of each Destination in a stream.",
        "title": "DestinationStatusV1",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "name"
          },
          "id": {
            "type": "string",
            "title": "id"
          },
          "status": {
            "enum": [
              "FAILED",
              "FINISHED",
              "INITIALIZED",
              "INVALID",
              "NOT_SUPPORTED",
              "PARTIAL_SUCCESS",
              "RUNNING"
            ],
            "type": "string",
            "title": "status"
          },
          "errString": {
            "type": "string",
            "title": "errString"
          },
          "finishedAt": {
            "type": "string",
            "title": "finishedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "errString",
          "finishedAt",
          "id",
          "name",
          "status"
        ]
      },
      "StreamStatusV1": {
        "description": "StreamStatus represents status of each stream including all the Destinations corresponding to the stream.",
        "title": "StreamStatusV1",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "destinationStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationStatusV1"
            },
            "title": "destinationStatus"
          }
        },
        "additionalProperties": false,
        "required": [
          "destinationStatus",
          "id"
        ]
      },
      "RegulationListEntryV1": {
        "title": "RegulationListEntryV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the regulate request.",
            "type": "string",
            "title": "id"
          },
          "subjectType": {
            "description": "The subject type.",
            "type": "string",
            "title": "subjectType"
          },
          "subjects": {
            "description": "The list of `userId` or `objectId` values of the subjects to regulate.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjects"
          },
          "status": {
            "description": "The current status of the regulate request.",
            "enum": [
              "FAILED",
              "FINISHED",
              "INITIALIZED",
              "INVALID",
              "NOT_SUPPORTED",
              "PARTIAL_SUCCESS",
              "RUNNING"
            ],
            "type": "string",
            "title": "status"
          },
          "createdAt": {
            "description": "The timestamp of the creation of the request.",
            "type": "string",
            "title": "createdAt"
          },
          "regulationType": {
            "description": "The regulation type.",
            "enum": [
              "DELETE_ARCHIVE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "SUPPRESS_WITH_DELETE_INTERNAL",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "finishedAt": {
            "description": "The timestamp of when the request finished.",
            "type": "string",
            "title": "finishedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "id",
          "regulationType",
          "status",
          "subjectType",
          "subjects"
        ]
      },
      "DeleteRegulationV1Input": {
        "description": "The input to delete a regulate request.",
        "title": "DeleteRegulationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteRegulationV1Output": {
        "description": "The output of the delete regulation call.",
        "title": "DeleteRegulationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the deletion call.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "CreateWorkspaceRegulationV1Input": {
        "description": "The input to create a Workspace regulation.",
        "title": "CreateWorkspaceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "SUPPRESS_WITH_DELETE_INTERNAL",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Use `objectId` for Cloud Source regulations.",
            "enum": [
              "OBJECT_ID",
              "USER_ID"
            ],
            "type": "string",
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The list of `userId` or `objectId` values of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjectIds"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulationType",
          "subjectIds",
          "subjectType"
        ]
      },
      "CreateWorkspaceRegulationV1Output": {
        "description": "The output of a create Workspace regulation call.",
        "title": "CreateWorkspaceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the created regulation.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulateId"
        ]
      },
      "GetRegulationV1Input": {
        "description": "The input to get a regulate request.",
        "title": "GetRegulationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetRegulationV1Output": {
        "description": "The regulate request returned.",
        "title": "GetRegulationV1Output",
        "type": "object",
        "properties": {
          "regulation": {
            "description": "The regulate request.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The id of the regulate request.",
                "type": "string",
                "title": "id"
              },
              "workspaceId": {
                "description": "The id of the Workspace that the regulate request belongs to.",
                "type": "string",
                "title": "workspaceId"
              },
              "overallStatus": {
                "description": "The current status of the regulate request.",
                "enum": [
                  "FAILED",
                  "FINISHED",
                  "INITIALIZED",
                  "INVALID",
                  "NOT_SUPPORTED",
                  "PARTIAL_SUCCESS",
                  "RUNNING"
                ],
                "type": "string",
                "title": "overallStatus"
              },
              "finishedAt": {
                "description": "The timestamp of when the request finished.",
                "type": "string",
                "title": "finishedAt"
              },
              "createdAt": {
                "description": "The timestamp of the creation of the request.",
                "type": "string",
                "title": "createdAt"
              },
              "streamStatus": {
                "description": "The status of each stream including all the Destinations that correspond to the stream.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StreamStatusV1"
                },
                "title": "streamStatus"
              }
            },
            "additionalProperties": false,
            "required": [
              "createdAt",
              "id",
              "overallStatus",
              "streamStatus",
              "workspaceId"
            ],
            "title": "regulation"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulation"
        ]
      },
      "ListWorkspaceRegulationsV1Input": {
        "description": "Input to list all Workspace-scoped regulations in a given Workspace.",
        "title": "ListWorkspaceRegulationsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListWorkspaceRegulationsV1Output": {
        "description": "Output of all Workspace-scoped regulations in a given Workspace.",
        "title": "ListWorkspaceRegulationsV1Output",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of Workspace-scoped regulations with statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulationListEntryV1"
            },
            "title": "regulations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "regulations"
        ]
      },
      "CreateSourceRegulationV1Input": {
        "description": "The input to create a Source-scoped regulation.",
        "title": "CreateSourceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.\nPlease note that `DELETE_ARCHIVE_ONLY` is only supported for limited Workspaces for Source-scoped regulations.",
            "enum": [
              "DELETE_ARCHIVE_ONLY",
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "SUPPRESS_WITH_DELETE_INTERNAL",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type.\nNote: `ANONYMOUS_ID` is only supported for limited Workspaces for Source-scoped regulations. `ANONYMOUS_ID` is only supported when regulationType is `DELETE_ARCHIVE_ONLY`.",
            "enum": [
              "ANONYMOUS_ID",
              "USER_ID"
            ],
            "type": "string",
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The list of `userId` or `objectId` or `anonymousId` values of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjectIds"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulationType",
          "subjectIds",
          "subjectType"
        ]
      },
      "CreateSourceRegulationV1Output": {
        "description": "The output of a create Source regulation call.",
        "title": "CreateSourceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the created regulation.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulateId"
        ]
      },
      "CreateCloudSourceRegulationV1Input": {
        "description": "The input to create a Cloud Source-scoped regulation.",
        "title": "CreateCloudSourceRegulationV1Input",
        "type": "object",
        "properties": {
          "regulationType": {
            "description": "The regulation type to create.",
            "enum": [
              "DELETE_INTERNAL",
              "DELETE_ONLY",
              "SUPPRESS_ONLY",
              "SUPPRESS_WITH_DELETE",
              "SUPPRESS_WITH_DELETE_INTERNAL",
              "UNSUPPRESS"
            ],
            "type": "string",
            "title": "regulationType"
          },
          "subjectType": {
            "description": "The subject type. Must be `objectId` for Cloud Sources.",
            "type": "string",
            "enum": [
              "OBJECT_ID"
            ],
            "title": "subjectType"
          },
          "subjectIds": {
            "description": "The list of `userId` or `objectId` values of the subjects to regulate.\n\nConfig API note: equal to `parent` but allows an array.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "subjectIds"
          },
          "collection": {
            "description": "The Cloud Source collection to regulate.",
            "type": "string",
            "title": "collection"
          }
        },
        "additionalProperties": false,
        "required": [
          "collection",
          "regulationType",
          "subjectIds",
          "subjectType"
        ]
      },
      "CreateCloudSourceRegulationV1Output": {
        "description": "The output of a create Cloud Source regulation call.",
        "title": "CreateCloudSourceRegulationV1Output",
        "type": "object",
        "properties": {
          "regulateId": {
            "description": "The id of the created regulation.",
            "type": "string",
            "title": "regulateId"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulateId"
        ]
      },
      "ListRegulationsFromSourceV1Input": {
        "description": "Input to list all Source-scoped regulations.",
        "title": "ListRegulationsFromSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListRegulationsFromSourceV1Output": {
        "description": "Output of all Source-scoped regulations.",
        "title": "ListRegulationsFromSourceV1Output",
        "type": "object",
        "properties": {
          "regulations": {
            "description": "List of Workspace-scoped regulations with statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegulationListEntryV1"
            },
            "title": "regulations"
          }
        },
        "additionalProperties": false,
        "required": [
          "regulations"
        ]
      },
      "ListSuppressionsV1Input": {
        "description": "The input to list suppressions for the Workspace.",
        "title": "ListSuppressionsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSuppressionsV1Output": {
        "description": "The output of a list suppressed call for a Workspace.",
        "title": "ListSuppressionsV1Output",
        "type": "object",
        "properties": {
          "suppressed": {
            "description": "An array that lists the suppressions from the Workspace.\n\nConfig API note: equal to `attributes`.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "subjectType": {
                  "type": "string",
                  "title": "subjectType"
                },
                "subjectIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "subjectIds"
                }
              },
              "additionalProperties": false,
              "required": [
                "subjectIds",
                "subjectType"
              ]
            },
            "title": "suppressed"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "suppressed"
        ]
      },
      "ReverseEtlModel": {
        "description": "Defines a Reverse ETL Model.",
        "title": "ReverseEtlModel",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Model.",
            "type": "string",
            "title": "id"
          },
          "sourceId": {
            "description": "The id for the attached Source.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "A short, human-readable description of the Model.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A longer, more descriptive explanation of the Model.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "Indicates whether the Model should have syncs enabled. When disabled, no\nsyncs will be triggered, regardless of the enabled status of the attached\ndestinations/subscriptions.",
            "type": "boolean",
            "title": "enabled"
          },
          "query": {
            "description": "The SQL query that will be executed to extract data from the connected\nSource.",
            "type": "string",
            "title": "query"
          },
          "queryIdentifierColumn": {
            "description": "Indicates the column named in `query` that should be used to uniquely\nidentify the extracted records.",
            "type": "string",
            "title": "queryIdentifierColumn"
          }
        },
        "additionalProperties": false,
        "required": [
          "description",
          "enabled",
          "id",
          "name",
          "query",
          "queryIdentifierColumn",
          "sourceId"
        ]
      },
      "ReverseEtlModelScheduleConfig": {
        "description": "Defines a configuration object used for scheduling, which can vary depending\non the configured strategy, but must always be an object with at least 1\nlevel of keys.",
        "title": "ReverseEtlModelScheduleConfig",
        "type": "object",
        "additionalProperties": {}
      },
      "ReverseEtlScheduleDefinition": {
        "description": "Defines a configuration object used for scheduling, which can vary depending\non the configured strategy.",
        "title": "ReverseEtlScheduleDefinition",
        "type": "object",
        "properties": {
          "strategy": {
            "description": "Strategy supports: Periodic, Specific Days, Manual, CRON and DBT_CLOUD.",
            "enum": [
              "CRON",
              "DBT_CLOUD",
              "MANUAL",
              "PERIODIC",
              "SPECIFIC_DAYS"
            ],
            "type": "string",
            "title": "strategy"
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlPeriodicScheduleConfig"
              },
              {
                "$ref": "#/components/schemas/ReverseEtlSpecificTimeScheduleConfig"
              },
              {
                "$ref": "#/components/schemas/ReverseEtlCronScheduleConfig"
              },
              {
                "$ref": "#/components/schemas/ReverseEtlDbtCloudScheduleConfig"
              }
            ],
            "description": "Config contains interval duration in case of periodic or day and hours in case of specific_days. Empty if strategy is MANUAL.",
            "title": "config",
            "nullable": true,
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "strategy"
        ]
      },
      "ReverseEtlScheduleConfig": {
        "title": "ReverseEtlScheduleConfig",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ReverseEtlPeriodicScheduleConfig"
          },
          {
            "$ref": "#/components/schemas/ReverseEtlSpecificTimeScheduleConfig"
          },
          {
            "$ref": "#/components/schemas/ReverseEtlCronScheduleConfig"
          },
          {
            "$ref": "#/components/schemas/ReverseEtlDbtCloudScheduleConfig"
          }
        ]
      },
      "ReverseEtlPeriodicScheduleConfig": {
        "description": "Definition for periodic interval.",
        "title": "ReverseEtlPeriodicScheduleConfig",
        "type": "object",
        "properties": {
          "interval": {
            "description": "Duration is specified as a string, EG: 15m, 3h25m30s.",
            "type": "string",
            "title": "interval"
          }
        },
        "additionalProperties": false,
        "required": [
          "interval"
        ]
      },
      "ReverseEtlCronScheduleConfig": {
        "title": "ReverseEtlCronScheduleConfig",
        "type": "object",
        "properties": {
          "spec": {
            "description": "5 field cron string expression. The cron expression must be larger than 15 minutes.",
            "type": "string",
            "title": "spec"
          },
          "timezone": {
            "description": "Timezone respected by the cron string. Format must be in IANA Timezone Identifier. Example: 'America/Los_Angeles'.",
            "type": "string",
            "title": "timezone"
          }
        },
        "additionalProperties": false,
        "required": [
          "spec",
          "timezone"
        ]
      },
      "ReverseEtlDbtCloudScheduleConfig": {
        "description": "Definition for a schedule triggered by dbt Cloud job events.",
        "title": "ReverseEtlDbtCloudScheduleConfig",
        "type": "object",
        "properties": {
          "jobId": {
            "description": "The dbt Cloud job used to trigger a sync for a Reverse ETL Connection.",
            "type": "string",
            "title": "jobId"
          },
          "accountId": {
            "description": "The dbt Cloud account where the job belongs to.",
            "type": "string",
            "title": "accountId"
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId",
          "jobId"
        ]
      },
      "ReverseEtlSpecificTimeScheduleConfig": {
        "description": "Definition for specific day and time schedule. Days is list of numbered day of the week and hours\nis a list of hour of the day. The corresponding Timezone is also input as string.",
        "title": "ReverseEtlSpecificTimeScheduleConfig",
        "type": "object",
        "properties": {
          "days": {
            "description": "Days of the week.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "days"
          },
          "hours": {
            "description": "Hours of the day.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "hours"
          },
          "timezone": {
            "description": "Timezone for the specified times.",
            "type": "string",
            "title": "timezone"
          }
        },
        "additionalProperties": false,
        "required": [
          "days",
          "hours",
          "timezone"
        ]
      },
      "CreateReverseETLManualSyncInput": {
        "description": "Defines the parameters needed to trigger a manual sync for a RETL connection.",
        "title": "CreateReverseETLManualSyncInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source.",
            "type": "string",
            "title": "sourceId"
          },
          "modelId": {
            "description": "The id of the Model.",
            "type": "string",
            "title": "modelId"
          },
          "subscriptionId": {
            "description": "The id of the Subscription.",
            "type": "string",
            "title": "subscriptionId"
          }
        },
        "additionalProperties": false,
        "required": [
          "modelId",
          "sourceId",
          "subscriptionId"
        ]
      },
      "CreateReverseETLManualSyncOutput": {
        "description": "Output for triggering a manual sync for a RETL connection.",
        "title": "CreateReverseETLManualSyncOutput",
        "type": "object",
        "properties": {
          "reverseETLManualSync": {
            "description": "The reverse ETL connection job that was manually started.",
            "title": "reverseETLManualSync",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseETLManualSyncJobOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "reverseETLManualSync"
        ]
      },
      "ReverseETLManualSyncJobOutput": {
        "description": "StartJobOutput returns the result of triggering the specified job.",
        "title": "ReverseETLManualSyncJobOutput",
        "type": "object",
        "properties": {
          "startedAt": {
            "description": "A datetime that indicates when the job was triggered.",
            "type": "string",
            "title": "startedAt"
          },
          "syncId": {
            "description": "The unique id for the sync that was triggered.",
            "type": "string",
            "title": "syncId"
          }
        },
        "additionalProperties": false,
        "required": [
          "startedAt",
          "syncId"
        ]
      },
      "CancelReverseETLSyncForModelInput": {
        "description": "Defines the parameters needed to cancel a sync for a RETL connection.",
        "title": "CancelReverseETLSyncForModelInput",
        "type": "object",
        "properties": {
          "reasonForCanceling": {
            "description": "The reason for canceling the sync.\n- IncorrectModel = 0\n- IncorrectDest = 1\n- IncorrectKeys = 2\n- IncorrectMapping = 3\n- Other = 4",
            "type": "number",
            "title": "reasonForCanceling"
          }
        },
        "additionalProperties": false
      },
      "CancelReverseETLSyncForModelOutput": {
        "description": "CancelReverseETLSyncForModelOutput either will return an error or a \"CANCELLING\" status.",
        "title": "CancelReverseETLSyncForModelOutput",
        "type": "object",
        "properties": {
          "modelId": {
            "description": "The id of the Model.",
            "type": "string",
            "title": "modelId"
          },
          "syncId": {
            "description": "The id of the Sync.",
            "type": "string",
            "title": "syncId"
          },
          "errorCode": {
            "description": "A place holder for a machine-friendly category for an error, if applicable.\n- \"SyncAlreadyCanceled\"\n- \"SyncFinishedCannotCancel\"",
            "type": "string",
            "title": "errorCode"
          },
          "errorMessage": {
            "description": "A place holder for a human-readable description of the error, if applicable.\n- \"sync already canceled\"\n- \"sync already finished\".",
            "type": "string",
            "title": "errorMessage"
          },
          "status": {
            "description": "If no error, status will be CANCELLING, as the extract/load might take some time to cancel.",
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "modelId",
          "syncId"
        ]
      },
      "ListReverseEtlModelsInput": {
        "description": "Defines the parameters needed to list Models.",
        "title": "ListReverseEtlModelsInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListReverseEtlModelsOutput": {
        "description": "Defines the result of listing Models.",
        "title": "ListReverseEtlModelsOutput",
        "type": "object",
        "properties": {
          "models": {
            "description": "A list of Models that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReverseEtlModel"
            },
            "title": "models"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "models",
          "pagination"
        ]
      },
      "CreateReverseEtlModelInput": {
        "description": "Defines how to create a new Model.",
        "title": "CreateReverseEtlModelInput",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Indicates which Source to attach this model to.",
            "type": "string",
            "title": "sourceId"
          },
          "name": {
            "description": "A short, human-readable description of the Model.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A longer, more descriptive explanation of the Model.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "Indicates whether the Model should have syncs enabled. When disabled, no\nsyncs will be triggered, regardless of the enabled status of the attached\ndestinations/subscriptions.",
            "type": "boolean",
            "title": "enabled"
          },
          "query": {
            "description": "The SQL query that will be executed to extract data from the connected\nSource.",
            "type": "string",
            "title": "query"
          },
          "queryIdentifierColumn": {
            "description": "Indicates the column named in `query` that should be used to uniquely\nidentify the extracted records.",
            "type": "string",
            "title": "queryIdentifierColumn"
          }
        },
        "additionalProperties": false,
        "required": [
          "description",
          "enabled",
          "name",
          "query",
          "queryIdentifierColumn",
          "sourceId"
        ]
      },
      "CreateReverseEtlModelOutput": {
        "description": "Defines the results of creating a Model.",
        "title": "CreateReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "reverseEtlModel": {
            "description": "The created Model.",
            "title": "reverseEtlModel",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModel"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "reverseEtlModel"
        ]
      },
      "GetReverseEtlModelInput": {
        "description": "Defines the result of getting a Model.",
        "title": "GetReverseEtlModelInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetReverseEtlModelOutput": {
        "description": "Defines the result of getting a Model.",
        "title": "GetReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "reverseEtlModel": {
            "description": "The requested Model.",
            "title": "reverseEtlModel",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModel"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "reverseEtlModel"
        ]
      },
      "UpdateReverseEtlModelInput": {
        "description": "Defines how to update an existing Model.",
        "title": "UpdateReverseEtlModelInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "A short, human-readable description of the Model.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "A longer, more descriptive explanation of the Model.",
            "type": "string",
            "title": "description"
          },
          "enabled": {
            "description": "Indicates whether the Model should have syncs enabled. When disabled, no\nsyncs will be triggered, regardless of the enabled status of the attached\ndestinations/subscriptions.",
            "type": "boolean",
            "title": "enabled"
          },
          "query": {
            "description": "The SQL query that will be executed to extract data from the connected\nSource.",
            "type": "string",
            "title": "query"
          },
          "queryIdentifierColumn": {
            "description": "Indicates the column named in `query` that should be used to uniquely\nidentify the extracted records.",
            "type": "string",
            "title": "queryIdentifierColumn"
          }
        },
        "additionalProperties": false
      },
      "UpdateReverseEtlModelOutput": {
        "description": "Defines the results of updating a Model.",
        "title": "UpdateReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "reverseEtlModel": {
            "description": "The created Model.",
            "title": "reverseEtlModel",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseEtlModel"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "reverseEtlModel"
        ]
      },
      "DeleteReverseEtlModelInput": {
        "description": "Defines the result of getting a Model.",
        "title": "DeleteReverseEtlModelInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteReverseEtlModelOutput": {
        "description": "Defines the result of getting a Model.",
        "title": "DeleteReverseEtlModelOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The result of the deletion.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "GetReverseETLSyncStatusInput": {
        "description": "Defines the parameters needed to get the sync status for a RETL connection.",
        "title": "GetReverseETLSyncStatusInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetReverseETLSyncStatusOutput": {
        "description": "Output for triggering a manual sync for a RETL connection.",
        "title": "GetReverseETLSyncStatusOutput",
        "type": "object",
        "properties": {
          "reverseETLSyncStatus": {
            "description": "The status of the reverse ETL connection job.",
            "title": "reverseETLSyncStatus",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReverseETLSyncStatus"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "reverseETLSyncStatus"
        ]
      },
      "ReverseETLSyncStatus": {
        "description": "Defines the result of getting the sync status of a RETL connection.",
        "title": "ReverseETLSyncStatus",
        "type": "object",
        "properties": {
          "syncId": {
            "description": "The id of the sync.",
            "type": "string",
            "title": "syncId"
          },
          "modelId": {
            "description": "The Model id of the sync.",
            "type": "string",
            "title": "modelId"
          },
          "sourceId": {
            "description": "The Source id of the sync.",
            "type": "string",
            "title": "sourceId"
          },
          "syncStatus": {
            "description": "The status of the sync. It currently can be IN_PROGRESS, FAIL, SUCCESS, PARTIAL_SUCCESS.",
            "type": "string",
            "title": "syncStatus"
          },
          "duration": {
            "description": "The duration of the sync.",
            "type": "string",
            "title": "duration"
          },
          "startedAt": {
            "description": "When the sync started.",
            "type": "string",
            "title": "startedAt"
          },
          "finishedAt": {
            "description": "When the sync started.",
            "type": "string",
            "title": "finishedAt"
          },
          "extractPhase": {
            "description": "Object with extract phase details.",
            "title": "extractPhase",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncExtractPhase"
              }
            ]
          },
          "loadPhase": {
            "description": "Object with load phase details.",
            "title": "loadPhase",
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncLoadPhase"
              }
            ]
          },
          "error": {
            "description": "Error message if applicable.",
            "type": "string",
            "title": "error"
          },
          "errorCode": {
            "description": "Error code indicates a fatal sync error code, if applicable.",
            "type": "string",
            "title": "errorCode"
          }
        },
        "additionalProperties": false,
        "required": [
          "duration",
          "modelId",
          "sourceId",
          "startedAt",
          "syncId",
          "syncStatus"
        ]
      },
      "ListReverseETLSyncStatusesFromModelAndSubscriptionIdInput": {
        "description": "Input to retrieve sync statuses for a RETL mapping subscription.",
        "title": "ListReverseETLSyncStatusesFromModelAndSubscriptionIdInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListReverseETLSyncStatusesFromModelAndSubscriptionIdOutput": {
        "description": "The reverse ETL sync statuses that were looked up.",
        "title": "ListReverseETLSyncStatusesFromModelAndSubscriptionIdOutput",
        "type": "object",
        "properties": {
          "syncStatuses": {
            "description": "The reverse ETL sync statuses that were looked up of the subscription id.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReverseETLSyncStatus"
            },
            "title": "syncStatuses"
          },
          "pagination": {
            "description": "Optional pagination params. Present when output is paginated.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "syncStatuses"
        ]
      },
      "SyncExtractPhase": {
        "description": "Object representing the extract phase + details.",
        "title": "SyncExtractPhase",
        "type": "object",
        "properties": {
          "addedCount": {
            "description": "Counts the subset of records with status=new, which indicates records that were created/inserted/added.",
            "type": "string",
            "title": "addedCount"
          },
          "updatedCount": {
            "description": "Counts the subset of records with status=updated, which indicates records that were modified/updated.",
            "type": "string",
            "title": "updatedCount"
          },
          "deletedCount": {
            "description": "Counts the subset of records with status=deleted, which indicates records that were deleted/removed.",
            "type": "string",
            "title": "deletedCount"
          },
          "extractCount": {
            "description": "Counts the total number of records/rows handled by extract, across all statuses.",
            "type": "string",
            "title": "extractCount"
          },
          "errorCode": {
            "description": "Error code indicates a fatal sync error code, if applicable.",
            "type": "string",
            "title": "errorCode"
          },
          "startedAt": {
            "description": "Time that the extract phase started.",
            "type": "string",
            "title": "startedAt"
          },
          "finishedAt": {
            "description": "Time that the extract phase finished.",
            "type": "string",
            "title": "finishedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "addedCount",
          "deletedCount",
          "errorCode",
          "extractCount",
          "finishedAt",
          "startedAt",
          "updatedCount"
        ]
      },
      "SyncLoadPhase": {
        "description": "Object representing the load phase + details.",
        "title": "SyncLoadPhase",
        "type": "object",
        "properties": {
          "deliverSuccessCount": {
            "description": "Counts the subset of records successfully delivered to the downstream Destination.",
            "type": "string",
            "title": "deliverSuccessCount"
          },
          "deliverFailureCount": {
            "description": "Counts the subset of records status that failed to be delivered by either\nreceiving a permanent error (for example, 400 Bad Request) or by exhausting\nall retries for temporary errors (for example, 429 Too Many Requests).",
            "type": "string",
            "title": "deliverFailureCount"
          },
          "errorCode": {
            "description": "Error code indicates a fatal sync error code, if applicable.",
            "type": "string",
            "title": "errorCode"
          },
          "startedAt": {
            "description": "Time that the load phase started.",
            "type": "string",
            "title": "startedAt"
          },
          "finishedAt": {
            "description": "Time that the load phase finished.",
            "type": "string",
            "title": "finishedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "deliverFailureCount",
          "deliverSuccessCount",
          "errorCode",
          "finishedAt",
          "startedAt"
        ]
      },
      "GetSourcesCatalogV1Input": {
        "description": "Filter parameters used for loading the Sources public catalog.",
        "title": "GetSourcesCatalogV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetSourcesCatalogV1Output": {
        "description": "Returns a list of all Source catalog items contained within a given page.",
        "title": "GetSourcesCatalogV1Output",
        "type": "object",
        "properties": {
          "sourcesCatalog": {
            "description": "All Source catalog items contained within the requested page.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceMetadataV1"
            },
            "title": "sourcesCatalog"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "sourcesCatalog"
        ]
      },
      "GetSourceMetadataV1Input": {
        "description": "Requests a Source catalog item by id.",
        "title": "GetSourceMetadataV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetSourceMetadataV1Output": {
        "description": "Returns the Source catalog item looked up by id.",
        "title": "GetSourceMetadataV1Output",
        "type": "object",
        "properties": {
          "sourceMetadata": {
            "description": "The catalog item matched by id.",
            "title": "sourceMetadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceMetadataV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "sourceMetadata"
        ]
      },
      "SourceMetadataV1": {
        "description": "A website, server library, mobile SDK, or cloud application which can send data into Segment.",
        "title": "SourceMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id for this Source metadata in the Segment catalog.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The user-friendly name of this Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "The slug that identifies this Source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The description of this Source.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "description": "The logos for this Source.",
            "title": "logos",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogosBeta"
              }
            ]
          },
          "options": {
            "description": "Options for this Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationOptionBeta"
            },
            "title": "options"
          },
          "categories": {
            "description": "A list of categories this Source belongs to.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "categories"
          },
          "isCloudEventSource": {
            "description": "True if this is a Cloud Event Source.",
            "type": "boolean",
            "title": "isCloudEventSource"
          },
          "status": {
            "description": "Support status of the Source.",
            "enum": [
              "DEPRECATED",
              "PRIVATE_BETA",
              "PRIVATE_BUILDING",
              "PRIVATE_SUBMITTED",
              "PUBLIC",
              "PUBLIC_BETA",
              "UNAVAILABLE"
            ],
            "type": "string",
            "title": "status"
          },
          "partnerOwned": {
            "description": "Partner Owned flag.",
            "type": "boolean",
            "title": "partnerOwned"
          }
        },
        "additionalProperties": false,
        "required": [
          "categories",
          "description",
          "id",
          "isCloudEventSource",
          "logos",
          "name",
          "options",
          "slug",
          "status"
        ]
      },
      "CommonSourceSettingsV1": {
        "title": "CommonSourceSettingsV1",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "title": "track",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackSourceSettingsV1"
              }
            ]
          },
          "identify": {
            "description": "Identify settings.",
            "title": "identify",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentifySourceSettingsV1"
              }
            ]
          },
          "group": {
            "description": "Group settings.",
            "title": "group",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupSourceSettingsV1"
              }
            ]
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        },
        "additionalProperties": false
      },
      "TrackSourceSettingsV1": {
        "title": "TrackSourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedEvents": {
            "description": "Enable to allow unplanned track events.\n\nConfig API note: equal to `allowUnplannedTrackEvents`.",
            "type": "boolean",
            "title": "allowUnplannedEvents"
          },
          "allowUnplannedEventProperties": {
            "description": "Enable to allow unplanned track event properties.\n\nConfig API note: equal to `allowUnplannedTrackEventProperties`.",
            "type": "boolean",
            "title": "allowUnplannedEventProperties"
          },
          "allowEventOnViolations": {
            "description": "Allow track event on violations.\n\nConfig API note: equal to `allowTrackEventOnViolations`.",
            "type": "boolean",
            "title": "allowEventOnViolations"
          },
          "allowPropertiesOnViolations": {
            "description": "Enable to allow track properties on violations.\n\nConfig API note: equal to `allowTrackEventPropertiesOnViolations`.",
            "type": "boolean",
            "title": "allowPropertiesOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common track event on violations.\n\nConfig API note: equal to `commonTrackEventOnViolations`.",
            "enum": [
              "ALLOW",
              "BLOCK",
              "OMIT_PROPERTIES"
            ],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        },
        "additionalProperties": false
      },
      "IdentifySourceSettingsV1": {
        "title": "IdentifySourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned identify traits.\n\nConfig API note: equal to `allowUnplannedIdentifyTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow identify traits on violations.\n\nConfig API note: equal to `allowIdentifyTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common identify event on violations.\n\nConfig API note: equal to `commonIdentifyEventOnViolations`.",
            "enum": [
              "ALLOW",
              "BLOCK",
              "OMIT_TRAITS"
            ],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        },
        "additionalProperties": false
      },
      "GroupSourceSettingsV1": {
        "title": "GroupSourceSettingsV1",
        "type": "object",
        "properties": {
          "allowUnplannedTraits": {
            "description": "Enable to allow unplanned group traits.\n\nConfig API note: equal to `allowUnplannedGroupTraits`.",
            "type": "boolean",
            "title": "allowUnplannedTraits"
          },
          "allowTraitsOnViolations": {
            "description": "Enable to allow group traits on violations.\n\nConfig API note: equal to `allowGroupTraitsOnViolations`.",
            "type": "boolean",
            "title": "allowTraitsOnViolations"
          },
          "commonEventOnViolations": {
            "description": "The common group event on violations.\n\nConfig API note: equal to `commonGroupEventOnViolations`.",
            "enum": [
              "ALLOW",
              "BLOCK",
              "OMIT_TRAITS"
            ],
            "type": "string",
            "title": "commonEventOnViolations"
          }
        },
        "additionalProperties": false
      },
      "SourceSettingsOutputV1": {
        "description": "The output of Source settings.",
        "title": "SourceSettingsOutputV1",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "title": "track",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackSourceSettingsV1"
              }
            ]
          },
          "identify": {
            "description": "Identify settings.",
            "title": "identify",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentifySourceSettingsV1"
              }
            ]
          },
          "group": {
            "description": "Group settings.",
            "title": "group",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupSourceSettingsV1"
              }
            ]
          },
          "forwardingViolationsTo": {
            "description": "SourceId to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "SourceId to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        },
        "additionalProperties": false
      },
      "ListSchemaSettingsInSourceV1Input": {
        "description": "Request the settings of a Source.",
        "title": "ListSchemaSettingsInSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSchemaSettingsInSourceV1Output": {
        "description": "Returns a list of settings for the Source.",
        "title": "ListSchemaSettingsInSourceV1Output",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Source id.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The Source settings.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsOutputV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "settings",
          "sourceId"
        ]
      },
      "UpdateSchemaSettingsInSourceV1Input": {
        "description": "Input to update a Source's settings.",
        "title": "UpdateSchemaSettingsInSourceV1Input",
        "type": "object",
        "properties": {
          "track": {
            "description": "Track settings.",
            "title": "track",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackSourceSettingsV1"
              }
            ]
          },
          "identify": {
            "description": "Identify settings.",
            "title": "identify",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentifySourceSettingsV1"
              }
            ]
          },
          "group": {
            "description": "Group settings.",
            "title": "group",
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupSourceSettingsV1"
              }
            ]
          },
          "forwardingViolationsTo": {
            "description": "Source id to forward violations to.",
            "type": "string",
            "title": "forwardingViolationsTo"
          },
          "forwardingBlockedEventsTo": {
            "description": "Source id to forward blocked events to.",
            "type": "string",
            "title": "forwardingBlockedEventsTo"
          }
        },
        "additionalProperties": false
      },
      "UpdateSchemaSettingsInSourceV1Output": {
        "description": "Output of the Source with updated settings.",
        "title": "UpdateSchemaSettingsInSourceV1Output",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the updated Source.\n\nConfig API note: analogous to `parent` and `name`.",
            "type": "string",
            "title": "sourceId"
          },
          "settings": {
            "description": "The output of Source settings.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsOutputV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "settings",
          "sourceId"
        ]
      },
      "SourceAlpha": {
        "description": "Defines a data Source for Segment data.",
        "title": "SourceAlpha",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the Source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "description": "The metadata for the Source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns the Source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the Source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the Source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsAlpha"
              }
            ]
          },
          "labels": {
            "description": "A list of labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "labels",
          "metadata",
          "slug",
          "workspaceId",
          "writeKeys"
        ]
      },
      "SourceSettingsAlpha": {
        "description": "A key-value object that contains instance-specific settings for a Source.\n\nThe `options` field in the Source metadata defines the schema of this object.",
        "title": "SourceSettingsAlpha",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesAlphaInput": {
        "description": "Requests a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSourcesAlphaOutput": {
        "description": "Returns a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesAlphaOutput",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of Sources that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceAlpha"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "sources"
        ]
      },
      "GetSourceAlphaInput": {
        "description": "Looks up a Source by id.",
        "title": "GetSourceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetSourceAlphaOutput": {
        "description": "Returns a Source.",
        "title": "GetSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The returned Source object.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          },
          "trackingPlanId": {
            "description": "The id of the Tracking Plan connected to the Source.",
            "type": "string",
            "title": "trackingPlanId",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "source",
          "trackingPlanId"
        ]
      },
      "ListConnectedWarehousesFromSourceAlphaInput": {
        "description": "Requests a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListConnectedWarehousesFromSourceAlphaOutput": {
        "description": "Returns a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the Warehouses connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseV1"
            },
            "title": "warehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "warehouses"
        ]
      },
      "ListConnectedDestinationsFromSourceAlphaInput": {
        "description": "Requests a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListConnectedDestinationsFromSourceAlphaOutput": {
        "description": "Returns a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the Destinations connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationV1"
            },
            "title": "destinations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destinations",
          "pagination"
        ]
      },
      "CreateSourceAlphaInput": {
        "description": "Create a new Source based on a set of parameters.",
        "title": "CreateSourceAlphaInput",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the Source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this Source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "name": {
            "description": "An optional human-readable name for this Source.",
            "type": "string",
            "title": "name"
          },
          "metadataId": {
            "description": "The id of the Source metadata from which this instance of the Source derives.\n\nAll Source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "metadataId",
          "slug"
        ]
      },
      "CreateSourceAlphaOutput": {
        "description": "Returns the newly created Source.",
        "title": "CreateSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The newly created Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "source"
        ]
      },
      "DeleteSourceAlphaInput": {
        "description": "Deletes an existing Source by id.",
        "title": "DeleteSourceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteSourceAlphaOutput": {
        "description": "Returns the status of a Source deletion.",
        "title": "DeleteSourceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Source deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateSourceAlphaInput": {
        "description": "Updates an existing Source based on a set of parameters.",
        "title": "UpdateSourceAlphaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name to associate with the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the Source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the Source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.\n\nDifferent kinds of Sources require different kinds of input. The settings input for a Source comes from the\n`options` object associated with this instance of a Source.\n\nYou can find the full list of required settings by accessing the Sources catalog endpoint under `/catalog/sources`.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsAlpha"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CreateWriteKeyForSourceAlphaInput": {
        "description": "Creates a new write key for the given Source.",
        "title": "CreateWriteKeyForSourceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "CreateWriteKeyForSourceAlphaOutput": {
        "description": "Returns the updated Source.",
        "title": "CreateWriteKeyForSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The Source with a new write key appended to it.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "source"
        ]
      },
      "RemoveWriteKeyFromSourceAlphaInput": {
        "description": "Removes a write key from the given Source.",
        "title": "RemoveWriteKeyFromSourceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveWriteKeyFromSourceAlphaOutput": {
        "description": "Returns the updated Source.",
        "title": "RemoveWriteKeyFromSourceAlphaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateSourceAlphaOutput": {
        "description": "Returns the updated Source.",
        "title": "UpdateSourceAlphaOutput",
        "type": "object",
        "properties": {
          "source": {
            "description": "The updated Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceAlpha"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "source"
        ]
      },
      "SourceV1": {
        "description": "Defines a data Source for Segment data.",
        "title": "SourceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Source.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The slug used to identify the Source in the Segment app.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The name of the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "metadata": {
            "description": "The metadata for the Source.\n\nConfig API note: includes `catalogName` and `catalogId`.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns the Source.\n\nConfig API note: equal to `parent`.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "Enable to receive data from the Source.",
            "type": "boolean",
            "title": "enabled"
          },
          "writeKeys": {
            "description": "The write keys used to send data from the Source. This field is left empty when the current token does not have the\n'source admin' permission.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "writeKeys"
          },
          "settings": {
            "description": "The settings associated with the Source.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsV1"
              }
            ]
          },
          "labels": {
            "description": "A list of labels applied to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LabelV1"
            },
            "title": "labels"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "labels",
          "metadata",
          "slug",
          "workspaceId",
          "writeKeys"
        ]
      },
      "SourceSettingsV1": {
        "description": "A key-value object that contains instance-specific settings for a Source.\n\nThe `options` field in the Source metadata defines the schema of this object.",
        "title": "SourceSettingsV1",
        "type": "object",
        "additionalProperties": {}
      },
      "ListSourcesV1Input": {
        "description": "Requests a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSourcesV1Output": {
        "description": "Returns a list of Sources that belong to the current Workspace.",
        "title": "ListSourcesV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list of Sources that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceV1"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "sources"
        ]
      },
      "GetSourceV1Input": {
        "description": "Looks up a Source by id.",
        "title": "GetSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetSourceV1Output": {
        "description": "Returns a Source.",
        "title": "GetSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "description": "The returned Source object.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceV1"
              }
            ]
          },
          "trackingPlanId": {
            "description": "The id of the Tracking Plan connected to the Source.",
            "type": "string",
            "title": "trackingPlanId",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "required": [
          "source",
          "trackingPlanId"
        ]
      },
      "ListConnectedWarehousesFromSourceV1Input": {
        "description": "Requests a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListConnectedWarehousesFromSourceV1Output": {
        "description": "Returns a list of Warehouses connected to a Source.",
        "title": "ListConnectedWarehousesFromSourceV1Output",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list that contains the Warehouses connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseV1"
            },
            "title": "warehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "warehouses"
        ]
      },
      "ListConnectedDestinationsFromSourceV1Input": {
        "description": "Requests a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListConnectedDestinationsFromSourceV1Output": {
        "description": "Returns a list of Destinations connected to a Source.",
        "title": "ListConnectedDestinationsFromSourceV1Output",
        "type": "object",
        "properties": {
          "destinations": {
            "description": "A list that contains the Destinations connected to the Source.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DestinationV1"
            },
            "title": "destinations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "destinations",
          "pagination"
        ]
      },
      "CreateSourceV1Input": {
        "description": "Create a new Source based on a set of parameters.",
        "title": "CreateSourceV1Input",
        "type": "object",
        "properties": {
          "slug": {
            "description": "The slug by which to identify the Source in the Segment app.",
            "type": "string",
            "title": "slug"
          },
          "enabled": {
            "description": "Enable to allow this Source to send data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "metadataId": {
            "description": "The id of the Source metadata from which this instance of the Source derives.\n\nAll Source metadata is available under `/catalog/sources`.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.\n\n\"websiteUrl\" and \"apiHost\" can be configured here for the relevant Sources.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsV1"
              }
            ]
          },
          "disconnectAllWarehouses": {
            "description": "Whether to disconnect all Warehouses from the Source.",
            "type": "boolean",
            "title": "disconnectAllWarehouses"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "metadataId",
          "slug"
        ]
      },
      "CreateSourceV1Output": {
        "description": "Returns a newly created Source.",
        "title": "CreateSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "description": "The newly created Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "source"
        ]
      },
      "DeleteSourceV1Input": {
        "description": "Deletes an existing Source by id.",
        "title": "DeleteSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteSourceV1Output": {
        "description": "Returns the status of a Source deletion.",
        "title": "DeleteSourceV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Source deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateSourceV1Input": {
        "description": "Updates an existing Source based on a set of parameters.",
        "title": "UpdateSourceV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name to associate with the Source.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow the Source to send data.",
            "type": "boolean",
            "title": "enabled"
          },
          "slug": {
            "description": "The slug that identifies the Source.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for the Source.\n\nDifferent kinds of Sources require different kinds of input. The settings input for a Source comes from the\n`options` object associated with this instance of a Source.\n\nYou can find the full list of required settings by accessing the Sources catalog endpoint under `/catalog/sources`.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceSettingsV1"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "UpdateSourceV1Output": {
        "description": "Returns the updated Source.",
        "title": "UpdateSourceV1Output",
        "type": "object",
        "properties": {
          "source": {
            "description": "The updated Source.",
            "title": "source",
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "source"
        ]
      },
      "GetSpaceAlphaInput": {
        "description": "Input for the getSpaceById endpoint.",
        "title": "GetSpaceAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "Space": {
        "title": "Space",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "id"
          },
          "slug": {
            "type": "string",
            "title": "slug"
          },
          "name": {
            "type": "string",
            "title": "name"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "slug"
        ]
      },
      "GetSpaceAlphaOutput": {
        "description": "Response for the getSpaceById endpoint.",
        "title": "GetSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "space": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Space"
              }
            ],
            "description": "Space matching the given id.",
            "title": "space",
            "nullable": true,
            "type": "object"
          }
        },
        "additionalProperties": false,
        "required": [
          "space"
        ]
      },
      "ListSpacesAlphaInput": {
        "description": "Input for the list spaces endpoint.",
        "title": "ListSpacesAlphaInput",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSpacesAlphaOutput": {
        "description": "Response for the list spaces endpoint.",
        "title": "ListSpacesAlphaOutput",
        "type": "object",
        "properties": {
          "spaces": {
            "description": "A list of spaces.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space"
            },
            "title": "spaces"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "spaces"
        ]
      },
      "GroupSubscriptionStatus": {
        "title": "GroupSubscriptionStatus",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group.",
            "type": "string",
            "title": "name"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "status"
        ]
      },
      "GroupSubscriptionStatusResponse": {
        "title": "GroupSubscriptionStatusResponse",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group.",
            "type": "string",
            "title": "name"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "id": {
            "description": "The group id.",
            "type": "string",
            "title": "id"
          },
          "updatedAt": {
            "description": "The timestamp of this subscription status's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "UpdateGroupSubscriptionStatusResponse": {
        "title": "UpdateGroupSubscriptionStatusResponse",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the group.",
            "type": "string",
            "title": "name"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "id": {
            "description": "The group id.",
            "type": "string",
            "title": "id"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "status"
        ]
      },
      "MessagesSubscriptionRequest": {
        "title": "MessagesSubscriptionRequest",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status globally.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "groups": {
            "description": "Optional groups subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupSubscriptionStatus"
            },
            "title": "groups"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "type"
        ]
      },
      "ReplaceMessagingSubscriptionsInSpacesAlphaInput": {
        "description": "Input for the endpoint.",
        "title": "ReplaceMessagingSubscriptionsInSpacesAlphaInput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "An array of subscriptions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagesSubscriptionRequest"
            },
            "title": "subscriptions"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptions"
        ]
      },
      "MessageSubscriptionResponseError": {
        "title": "MessageSubscriptionResponseError",
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string",
            "title": "code"
          },
          "message": {
            "description": "Error message.",
            "type": "string",
            "title": "message"
          }
        },
        "additionalProperties": false,
        "required": [
          "code",
          "message"
        ]
      },
      "MessageSubscriptionResponse": {
        "title": "MessageSubscriptionResponse",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used. Either SMS, EMAIL or WHATSAPP.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "errors": {
            "description": "Error messages.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponseError"
            },
            "title": "errors"
          },
          "groups": {
            "description": "Optional subscription groups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateGroupSubscriptionStatusResponse"
            },
            "title": "groups"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "type"
        ]
      },
      "ReplaceMessagingSubscriptionsInSpacesAlphaOutput": {
        "description": "Output for the endpoint.",
        "title": "ReplaceMessagingSubscriptionsInSpacesAlphaOutput",
        "type": "object",
        "properties": {
          "successes": {
            "description": "Array of successful subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponse"
            },
            "title": "successes"
          },
          "failures": {
            "description": "Array of failure subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponse"
            },
            "title": "failures"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "failures",
          "successes"
        ]
      },
      "GetMessagingSubscriptionSuccessResponse": {
        "title": "GetMessagingSubscriptionSuccessResponse",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          },
          "status": {
            "description": "The user subscribed, unsubscribed, or on initial status. This is absent if the phone number or email is not found.",
            "enum": [
              "DID_NOT_SUBSCRIBE",
              "SUBSCRIBED",
              "UNSUBSCRIBED"
            ],
            "type": "string",
            "title": "status"
          },
          "groups": {
            "description": "Optional subscription groups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupSubscriptionStatusResponse"
            },
            "title": "groups"
          },
          "updatedAt": {
            "description": "The timestamp of this subscription status's last change.",
            "type": "string",
            "title": "updatedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "type"
        ]
      },
      "GetMessagingSubscriptionFailureResponse": {
        "title": "GetMessagingSubscriptionFailureResponse",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "This will be the exact type as given in the request.",
            "type": "string",
            "title": "type"
          },
          "errors": {
            "description": "Per key errors, such as validation errors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponseError"
            },
            "title": "errors"
          }
        },
        "additionalProperties": false,
        "required": [
          "errors",
          "key",
          "type"
        ]
      },
      "BatchQueryMessagingSubscriptionsForSpaceAlphaOutput": {
        "description": "Batch get response.",
        "title": "BatchQueryMessagingSubscriptionsForSpaceAlphaOutput",
        "type": "object",
        "properties": {
          "successes": {
            "description": "Array of successful subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMessagingSubscriptionSuccessResponse"
            },
            "title": "successes"
          },
          "failures": {
            "description": "Validation errors due to invalid types or email/phone numbers.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMessagingSubscriptionFailureResponse"
            },
            "title": "failures"
          },
          "errors": {
            "description": "General errors when making the request such as invalid payload or wrong http method errors.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageSubscriptionResponseError"
            },
            "title": "errors"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "errors",
          "failures",
          "successes"
        ]
      },
      "GetSubscriptionRequest": {
        "title": "GetSubscriptionRequest",
        "type": "object",
        "properties": {
          "key": {
            "description": "Key is the phone number or email.",
            "type": "string",
            "title": "key"
          },
          "type": {
            "description": "Type is communication medium used.",
            "enum": [
              "ANDROID_PUSH",
              "EMAIL",
              "IOS_PUSH",
              "SMS",
              "WHATSAPP"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "key",
          "type"
        ]
      },
      "BatchQueryMessagingSubscriptionsForSpaceAlphaInput": {
        "description": "Batch get request.",
        "title": "BatchQueryMessagingSubscriptionsForSpaceAlphaInput",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "A list of subscriptions to retrieve subscription status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubscriptionRequest"
            },
            "title": "subscriptions"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptions"
        ]
      },
      "TrackingPlanV1": {
        "description": "Represents a Tracking Plan.",
        "title": "TrackingPlanV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The Tracking Plan's identifier.\n\nConfig API note: analogous to `name`.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The Tracking Plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "URL-friendly slug of this Tracking Plan.\n\nConfig API note: equal to `name`.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "The Tracking Plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The Tracking Plan's type.",
            "enum": [
              "ENGAGE",
              "LIVE",
              "PROPERTY_LIBRARY",
              "RULE_LIBRARY",
              "TEMPLATE"
            ],
            "type": "string",
            "title": "type"
          },
          "updatedAt": {
            "description": "The timestamp of the last change to the Tracking Plan.\n\nConfig API note: equal to `updateTime`.",
            "type": "string",
            "title": "updatedAt"
          },
          "createdAt": {
            "description": "The timestamp of this Tracking Plan's creation.\n\nConfig API note: equal to `createTime`.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "type"
        ]
      },
      "RuleV1": {
        "description": "Represents a rule from a Tracking Plan.",
        "title": "RuleV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": {
            "description": "JSON Schema of this rule.",
            "title": "jsonSchema"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          },
          "createdAt": {
            "description": "The timestamp of this rule's creation.",
            "type": "string",
            "title": "createdAt"
          },
          "updatedAt": {
            "description": "The timestamp of this rule's last change.",
            "type": "string",
            "title": "updatedAt"
          },
          "deprecatedAt": {
            "description": "The timestamp of this rule's deprecation.",
            "type": "string",
            "title": "deprecatedAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "jsonSchema",
          "type",
          "version"
        ]
      },
      "RuleInputV1": {
        "description": "Represents a rule to add to a Tracking Plan.",
        "title": "RuleInputV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": {
            "description": "JSON Schema of this rule.",
            "title": "jsonSchema"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          }
        },
        "additionalProperties": false,
        "required": [
          "jsonSchema",
          "type",
          "version"
        ]
      },
      "UpsertRuleV1": {
        "title": "UpsertRuleV1",
        "type": "object",
        "properties": {
          "newKey": {
            "description": "This rule's new intended key.",
            "type": "string",
            "title": "newKey"
          },
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "jsonSchema": {
            "description": "JSON Schema of this rule.",
            "title": "jsonSchema"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          }
        },
        "additionalProperties": false,
        "required": [
          "jsonSchema",
          "type",
          "version"
        ]
      },
      "RemoveRuleV1": {
        "description": "Represents the parameters needed to identify a rule on the backend-side.",
        "title": "RemoveRuleV1",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this Tracking Plan rule.",
            "enum": [
              "COMMON",
              "GROUP",
              "IDENTIFY",
              "PAGE",
              "SCREEN",
              "TRACK"
            ],
            "type": "string",
            "title": "type"
          },
          "key": {
            "description": "Key to this rule (free-form string like 'Button clicked').",
            "type": "string",
            "title": "key"
          },
          "version": {
            "description": "Version of this rule.",
            "type": "number",
            "title": "version"
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "version"
        ]
      },
      "ListTrackingPlansV1Input": {
        "description": "Lists the Tracking Plans associated with the current Workspace.",
        "title": "ListTrackingPlansV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetTrackingPlanV1Input": {
        "description": "Gets a single Tracking Plan.",
        "title": "GetTrackingPlanV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListTrackingPlansV1Output": {
        "description": "Lists the Tracking Plans associated with the current Workspace.",
        "title": "ListTrackingPlansV1Output",
        "type": "object",
        "properties": {
          "trackingPlans": {
            "description": "A paginated list of Tracking Plans.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackingPlanV1"
            },
            "title": "trackingPlans"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "trackingPlans"
        ]
      },
      "GetTrackingPlanV1Output": {
        "description": "Gets a single Tracking Plan.",
        "title": "GetTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "description": "The requested Tracking Plan.",
            "title": "trackingPlan",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackingPlanV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "trackingPlan"
        ]
      },
      "DeleteTrackingPlanV1Input": {
        "description": "Deletes a Tracking Plan.",
        "title": "DeleteTrackingPlanV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteTrackingPlanV1Output": {
        "description": "Result of a DeleteTrackingPlan call.",
        "title": "DeleteTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "CreateTrackingPlanV1Input": {
        "description": "Creates a Tracking Plan in the Workspace.",
        "title": "CreateTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The Tracking Plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The Tracking Plan's description.",
            "type": "string",
            "title": "description"
          },
          "type": {
            "description": "The Tracking Plan's type.",
            "enum": [
              "ENGAGE",
              "LIVE",
              "PROPERTY_LIBRARY",
              "RULE_LIBRARY",
              "TEMPLATE"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "type"
        ]
      },
      "CreateTrackingPlanV1Output": {
        "description": "Result of a CreateTrackingPlan call.",
        "title": "CreateTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "trackingPlan": {
            "description": "The created Tracking Plan.",
            "title": "trackingPlan",
            "allOf": [
              {
                "$ref": "#/components/schemas/TrackingPlanV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "trackingPlan"
        ]
      },
      "UpdateTrackingPlanV1Input": {
        "description": "Updates the Workspace's Tracking Plan.",
        "title": "UpdateTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The Tracking Plan's name.\n\nConfig API note: equal to `displayName`.",
            "type": "string",
            "title": "name"
          },
          "description": {
            "description": "The Tracking Plan's description.",
            "type": "string",
            "title": "description"
          }
        },
        "additionalProperties": false
      },
      "UpdateTrackingPlanV1Output": {
        "description": "Result of an UpdateTrackingPlan call.",
        "title": "UpdateTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListRulesFromTrackingPlanV1Input": {
        "description": "Lists a Tracking Plan's rules.",
        "title": "ListRulesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListRulesFromTrackingPlanV1Output": {
        "description": "Lists a Tracking Plan's rules.",
        "title": "ListRulesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules associated with the given Tracking Plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleV1"
            },
            "title": "rules"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "rules"
        ]
      },
      "UpdateRulesInTrackingPlanV1Input": {
        "description": "Updates Tracking Plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules to update or insert.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpsertRuleV1"
            },
            "title": "rules"
          }
        },
        "additionalProperties": false,
        "required": [
          "rules"
        ]
      },
      "RemoveRulesFromTrackingPlanV1Input": {
        "description": "Remove specified rules from a Tracking Plan.",
        "title": "RemoveRulesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ReplaceRulesInTrackingPlanV1Input": {
        "description": "Replaces Tracking Plan rules.",
        "title": "ReplaceRulesInTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "rules": {
            "description": "Rules to replace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleInputV1"
            },
            "title": "rules"
          }
        },
        "additionalProperties": false,
        "required": [
          "rules"
        ]
      },
      "ReplaceRulesInTrackingPlanV1Output": {
        "description": "Replaces Tracking Plan rules.",
        "title": "ReplaceRulesInTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "RemoveRulesFromTrackingPlanV1Output": {
        "description": "Remove specified rules from a Tracking Plan.",
        "title": "RemoveRulesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateRulesInTrackingPlanV1Output": {
        "description": "Updates Tracking Plan rules. Non-existent rules are added.",
        "title": "UpdateRulesInTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListSourcesFromTrackingPlanV1Input": {
        "description": "Lists all Sources associated with a Tracking Plan.",
        "title": "ListSourcesFromTrackingPlanV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSourcesFromTrackingPlanV1Output": {
        "description": "Lists all Sources associated with a Tracking Plan.",
        "title": "ListSourcesFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A paginated list of Sources associated with the Tracking Plan.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceV1"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "sources"
        ]
      },
      "AddSourceToTrackingPlanV1Input": {
        "description": "Connects a Source to a Tracking Plan.",
        "title": "AddSourceToTrackingPlanV1Input",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source associated with the Tracking Plan.\n\nConfig API note: analogous to `sourceName`.",
            "type": "string",
            "title": "sourceId"
          }
        },
        "additionalProperties": false,
        "required": [
          "sourceId"
        ]
      },
      "AddSourceToTrackingPlanV1Output": {
        "description": "Connects a Source to a Tracking Plan.",
        "title": "AddSourceToTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "RemoveSourceFromTrackingPlanV1Input": {
        "description": "Disconnects a Source from a Tracking Plan.",
        "title": "RemoveSourceFromTrackingPlanV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveSourceFromTrackingPlanV1Output": {
        "description": "Disconnects a Source from a Tracking Plan.",
        "title": "RemoveSourceFromTrackingPlanV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "TransformationBeta": {
        "description": "Represents a Transformation.",
        "title": "TransformationBeta",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Transformation.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n Track -\\> \"event='\\<eventName\\>'\"\n Identify -\\> \"type='identify'\"\n Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameBeta"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationBeta"
            },
            "title": "propertyValueTransformations"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "if",
          "name",
          "sourceId"
        ]
      },
      "PropertyRenameBeta": {
        "title": "PropertyRenameBeta",
        "type": "object",
        "properties": {
          "oldName": {
            "description": "The old name of the property.",
            "type": "string",
            "title": "oldName"
          },
          "newName": {
            "description": "The new name to rename the property.",
            "type": "string",
            "title": "newName"
          }
        },
        "additionalProperties": false,
        "required": [
          "newName",
          "oldName"
        ]
      },
      "PropertyValueTransformationBeta": {
        "title": "PropertyValueTransformationBeta",
        "type": "object",
        "properties": {
          "propertyPaths": {
            "description": "The property paths. The maximum number of paths is 10.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "propertyPaths"
          },
          "propertyValue": {
            "description": "The new value of the property paths.",
            "type": "string",
            "title": "propertyValue"
          }
        },
        "additionalProperties": false,
        "required": [
          "propertyPaths",
          "propertyValue"
        ]
      },
      "GetTransformationBetaOutput": {
        "description": "The output of Transformation retrieval.",
        "title": "GetTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The retrieved Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationBeta"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "transformation"
        ]
      },
      "GetTransformationBetaInput": {
        "description": "The input of Transformation retrieval.",
        "title": "GetTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "The Transformation id.",
            "type": "string",
            "title": "transformationId"
          }
        },
        "additionalProperties": false,
        "required": [
          "transformationId"
        ]
      },
      "ListTransformationsBetaInput": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsBetaInput",
        "type": "object",
        "properties": {
          "pagination": {
            "description": "Pagination options.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationInput"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ListTransformationsBetaOutput": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsBetaOutput",
        "type": "object",
        "properties": {
          "transformations": {
            "description": "A paginated list of Transformations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransformationBeta"
            },
            "title": "transformations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "transformations"
        ]
      },
      "DeleteTransformationBetaInput": {
        "description": "The input of delete Transformation.",
        "title": "DeleteTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "The Transformation id.",
            "type": "string",
            "title": "transformationId"
          }
        },
        "additionalProperties": false,
        "required": [
          "transformationId"
        ]
      },
      "DeleteTransformationBetaOutput": {
        "description": "The output of delete Transformation.",
        "title": "DeleteTransformationBetaOutput",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateTransformationBetaInput": {
        "description": "The input to update a Transformation.",
        "title": "UpdateTransformationBetaInput",
        "type": "object",
        "properties": {
          "transformationId": {
            "description": "ID of the Transformation to update.",
            "type": "string",
            "title": "transformationId"
          },
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The optional Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n Track -\\> \"event='\\<eventName\\>'\"\n Identify -\\> \"type='identify'\"\n Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameBeta"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationBeta"
            },
            "title": "propertyValueTransformations"
          }
        },
        "additionalProperties": false,
        "required": [
          "transformationId"
        ]
      },
      "UpdateTransformationBetaOutput": {
        "description": "The output of an updated Transformation.",
        "title": "UpdateTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The updated Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationBeta"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "transformation"
        ]
      },
      "CreateTransformationBetaInput": {
        "description": "The input to create a Transformation.",
        "title": "CreateTransformationBetaInput",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata id to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n Track -\\> \"event='\\<eventName\\>'\"\n Identify -\\> \"type='identify'\"\n Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameBeta"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationBeta"
            },
            "title": "propertyValueTransformations"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "if",
          "name",
          "sourceId"
        ]
      },
      "CreateTransformationBetaOutput": {
        "description": "The output of a created Transformation.",
        "title": "CreateTransformationBetaOutput",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The created Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationBeta"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "transformation"
        ]
      },
      "TransformationV1": {
        "description": "Represents a Transformation.",
        "title": "TransformationV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Transformation.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n Track -\\> \"event='\\<eventName\\>'\"\n Identify -\\> \"type='identify'\"\n Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "drop": {
            "description": "Optional boolean value if the Transformation should drop the event entirely when the if statement matches, ignores all other transforms.",
            "type": "boolean",
            "title": "drop"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameV1"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationV1"
            },
            "title": "propertyValueTransformations"
          },
          "fqlDefinedProperties": {
            "description": "Optional array for defining new properties in FQL. Limited to 1 property right now.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FQLDefinedPropertyV1"
            },
            "title": "fqlDefinedProperties"
          },
          "allowProperties": {
            "description": "Optional array for allowing properties from your events.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "allowProperties"
          },
          "hashPropertiesConfiguration": {
            "description": "Optional object for hashing properties within an event.",
            "title": "hashPropertiesConfiguration",
            "allOf": [
              {
                "$ref": "#/components/schemas/HashPropertiesConfiguration"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "if",
          "name",
          "sourceId"
        ]
      },
      "PropertyRenameV1": {
        "title": "PropertyRenameV1",
        "type": "object",
        "properties": {
          "oldName": {
            "description": "The old name of the property.",
            "type": "string",
            "title": "oldName"
          },
          "newName": {
            "description": "The new name to rename the property.",
            "type": "string",
            "title": "newName"
          }
        },
        "additionalProperties": false,
        "required": [
          "newName",
          "oldName"
        ]
      },
      "PropertyValueTransformationV1": {
        "title": "PropertyValueTransformationV1",
        "type": "object",
        "properties": {
          "propertyPaths": {
            "description": "The property paths. The maximum number of paths is 10.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "propertyPaths"
          },
          "propertyValue": {
            "description": "The new value of the property paths.",
            "type": "string",
            "title": "propertyValue"
          }
        },
        "additionalProperties": false,
        "required": [
          "propertyPaths",
          "propertyValue"
        ]
      },
      "FQLDefinedPropertyV1": {
        "title": "FQLDefinedPropertyV1",
        "type": "object",
        "properties": {
          "fql": {
            "description": "The FQL expression used to compute the property.",
            "type": "string",
            "title": "fql"
          },
          "propertyName": {
            "description": "The new property name.",
            "type": "string",
            "title": "propertyName"
          }
        },
        "additionalProperties": false,
        "required": [
          "fql",
          "propertyName"
        ]
      },
      "HashPropertiesConfiguration": {
        "title": "HashPropertiesConfiguration",
        "type": "object",
        "properties": {
          "algorithm": {
            "description": "Which algorithm to use to hash to properties.",
            "type": "string",
            "title": "algorithm"
          },
          "key": {
            "description": "Optional key to hash with.",
            "type": "string",
            "title": "key"
          },
          "encoding": {
            "description": "Optional encoding to use for the hashing.",
            "enum": [
              "BASE16",
              "BASE64",
              "BASE64URL",
              "HEX"
            ],
            "type": "string",
            "title": "encoding"
          },
          "paths": {
            "description": "The paths to the properties to be hashed.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "paths"
          }
        },
        "additionalProperties": false,
        "required": [
          "algorithm",
          "paths"
        ]
      },
      "GetTransformationV1Output": {
        "description": "The output of Transformation retrieval.",
        "title": "GetTransformationV1Output",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The retrieved Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "transformation"
        ]
      },
      "GetTransformationV1Input": {
        "description": "The input of Transformation retrieval.",
        "title": "GetTransformationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListTransformationsV1Input": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListTransformationsV1Output": {
        "description": "Lists the Transformations associated with the current Workspace.",
        "title": "ListTransformationsV1Output",
        "type": "object",
        "properties": {
          "transformations": {
            "description": "A paginated list of Transformations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransformationV1"
            },
            "title": "transformations"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "transformations"
        ]
      },
      "DeleteTransformationV1Input": {
        "description": "The input of delete Transformation.",
        "title": "DeleteTransformationV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteTransformationV1Output": {
        "description": "The output of delete Transformation.",
        "title": "DeleteTransformationV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The operation status.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "UpdateTransformationV1Input": {
        "description": "The input to update a Transformation.",
        "title": "UpdateTransformationV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The optional Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n Track -\\> \"event='\\<eventName\\>'\"\n Identify -\\> \"type='identify'\"\n Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "drop": {
            "description": "Optional boolean value if the Transformation should drop the event entirely when the if statement matches, ignores all other transforms.",
            "type": "boolean",
            "title": "drop"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameV1"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationV1"
            },
            "title": "propertyValueTransformations"
          },
          "fqlDefinedProperties": {
            "description": "Optional array for updating properties defined in [FQL](https://segment.com/docs/config-api/fql/). Currently limited to 1 property.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FQLDefinedPropertyV1"
            },
            "title": "fqlDefinedProperties"
          },
          "allowProperties": {
            "description": "Optional array for allowing properties from your events.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "allowProperties"
          },
          "hashPropertiesConfiguration": {
            "description": "Optional object for hashing properties within an event.",
            "title": "hashPropertiesConfiguration",
            "allOf": [
              {
                "$ref": "#/components/schemas/HashPropertiesConfiguration"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "UpdateTransformationV1Output": {
        "description": "The output of an updated Transformation.",
        "title": "UpdateTransformationV1Output",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The updated Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "transformation"
        ]
      },
      "CreateTransformationV1Input": {
        "description": "The input to create a Transformation.",
        "title": "CreateTransformationV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Transformation.",
            "type": "string",
            "title": "name"
          },
          "sourceId": {
            "description": "The Source to be associated with the Transformation.",
            "type": "string",
            "title": "sourceId"
          },
          "destinationMetadataId": {
            "description": "The optional Destination metadata id to be associated with the Transformation.",
            "type": "string",
            "title": "destinationMetadataId"
          },
          "enabled": {
            "description": "If the Transformation should be enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "if": {
            "description": "If statement ([FQL](https://segment.com/docs/config-api/fql/)) to match events.\n\nFor standard event matchers, use the following:\n Track -\\> \"event='\\<eventName\\>'\"\n Identify -\\> \"type='identify'\"\n Group -\\> \"type='group'\"",
            "type": "string",
            "title": "if"
          },
          "drop": {
            "description": "Optional boolean value if the Transformation should drop the event entirely when the if statement matches, ignores all other transforms.",
            "type": "boolean",
            "title": "drop"
          },
          "newEventName": {
            "description": "Optional new event name for renaming events. Works only for 'track' event type.",
            "type": "string",
            "title": "newEventName"
          },
          "propertyRenames": {
            "description": "Optional array for renaming properties collected by your events.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyRenameV1"
            },
            "title": "propertyRenames"
          },
          "propertyValueTransformations": {
            "description": "Optional array for transforming properties and values collected by your events. Limited to 10 properties.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyValueTransformationV1"
            },
            "title": "propertyValueTransformations"
          },
          "fqlDefinedProperties": {
            "description": "Optional array for defining new properties in [FQL](https://segment.com/docs/config-api/fql/). Currently limited to 1 property.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FQLDefinedPropertyV1"
            },
            "title": "fqlDefinedProperties"
          },
          "allowProperties": {
            "description": "Optional array for allowing properties from your events.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "allowProperties"
          },
          "hashPropertiesConfiguration": {
            "description": "Optional object for hashing properties within an event.",
            "title": "hashPropertiesConfiguration",
            "allOf": [
              {
                "$ref": "#/components/schemas/HashPropertiesConfiguration"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "if",
          "name",
          "sourceId"
        ]
      },
      "CreateTransformationV1Output": {
        "description": "The output of a created Transformation.",
        "title": "CreateTransformationV1Output",
        "type": "object",
        "properties": {
          "transformation": {
            "description": "The created Transformation.",
            "title": "transformation",
            "allOf": [
              {
                "$ref": "#/components/schemas/TransformationV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "transformation"
        ]
      },
      "MtuSnapshotV1": {
        "description": "A snapshot of MTU metrics within the given usage period.",
        "title": "MtuSnapshotV1",
        "type": "object",
        "properties": {
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "additionalProperties": false,
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "timestamp"
        ]
      },
      "UsersPerSourceSnapshotV1": {
        "description": "A snapshot of MTU metrics for a given Source within the given usage period.",
        "title": "UsersPerSourceSnapshotV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id.",
            "type": "string",
            "title": "sourceId"
          },
          "periodStart": {
            "description": "The start of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodStart"
          },
          "periodEnd": {
            "description": "The end of the usage period, in unix time (seconds since epoch).",
            "type": "number",
            "title": "periodEnd"
          },
          "anonymous": {
            "description": "A bigint of the number of anonymous users in this snapshot.",
            "type": "string",
            "title": "anonymous"
          },
          "anonymousIdentified": {
            "description": "A bigint of the number of anonymous identified users in this snapshot.",
            "type": "string",
            "title": "anonymousIdentified"
          },
          "identified": {
            "description": "A bigint of the number of identified users in this snapshot.",
            "type": "string",
            "title": "identified"
          },
          "neverIdentified": {
            "description": "A bigint of the number of never identified users in this snapshot.",
            "type": "string",
            "title": "neverIdentified"
          },
          "timestamp": {
            "description": "The timestamp of this snapshot within the billing cycle, in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "additionalProperties": false,
        "required": [
          "anonymous",
          "anonymousIdentified",
          "identified",
          "neverIdentified",
          "periodEnd",
          "periodStart",
          "sourceId",
          "timestamp"
        ]
      },
      "APICallSnapshotV1": {
        "description": "A snapshot of the number of API calls for a given Workspace.",
        "title": "APICallSnapshotV1",
        "type": "object",
        "properties": {
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiCalls",
          "timestamp"
        ]
      },
      "SourceAPICallSnapshotV1": {
        "description": "A snapshot of the number of API calls for a given Source in a Workspace.",
        "title": "SourceAPICallSnapshotV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id.",
            "type": "string",
            "title": "sourceId"
          },
          "apiCalls": {
            "description": "A bigint of the number of API calls in this snapshot.",
            "type": "string",
            "title": "apiCalls"
          },
          "timestamp": {
            "description": "Timestamp of this snapshot within the billing cycle in the ISO-8601 format.",
            "type": "string",
            "title": "timestamp"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiCalls",
          "sourceId",
          "timestamp"
        ]
      },
      "GetDailyWorkspaceMTUUsageV1Input": {
        "description": "Input to retrieve aggregated daily Workspace MTU in a billing period.",
        "title": "GetDailyWorkspaceMTUUsageV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDailyWorkspaceMTUUsageV1Output": {
        "description": "Returns a list of daily aggregations of Workspace MTU counts.",
        "title": "GetDailyWorkspaceMTUUsageV1Output",
        "type": "object",
        "properties": {
          "dailyWorkspaceMTUUsage": {
            "description": "The list of daily Workspace MTU count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MtuSnapshotV1"
            },
            "title": "dailyWorkspaceMTUUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "dailyWorkspaceMTUUsage",
          "pagination"
        ]
      },
      "GetDailyPerSourceMTUUsageV1Input": {
        "description": "Input to retrieve aggregated daily Source level MTU in a billing period.",
        "title": "GetDailyPerSourceMTUUsageV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDailyPerSourceMTUUsageV1Output": {
        "description": "Returns a list of daily aggregations of Source level MTU counts.",
        "title": "GetDailyPerSourceMTUUsageV1Output",
        "type": "object",
        "properties": {
          "dailyPerSourceMTUUsage": {
            "description": "The list of daily per Source MTU count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsersPerSourceSnapshotV1"
            },
            "title": "dailyPerSourceMTUUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "dailyPerSourceMTUUsage",
          "pagination"
        ]
      },
      "GetDailyWorkspaceAPICallsUsageV1Input": {
        "description": "Input to retrieve aggregated daily Workspace API calls in a billing period.",
        "title": "GetDailyWorkspaceAPICallsUsageV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDailyWorkspaceAPICallsUsageV1Output": {
        "description": "Returns a list of daily aggregations of Workspace MTU counts.",
        "title": "GetDailyWorkspaceAPICallsUsageV1Output",
        "type": "object",
        "properties": {
          "dailyWorkspaceAPICallsUsage": {
            "description": "The list of daily Workspace API calls count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APICallSnapshotV1"
            },
            "title": "dailyWorkspaceAPICallsUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "dailyWorkspaceAPICallsUsage",
          "pagination"
        ]
      },
      "GetDailyPerSourceAPICallsUsageV1Input": {
        "description": "Input to retrieve aggregated daily Source level API calls in a billing period.",
        "title": "GetDailyPerSourceAPICallsUsageV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetDailyPerSourceAPICallsUsageV1Output": {
        "description": "Returns a list of daily aggregations of Source level API calls counts.",
        "title": "GetDailyPerSourceAPICallsUsageV1Output",
        "type": "object",
        "properties": {
          "dailyPerSourceAPICallsUsage": {
            "description": "The list of daily per Source API calls count aggregates.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceAPICallSnapshotV1"
            },
            "title": "dailyPerSourceAPICallsUsage"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "dailyPerSourceAPICallsUsage",
          "pagination"
        ]
      },
      "GetWarehousesCatalogV1Input": {
        "description": "Filter parameters used for loading the Warehouses public catalog.",
        "title": "GetWarehousesCatalogV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetWarehousesCatalogV1Output": {
        "description": "Returns a list of all Warehouse catalog items contained within a given page.",
        "title": "GetWarehousesCatalogV1Output",
        "type": "object",
        "properties": {
          "warehousesCatalog": {
            "description": "All Warehouse catalog items contained within the requested page.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseMetadataV1"
            },
            "title": "warehousesCatalog"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "warehousesCatalog"
        ]
      },
      "GetWarehouseMetadataV1Input": {
        "description": "Returns a Warehouse catalog item by id.",
        "title": "GetWarehouseMetadataV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetWarehouseMetadataV1Output": {
        "description": "Returns a Warehouse catalog item looked up by id.",
        "title": "GetWarehouseMetadataV1Output",
        "type": "object",
        "properties": {
          "warehouseMetadata": {
            "description": "The Warehouse catalog item.",
            "title": "warehouseMetadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseMetadataV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "warehouseMetadata"
        ]
      },
      "WarehouseMetadataV1": {
        "description": "The metadata for an instance of Segment’s data Warehouse product.",
        "title": "WarehouseMetadataV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of this object.",
            "type": "string",
            "title": "id"
          },
          "name": {
            "description": "The name of this object.",
            "type": "string",
            "title": "name"
          },
          "slug": {
            "description": "A human-readable, unique identifier for object.",
            "type": "string",
            "title": "slug"
          },
          "description": {
            "description": "A description, in English, of this object.",
            "type": "string",
            "title": "description"
          },
          "logos": {
            "description": "Logo information for this object.",
            "title": "logos",
            "allOf": [
              {
                "$ref": "#/components/schemas/LogosBeta"
              }
            ]
          },
          "options": {
            "description": "The Integration options for this object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationOptionBeta"
            },
            "title": "options"
          }
        },
        "additionalProperties": false,
        "required": [
          "description",
          "id",
          "logos",
          "name",
          "options",
          "slug"
        ]
      },
      "WarehouseSettingsV1": {
        "description": "A key-value object that contains instance-specific Warehouse settings.",
        "title": "WarehouseSettingsV1",
        "type": "object",
        "additionalProperties": {}
      },
      "WarehouseV1": {
        "description": "Defines a data Warehouse used as a Destination for Segment data.",
        "title": "WarehouseV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the Warehouse.",
            "type": "string",
            "title": "id"
          },
          "metadata": {
            "description": "The metadata for the Warehouse.",
            "title": "metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseMetadataV1"
              }
            ]
          },
          "workspaceId": {
            "description": "The id of the Workspace that owns this Warehouse.",
            "type": "string",
            "title": "workspaceId"
          },
          "enabled": {
            "description": "When set to true, this Warehouse receives data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "The settings associated with this Warehouse.\n\nCommon settings are connection-related configuration used to connect to it, for example host, username, and port.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "id",
          "metadata",
          "settings",
          "workspaceId"
        ]
      },
      "SyncNoticeV1": {
        "description": "Represents a notice within a sync for a Source and Warehouse pair.",
        "title": "SyncNoticeV1",
        "type": "object",
        "properties": {
          "level": {
            "description": "The severity of the notice.",
            "type": "string",
            "title": "level"
          },
          "message": {
            "description": "The human-readable message that describes the notice.",
            "type": "string",
            "title": "message"
          },
          "createdAt": {
            "description": "The timestamp of this sync notice's creation.",
            "type": "string",
            "title": "createdAt"
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "level",
          "message"
        ]
      },
      "SyncV1": {
        "description": "Represents a sync between a Source and Warehouse.\n\nA sync occurs when data from a Source is loaded into a Warehouse.",
        "title": "SyncV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source loaded in the sync.",
            "type": "string",
            "title": "sourceId"
          },
          "start": {
            "description": "The start time of the sync.",
            "type": "string",
            "title": "start"
          },
          "end": {
            "description": "The time the sync completed. Returns null if unfinished.",
            "type": "string",
            "title": "end",
            "nullable": true
          },
          "status": {
            "description": "The status of the sync.",
            "type": "string",
            "title": "status"
          },
          "duration": {
            "description": "The duration of the sync in seconds. Returns the partial duration if the sync has not finished yet.",
            "type": "number",
            "title": "duration"
          },
          "humanDuration": {
            "description": "The human-readable counterpart of `duration`.",
            "type": "string",
            "title": "humanDuration"
          },
          "count": {
            "description": "The number of rows synced into the Warehouse.",
            "type": "number",
            "title": "count"
          },
          "notices": {
            "description": "Notices that contain the events that occurred during the sync.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncNoticeV1"
            },
            "title": "notices"
          }
        },
        "additionalProperties": false,
        "required": [
          "count",
          "duration",
          "end",
          "humanDuration",
          "notices",
          "sourceId",
          "start",
          "status"
        ]
      },
      "WarehouseSyncOverrideV1": {
        "description": "Represents the override for a Source/collection/property? path to apply to a Warehouse.",
        "title": "WarehouseSyncOverrideV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The id of the Source this schema item applies to.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection the schema item override applies to.",
            "type": "string",
            "title": "collection"
          },
          "enabled": {
            "description": "Enable to apply the override.",
            "type": "boolean",
            "title": "enabled"
          },
          "property": {
            "description": "A property within the collection to which the override applies.",
            "type": "string",
            "title": "property"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "sourceId"
        ]
      },
      "WarehouseSelectiveSyncItemV1": {
        "description": "Represents an entry in the Warehouse Selective Sync schema for a Warehouse and Source pair.",
        "title": "WarehouseSelectiveSyncItemV1",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "The Source id attached to this Warehouse.",
            "type": "string",
            "title": "sourceId"
          },
          "collection": {
            "description": "The collection within the Source.",
            "type": "string",
            "title": "collection"
          },
          "warehouseId": {
            "description": "The id of the Warehouse this sync belongs to.",
            "type": "string",
            "title": "warehouseId"
          },
          "enabled": {
            "description": "Whether this Selective Sync item is enabled.",
            "type": "boolean",
            "title": "enabled"
          },
          "properties": {
            "description": "A map that contains the properties within the collection to which the Warehouse should sync.",
            "type": "object",
            "additionalProperties": true,
            "title": "properties"
          }
        },
        "additionalProperties": false,
        "required": [
          "collection",
          "enabled",
          "properties",
          "sourceId",
          "warehouseId"
        ]
      },
      "WarehouseAdvancedSyncV1": {
        "description": "Determines the time of day at which a Warehouse should sync.",
        "title": "WarehouseAdvancedSyncV1",
        "type": "object",
        "properties": {
          "hourOfDay": {
            "description": "The hour of day for which to enable/disable a sync, between 0 and 23.",
            "type": "number",
            "title": "hourOfDay"
          },
          "enabled": {
            "description": "Enable to the sync at the specified hour.",
            "type": "boolean",
            "title": "enabled"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "hourOfDay"
        ]
      },
      "AdvancedWarehouseSyncScheduleV1Input": {
        "description": "Defines the advanced sync schedule for a Warehouse.",
        "title": "AdvancedWarehouseSyncScheduleV1Input",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseAdvancedSyncV1"
            },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        },
        "additionalProperties": false,
        "required": [
          "times",
          "timezone"
        ]
      },
      "AdvancedWarehouseSyncScheduleV1Output": {
        "description": "Defines the advanced sync schedule for a Warehouse.",
        "title": "AdvancedWarehouseSyncScheduleV1Output",
        "type": "object",
        "properties": {
          "times": {
            "description": "A list that contains the times when syncs should occur.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseAdvancedSyncV1"
            },
            "title": "times"
          },
          "timezone": {
            "description": "A TZ-database timezone for this sync schedule.",
            "type": "string",
            "title": "timezone"
          }
        },
        "additionalProperties": false
      },
      "ListWarehousesV1Input": {
        "description": "Gets a list of Warehouses belonging to a Workspace.",
        "title": "ListWarehousesV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListWarehousesV1Output": {
        "description": "Returns a list of Warehouses that belong to a Workspace.",
        "title": "ListWarehousesV1Output",
        "type": "object",
        "properties": {
          "warehouses": {
            "description": "A list of Warehouses that belong to the Workspace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseV1"
            },
            "title": "warehouses"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "warehouses"
        ]
      },
      "GetWarehouseV1Input": {
        "description": "Looks up a Warehouse by id.",
        "title": "GetWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetWarehouseV1Output": {
        "description": "Returns a Warehouse.",
        "title": "GetWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "description": "The returned Warehouse object.",
            "title": "warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "warehouse"
        ]
      },
      "ListConnectedSourcesFromWarehouseV1Input": {
        "description": "Looks up the list of Sources connected to a Warehouse.",
        "title": "ListConnectedSourcesFromWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListConnectedSourcesFromWarehouseV1Output": {
        "description": "Returns a list of Sources connected to a Warehouse.",
        "title": "ListConnectedSourcesFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "sources": {
            "description": "A list that contains the Sources connected to the requested Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SourceV1"
            },
            "title": "sources"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "sources"
        ]
      },
      "ListSyncsFromWarehouseV1Input": {
        "description": "Requests the overview of syncs for every Source connected to this Warehouse.",
        "title": "ListSyncsFromWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSyncsFromWarehouseV1Output": {
        "description": "Returns an overview page that contains the last syncs for a Warehouse.",
        "title": "ListSyncsFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncV1"
            },
            "title": "reports"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "reports"
        ]
      },
      "ListSyncsFromWarehouseAndSourceV1Input": {
        "description": "Loads the most recent sync information for a Warehouse-source pair.",
        "title": "ListSyncsFromWarehouseAndSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSyncsFromWarehouseAndSourceV1Output": {
        "description": "Returns a list that contains the most recent syncs for a Warehouse-source pair, filtered and constrained by a given\nset of pagination parameters.",
        "title": "ListSyncsFromWarehouseAndSourceV1Output",
        "type": "object",
        "properties": {
          "reports": {
            "description": "A list that contains the latest syncs for the specified Warehouse-source pair.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncV1"
            },
            "title": "reports"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "pagination",
          "reports"
        ]
      },
      "AddConnectionFromSourceToWarehouseV1Input": {
        "description": "Connects a Source to a Warehouse.\n\nPosting to this idempotent endpoint creates a connection between the Source and Warehouse, and begins syncing data\nfrom the Source's collections into the chosen Warehouse Destination.",
        "title": "AddConnectionFromSourceToWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "AddConnectionFromSourceToWarehouseV1Output": {
        "description": "Response indicating whether the connection was successful.",
        "title": "AddConnectionFromSourceToWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the connection between the Source and Warehouse.",
            "enum": [
              "CONNECTED",
              "NOT_CONNECTED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "RemoveSourceConnectionFromWarehouseV1Input": {
        "description": "Disconnects a Source from a Warehouse.\n\nPosting to this idempotent endpoint removes a connection between the Source and Warehouse, and blocks all syncing\nfrom the Source's collections into the chosen Warehouse Destination.",
        "title": "RemoveSourceConnectionFromWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "RemoveSourceConnectionFromWarehouseV1Output": {
        "description": "Response indicating whether the disconnection was successful.",
        "title": "RemoveSourceConnectionFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the request to disconnect the Source and Warehouse.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "ListSelectiveSyncsFromWarehouseAndSourceV1Input": {
        "description": "Get the Selective Sync configuration associated with a Warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "ListSelectiveSyncsFromWarehouseAndSourceV1Output": {
        "description": "Results containing the Selective Sync configuration for a Warehouse.",
        "title": "ListSelectiveSyncsFromWarehouseAndSourceV1Output",
        "type": "object",
        "properties": {
          "items": {
            "description": "Represents a list of Source, collection, and properties synced to the Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseSelectiveSyncItemV1"
            },
            "title": "items"
          },
          "pagination": {
            "description": "Information about the pagination of this response.",
            "title": "pagination",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationOutput"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "items",
          "pagination"
        ]
      },
      "UpdateSelectiveSyncForWarehouseV1Input": {
        "description": "Updates the schema for a Warehouse/sources pair.",
        "title": "UpdateSelectiveSyncForWarehouseV1Input",
        "type": "object",
        "properties": {
          "syncOverrides": {
            "description": "A list of sync schema overrides to apply to this Warehouse.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseSyncOverrideV1"
            },
            "title": "syncOverrides"
          }
        },
        "additionalProperties": false,
        "required": [
          "syncOverrides"
        ]
      },
      "UpdateSelectiveSyncForWarehouseV1Output": {
        "description": "Results from updating the schema for a Warehouse/source pair.",
        "title": "UpdateSelectiveSyncForWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "Status of the update operation.",
            "enum": [
              "UNCHANGED",
              "UPDATED"
            ],
            "type": "string",
            "title": "status"
          },
          "warnings": {
            "description": "Warnings returned by the operation.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "warnings"
          }
        },
        "additionalProperties": false,
        "required": [
          "status",
          "warnings"
        ]
      },
      "GetAdvancedSyncScheduleFromWarehouseV1Input": {
        "description": "Gets the advanced sync schedule for a Warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetAdvancedSyncScheduleFromWarehouseV1Output": {
        "description": "Returns the advanced sync schedule for a Warehouse.",
        "title": "GetAdvancedSyncScheduleFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for this Warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the schedule overrides for the specified Warehouse, if enabled.",
            "title": "schedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Output"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled"
        ]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseV1Input": {
        "description": "Replaces the advanced sync schedule for a Warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseV1Input",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Enable to turn on an advanced sync schedule for the Warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The full sync schedule for the Warehouse.",
            "title": "schedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Input"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled"
        ]
      },
      "ReplaceAdvancedSyncScheduleForWarehouseV1Output": {
        "description": "Returns the advanced sync schedule for a Warehouse.",
        "title": "ReplaceAdvancedSyncScheduleForWarehouseV1Output",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Indicates if an advanced sync schedule is enabled for the Warehouse.",
            "type": "boolean",
            "title": "enabled"
          },
          "schedule": {
            "description": "The schedule that contains the overrides for the Warehouse, if enabled.",
            "title": "schedule",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdvancedWarehouseSyncScheduleV1Output"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled"
        ]
      },
      "CreateWarehouseV1Input": {
        "description": "Create a new Warehouse based on a set of parameters.",
        "title": "CreateWarehouseV1Input",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The Warehouse metadata to use.",
            "type": "string",
            "title": "metadataId"
          },
          "name": {
            "description": "An optional human-readable name for this Warehouse.",
            "type": "string",
            "title": "name"
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data. Defaults to true.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          },
          "disconnectAllSources": {
            "description": "Whether to disconnect all Sources from this Warehouse.",
            "type": "boolean",
            "title": "disconnectAllSources"
          }
        },
        "additionalProperties": false,
        "required": [
          "metadataId",
          "settings"
        ]
      },
      "CreateWarehouseV1Output": {
        "description": "Returns the newly created Warehouse.",
        "title": "CreateWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "description": "The newly created Warehouse.",
            "title": "warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "warehouse"
        ]
      },
      "UpdateWarehouseV1Input": {
        "description": "Updates an existing Warehouse based on a set of parameters.",
        "title": "UpdateWarehouseV1Input",
        "type": "object",
        "properties": {
          "name": {
            "description": "An optional human-readable name to associate with this Warehouse.",
            "type": "string",
            "title": "name",
            "nullable": true
          },
          "enabled": {
            "description": "Enable to allow this Warehouse to receive data.",
            "type": "boolean",
            "title": "enabled"
          },
          "settings": {
            "description": "A key-value object that contains instance-specific settings for a Warehouse.\n\nDifferent kinds of Warehouses require different settings. The required and optional settings\nfor a Warehouse are described in the `options` object of the associated Warehouse metadata.\n\nYou can find the full list of Warehouse metadata and related settings information in the\n`/catalog/warehouses` endpoint.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "settings"
        ]
      },
      "UpdateWarehouseV1Output": {
        "description": "Returns the updated Warehouse.",
        "title": "UpdateWarehouseV1Output",
        "type": "object",
        "properties": {
          "warehouse": {
            "description": "The updated Warehouse.",
            "title": "warehouse",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "warehouse"
        ]
      },
      "DeleteWarehouseV1Input": {
        "description": "Deletes an existing Warehouse by id.",
        "title": "DeleteWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "DeleteWarehouseV1Output": {
        "description": "Returns the status of a Warehouse deletion.",
        "title": "DeleteWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the Warehouse deletion operation.",
            "type": "string",
            "enum": [
              "SUCCESS"
            ],
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "GetConnectionStateFromWarehouseV1Input": {
        "description": "Verifies the connection state of a Warehouse.\n\nUse this to check if a Warehouse is reachable, given its stored connection settings.",
        "title": "GetConnectionStateFromWarehouseV1Input",
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "GetConnectionStateFromWarehouseV1Output": {
        "description": "Returns the status of a Warehouse connection settings after an attempt to connect to it.",
        "title": "GetConnectionStateFromWarehouseV1Output",
        "type": "object",
        "properties": {
          "connectionState": {
            "description": "Represents the status for the current connection settings.",
            "enum": [
              "CONNECTED",
              "FAILED"
            ],
            "type": "string",
            "title": "connectionState"
          }
        },
        "additionalProperties": false,
        "required": [
          "connectionState"
        ]
      },
      "CreateValidationInWarehouseV1Output": {
        "description": "Returns the status of a Warehouse connection settings after an attempt to connect to it.",
        "title": "CreateValidationInWarehouseV1Output",
        "type": "object",
        "properties": {
          "status": {
            "description": "Represents the status for the current connection settings.",
            "enum": [
              "CONNECTED",
              "FAILED"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "status"
        ]
      },
      "CreateValidationInWarehouseV1Input": {
        "description": "Verifies a set of Warehouse credentials by attempting to connect to it.",
        "title": "CreateValidationInWarehouseV1Input",
        "type": "object",
        "properties": {
          "metadataId": {
            "description": "The id of the Warehouse metadata type.",
            "type": "string",
            "title": "metadataId"
          },
          "settings": {
            "description": "The settings to check.",
            "title": "settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseSettingsV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "metadataId",
          "settings"
        ]
      },
      "WorkspaceV1": {
        "description": "An organized group of Sources and Destinations managed by a team.",
        "title": "WorkspaceV1",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier.",
            "type": "string",
            "title": "id"
          },
          "slug": {
            "description": "The URL-friendly slug.",
            "type": "string",
            "title": "slug"
          },
          "name": {
            "description": "The human-readable name.",
            "type": "string",
            "title": "name"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "slug"
        ]
      },
      "GetWorkspaceV1Input": {
        "description": "Loads the Workspace associated with the token.",
        "title": "GetWorkspaceV1Input",
        "type": "object",
        "additionalProperties": false
      },
      "GetWorkspaceV1Output": {
        "description": "Represents the output of loading the Workspace.",
        "title": "GetWorkspaceV1Output",
        "type": "object",
        "properties": {
          "workspace": {
            "description": "The Workspace.",
            "title": "workspace",
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkspaceV1"
              }
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "workspace"
        ]
      },
      "RequestError": {
        "description": "Represents any error that could have occurred while performing a request.",
        "title": "RequestError",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type for this error (validation, server, unknown, etc).",
            "type": "string",
            "title": "type"
          },
          "message": {
            "description": "An error message attached to this error.",
            "type": "string",
            "title": "message"
          },
          "field": {
            "description": "The name of an input field from the request that triggered this error.",
            "type": "string",
            "title": "field"
          },
          "data": {
            "description": "Any extra data associated with this error.",
            "title": "data"
          },
          "status": {
            "description": "Http status code.",
            "type": "number",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "type"
        ]
      },
      "PaginationInput": {
        "description": "Pagination parameters.\n\nEvery resource that returns a list of items in its `Output` object may contain a `PaginationInput` in its `Input`\nobject. Required, though some of its fields are optional.",
        "title": "PaginationInput",
        "type": "object",
        "properties": {
          "cursor": {
            "description": "The page to request.\n\nAcceptable values to use here are in PaginationOutput objects, in the `current`, `next`, and `previous` keys.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "cursor"
          },
          "count": {
            "description": "The number of items to retrieve in a page, between 1 and 1000.",
            "type": "integer",
            "title": "count"
          }
        },
        "additionalProperties": false,
        "required": [
          "count"
        ]
      },
      "PaginationOutput": {
        "description": "Pagination metadata for a list response.\n\nResponses return this object alongside a list of resources, which provides the necessary metadata for manipulating a\npaginated collection. In operations that return lists, it's always present, though some of its fields might not be.",
        "title": "PaginationOutput",
        "type": "object",
        "properties": {
          "current": {
            "description": "The current cursor within a collection.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "current"
          },
          "next": {
            "description": "A pointer to the next page.\n\nThis does not return when you retrieve the last page.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "next",
            "nullable": true
          },
          "previous": {
            "description": "A pointer to the previous page.\n\nThis does not return when you retrieve the first page.\n\nConsumers of the API must treat this value as opaque.",
            "type": "string",
            "title": "previous",
            "nullable": true
          },
          "totalEntries": {
            "description": "The total number of entries available in the collection.\n\nIf calculating it impacts performance, the response may omit this field.",
            "type": "number",
            "title": "totalEntries"
          }
        },
        "additionalProperties": false,
        "required": [
          "current"
        ]
      },
      "RequestErrorEnvelope": {
        "title": "RequestErrorEnvelope",
        "description": "Envelope type for RequestErrors.",
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestError"
            }
          }
        },
        "required": [
          "errors"
        ]
      }
    }
  },
  "x-domain-hierarchy": [
    {
      "name": "Engage",
      "subDomains": [
        {
          "name": "Audiences",
          "subDomains": [
            {
              "name": "Activations",
              "subDomains": []
            }
          ]
        },
        {
          "name": "Spaces",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Connections",
      "subDomains": [
        {
          "name": "Warehouses",
          "subDomains": []
        },
        {
          "name": "Sources",
          "subDomains": []
        },
        {
          "name": "Reverse ETL",
          "subDomains": []
        },
        {
          "name": "Deletion and Suppression",
          "subDomains": []
        },
        {
          "name": "dbt",
          "subDomains": []
        },
        {
          "name": "Destinations",
          "subDomains": []
        },
        {
          "name": "Edge Functions",
          "subDomains": []
        },
        {
          "name": "Destination Filters",
          "subDomains": []
        },
        {
          "name": "Functions",
          "subDomains": []
        },
        {
          "name": "Profiles Sync",
          "subDomains": []
        },
        {
          "name": "Selective Sync",
          "subDomains": []
        },
        {
          "name": "Catalog",
          "subDomains": []
        },
        {
          "name": "Delivery Overview",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Admin",
      "subDomains": [
        {
          "name": "IAM Users",
          "subDomains": []
        },
        {
          "name": "IAM Groups",
          "subDomains": []
        },
        {
          "name": "Labels",
          "subDomains": []
        },
        {
          "name": "Audit Trail",
          "subDomains": []
        },
        {
          "name": "IAM Roles",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Protocols",
      "subDomains": [
        {
          "name": "Tracking Plans",
          "subDomains": []
        },
        {
          "name": "Transformations",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Unify",
      "subDomains": [
        {
          "name": "Computed Traits",
          "subDomains": []
        },
        {
          "name": "Space Filters",
          "subDomains": []
        }
      ]
    },
    {
      "name": "customer-insights",
      "subDomains": []
    },
    {
      "name": "General",
      "subDomains": [
        {
          "name": "Testing",
          "subDomains": []
        },
        {
          "name": "Workspaces",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Usage",
      "subDomains": [
        {
          "name": "API Calls",
          "subDomains": []
        },
        {
          "name": "Monthly Tracked Users",
          "subDomains": []
        }
      ]
    },
    {
      "name": "Monitoring",
      "subDomains": [
        {
          "name": "Events",
          "subDomains": []
        }
      ]
    }
  ],
  "x-tagGroups": [
    {
      "name": "Guides",
      "tags": [
        "Introduction",
        "Getting Started",
        "Benefits",
        "Migration",
        "Authentication",
        "Error Handling",
        "Request Validation",
        "Rate Limits",
        "Payload Limits",
        "Pagination",
        "Versioning"
      ]
    },
    {
      "name": "Engage",
      "tags": [
        "Activations",
        "Spaces",
        "Audiences"
      ]
    },
    {
      "name": "Connections",
      "tags": [
        "Warehouses",
        "Sources",
        "Reverse ETL",
        "Deletion and Suppression",
        "dbt",
        "Destinations",
        "Edge Functions",
        "Destination Filters",
        "Functions",
        "Profiles Sync",
        "Selective Sync",
        "Catalog",
        "Delivery Overview"
      ]
    },
    {
      "name": "Admin",
      "tags": [
        "IAM Users",
        "IAM Groups",
        "Labels",
        "Audit Trail",
        "IAM Roles"
      ]
    },
    {
      "name": "Protocols",
      "tags": [
        "Tracking Plans",
        "Transformations"
      ]
    },
    {
      "name": "Unify",
      "tags": [
        "Computed Traits",
        "Space Filters"
      ]
    },
    {
      "name": "",
      "tags": [
        "customer-insights"
      ]
    },
    {
      "name": "General",
      "tags": [
        "Testing",
        "Workspaces"
      ]
    },
    {
      "name": "Usage",
      "tags": [
        "API Calls",
        "Monthly Tracked Users"
      ]
    },
    {
      "name": "Monitoring",
      "tags": [
        "Events"
      ]
    }
  ]
}