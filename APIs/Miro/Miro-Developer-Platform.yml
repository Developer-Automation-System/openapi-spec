openapi: 3.0.0
info:
  title: Miro Developer Platform
  description: >
    <img
    src="https://content.pstmn.io/47449ea6-0ef7-4af2-bac1-e58a70e61c58/aW1hZ2UucG5n"
    width="1685" height="593">


    ### Miro Developer Platform concepts


    - New to the Miro Developer Platform? Interested in learning more about
    platform concepts??

    [Read our introduction
    page](https://beta.developers.miro.com/docs/introduction) and familiarize
    yourself with the Miro Developer Platform capabilities in a few minutes.



    ### Getting started with the Miro REST API


    - [Quickstart
    (video):](https://beta.developers.miro.com/docs/try-out-the-rest-api-in-less-than-3-minutes)
    try the REST API in less than 3 minutes.

    - [Quickstart
    (article):](https://beta.developers.miro.com/docs/build-your-first-hello-world-app-1)
    get started and try the REST API in less than 3 minutes.



    ### Miro REST API tutorials


    Check out our how-to articles with step-by-step instructions and code
    examples so you can:


    - [Get started with OAuth 2.0 and
    Miro](https://beta.developers.miro.com/docs/getting-started-with-oauth)



    ### Miro App Examples


    Clone our [Miro App Examples
    repository](https://github.com/miroapp/app-examples) to get inspiration,
    customize, and explore apps built on top of Miro's Developer Platform 2.0.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Tokens
  - name: Board export job
  - name: Board Content Logs
  - name: 'Board classification: Organization level'
  - name: 'Board classification: Team level'
  - name: 'Board classification: Board level'
  - name: Organizations
  - name: Organization Members
  - name: Projects
  - name: Project Settings
  - name: Project Members
  - name: Teams
  - name: Team Members
  - name: Team Settings
  - name: Frames
  - name: Items
  - name: Webhooks (experimental)
  - name: Mind map nodes (experimental)
  - name: Flowchart shapes (experimental)
  - name: Tags
  - name: Boards
  - name: App Cards
  - name: Cards
  - name: Connectors
  - name: Documents
  - name: Embeds
  - name: Images
  - name: Board Members
  - name: Shapes
  - name: Sticky Notes
  - name: Texts
paths:
  /v1/oauth/revoke:
    post:
      tags:
        - Tokens
      summary: Revoke token
      description: >-
        Revoke the current access token. Revoking an access token means that the
        access token will no longer work. When an access token is revoked, the
        refresh token is also revoked and no longer valid. This does not
        uninstall the application for the user.
      requestBody:
        content: {}
      parameters:
        - name: access_token
          in: query
          schema:
            type: string
          description: (Required) Access token that you want to revoke
          example: '{{access_token}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v1/oauth-token:
    get:
      tags:
        - Tokens
      summary: Get access token information
      description: >-
        Get information about an access token, such as the token type, scopes,
        team, user, token creation date and time, and the user who created the
        token.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/boards/export/jobs:
    post:
      tags:
        - Board export job
      summary: Create board export job
      description: >-
        Creates an export job for one or more boards.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:export</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin and eDiscovery is enabled in the Settings. You can request
        temporary access to Enterprise APIs using <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                boardIds:
                  - o9J_kzlUDmo=
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: request_id
          in: query
          schema:
            type: string
          description: (Required) Unique identifier of the board export job.
          example: 92343229-c532-446d-b8cb-2f155bedb807
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) Unique identifier of the organization.
          example: '3074457345821141000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/boards/export/jobs/{job_id}:
    get:
      tags:
        - Board export job
      summary: Get board export job status
      description: >-
        Retrieves the status of the board export job.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:export</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin and eDiscovery is enabled in the Settings. You can request
        temporary access to Enterprise APIs using <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) Unique identifier of the organization.
          example: '3074457345821141000'
        - name: job_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the board export job.
          example: 92343229-c532-446d-b8cb-2f155bedb807
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/boards/export/jobs/{job_id}/results:
    get:
      tags:
        - Board export job
      summary: Get results for board export job
      description: >-
        Retrieves the result of the board export job. The response provides more
        information about the board export job, such as the S3 link to the files
        created.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:export</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin and eDiscovery is enabled in the Settings. You can request
        temporary access to Enterprise APIs using <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) Unique identifier of the organization.
          example: '3074457345821141000'
        - name: job_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the job.
          example: 92343229-c532-446d-b8cb-2f155bedb807
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/content-logs/items:
    get:
      tags:
        - Board Content Logs
      summary: Retrieve content change logs of board items
      description: >
        Retrieves content changes for board items within your organization.
        Content changes are actions that users can perform on board items, such
        as updating a sticky note's text. You can retrieve results for a
        specific time period. You can also filter results based on the board IDs
        and the emails of users who created, modified, or deleted a board item.
        Additionally, results can be paginated for easier viewing and
        processing.

        <br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>contentlogs:export</a>

        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>

        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin.</p>
      parameters:
        - name: board_ids
          in: query
          schema:
            type: string
          description: List of board IDs for which you want to retrieve the content logs.
          example: o9J_kzlUDmo=
        - name: emails
          in: query
          schema:
            type: string
          description: >-
            Filter content logs based on the list of emails of users who
            created, modified, or deleted the board item.
          example: someone@domain.com
        - name: from
          in: query
          schema:
            type: string
          description: >
            (Required) Filter content logs based on the date and time when the
            board item was last modified. This is the start date and time for
            the modified date duration.

            Format: UTC, adheres to [ISO
            8601](https://en.wikipedia.org/wiki/ISO_8601), includes a [trailing
            Z
            offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
          example: '2022-03-30T17:26:50Z'
        - name: to
          in: query
          schema:
            type: string
          description: >
            (Required) Filter content logs based on the date and time when the
            board item was last modified. This is the end date and time for the
            modified date duration. Format: UTC, adheres to

            [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), includes a
            [trailing Z
            offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
          example: '2023-03-30T17:26:50Z'
        - name: cursor
          in: query
          schema:
            type: string
          description: >
            A cursor-paginated method returns a portion of the total set of
            results based on the limit specified and a cursor that points to the
            next portion of the results. To retrieve the next portion of the
            collection, set the cursor parameter equal to the cursor value you
            received in the response of the previous request.
          example: MTY2OTg4NTIwMDAwMHwxMjM=
        - name: limit
          in: query
          schema:
            type: integer
          description: >
            The maximum number of results to return per call. If the number of
            logs in the response is greater than the limit specified, the
            response returns the cursor parameter with a value.
          example: '1000'
        - name: sorting
          in: query
          schema:
            type: string
          description: >
            Sort order in which you want to view the result set based on the
            modified date. To sort by an ascending modified date, specify `asc`.
            To sort by a descending modified date, specify `desc`.
          example: asc
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) Unique identifier of the organization.
          example: '3074457345821141000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/data-classification-settings:
    get:
      tags:
        - 'Board classification: Organization level'
      summary: Get organization settings
      description: >-
        Retrieves board classification settings for an existing
        organization.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/data-classification:
    patch:
      tags:
        - 'Board classification: Team level'
      summary: Bulk update boards classification
      description: >-
        Updates board classification for not-classified only or all boards in an
        existing team.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                labelId: 3000457366756291000
                notClassifiedOnly: true
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the team
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/data-classification-settings:
    get:
      tags:
        - 'Board classification: Team level'
      summary: Get team settings
      description: >-
        Retrieves board classification settings for an existing
        team.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the team
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - 'Board classification: Team level'
      summary: Update team settings
      description: >-
        Updates board classification settings for an existing
        team.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                defaultLabelId: 3000457366756291000
                enabled: true
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the team
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/boards/{board_id}/data-classification:
    get:
      tags:
        - 'Board classification: Board level'
      summary: Get board classification
      description: >-
        Retrieves board classification for a board.<br/><h3>Required scope</h3>
        <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the team
          example: '3074457345618265000'
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the board that you want to retrieve.
          example: o9J_kzlUDmo=
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - 'Board classification: Board level'
      summary: Update board classification
      description: >-
        Updates board classification for an existing board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                labelId: '3000457366756290996'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the team
          example: '3074457345618265000'
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier of the board that you want to update.
          example: o9J_kzlUDmo=
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}:
    get:
      tags:
        - Organizations
      summary: Get organization info
      description: >-
        Retrieves organization information.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/members:
    get:
      tags:
        - Organization Members
      summary: Get organization members
      description: >-
        Retrieves organization members based on the organization ID and the
        cursor, or based on the user emails provided in the
        request.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: emails
          in: query
          schema:
            type: string
          example: someEmail1@miro.com
        - name: role
          in: query
          schema:
            type: string
          example: organization_internal_admin
        - name: license
          in: query
          schema:
            type: string
          example: full
        - name: active
          in: query
          schema:
            type: boolean
          example: 'false'
        - name: cursor
          in: query
          schema:
            type: integer
          example: '3055557345821141000'
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/members/{member_id}:
    get:
      tags:
        - Organization Members
      summary: Get organization member
      description: >-
        Retrieves organization member information for an existing
        organization.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization
          example: '3074457345821141000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) id of the organization member
          example: '3055557345821141000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/projects:
    post:
      tags:
        - Projects
      summary: Create project
      description: >-
        Projects are essentially folders of boards with the option to manage
        user access for a smaller group of people within a team. Projects are
        here to help you organize your boards and make them easier to find and
        share. In other words, a project is a group of boards that you can share
        with your teammates all at once. For more information, see our <a
        href="https://help.miro.com/hc/en-us/articles/360018262033-Projects"
        target=_blank>Help Center page on Projects</a>. <br><br>This API creates
        a new project in an existing team of an organization.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Product Guild project
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the organization within which you you want to
            create a project.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the team within which you you want to create a
            project.
          example: '3074457345619012000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Projects
      summary: List of projects
      description: >-
        Retrieves the list of projects in an existing team of an organization.
        You can retrieve all projects, including all private projects (projects
        that haven't been specifically shared with you) by enabling Content
        Admin permissions. To enable Content Admin permissions, see [Content
        Admin permissions for Company
        Admins](https://help.miro.com/hc/en-us/articles/360012777280-Content-Admin-permissions-for-Company-Admins).<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            The maximum number of results to return per call. If the number of
            projects in the response is greater than the limit specified, the
            response returns the cursor parameter with a value.
          example: '100'
        - name: cursor
          in: query
          schema:
            type: integer
          description: >-
            An indicator of the position of a page in the full set of results.
            To obtain the first page leave it empty. To obtain subsequent pages
            set it to the value returned in the cursor field of the previous
            request.
          example: '3074457345618265000'
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the organization from which you want to
            retrieve the list of available projects.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the team from which you want to retrieve the
            list of available projects.
          example: '3074457345619012000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/projects/{project_id}:
    get:
      tags:
        - Projects
      summary: Get project
      description: >-
        Retrieves project information, such as a name for an existing
        project.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the organization from which you want to
            retrieve the project information.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the team from which you want to retrieve the
            project information.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the project for which you want to retrieve the
            information.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Projects
      summary: Update project
      description: >-
        Update information about a project, such as the project
        name.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Product Guild project
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of an Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of a Team.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of a Project.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Projects
      summary: Delete project
      description: >-
        Deletes a project. After a project is deleted, all boards and users that
        belong to the project remain in the team.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the organization from which you want to delete
            a project.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the team from which you want to delete a
            project.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the project that you want to delete.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/projects/{project_id}/settings:
    get:
      tags:
        - Project Settings
      summary: Get project settings
      description: >-
        Retrieves the project settings.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>projects:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the organization to which the project belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project belongs.
          example: '3074457345619012091'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the project for which you want to retrieve the
            project settings.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Project Settings
      summary: Update project settings
      description: >-
        Updates the settings of a project.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sharingPolicySettings:
                  teamAccess: private
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the organization to which the project belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project belongs.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the project whose settings you want to update.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/projects/{project_id}/members:
    post:
      tags:
        - Project Members
      summary: Add member in a project
      description: >-
        Add a Miro user to a project.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: someone@domain.com
                role: viewer
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the organization to which the project belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project belongs.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the project to which you want to add a user.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Project Members
      summary: List of project members
      description: >-
        Retrieves the list of members for a specific project.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            The maximum number of results to return per call. If the number of
            project members in the response is greater than the limit specified,
            the response returns the cursor parameter with a value.
          example: '100'
        - name: cursor
          in: query
          schema:
            type: integer
          description: >-
            An indicator of the position of a page in the full set of results.
            To obtain the first page leave it empty. To obtain subsequent pages
            set it to the value returned in the cursor field of the previous
            request.
          example: '3074457345618265000'
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the organization to which the project belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project belongs.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the project for which you want to retrieve the
            list of members.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/projects/{project_id}/members/{member_id}:
    get:
      tags:
        - Project Members
      summary: Get project member
      description: >-
        Retrieves information for a specific project member.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the organization to which the project belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project belongs.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the project from which you want to retrieve
            specific member information.
          example: '3074457345618265000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the member for which you want to retrieve
            information.
          example: '307445734562315000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Project Members
      summary: Update project member
      description: >-
        Updates details of a project member, such as the member's
        role.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: viewer
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the organization to which the project member
            belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project member belongs.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of a Project.
          example: '3074457345618265000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the member whose details you want to update.
          example: '307445734562315000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Project Members
      summary: Remove project member
      description: >-
        Remove a member from a project. The user remains in the team even after
        the member is removed from a project.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>projects:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the organization to which the project belongs.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The ID of the team to which the project belongs.
          example: '3074457345619012000'
        - name: project_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the project from which you want to remove a
            member.
          example: '3074457345618265000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: >-
            (Required) The ID of the member that you want to remove from a
            project.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams:
    post:
      tags:
        - Teams
      summary: Create team
      description: >-
        Creates a new team in an existing organization.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: My Team
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Teams
      summary: List teams
      description: >-
        Retrieves list of teams in an existing organization.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: cursor
          in: query
          schema:
            type: integer
          description: >-
            An indicator of the position of a page in the full set of results.
            To obtain the first page leave it empty. To obtain subsequent pages
            set it to the value returned in the cursor field of the previous
            request.
          example: '3055557345821140500'
        - name: name
          in: query
          schema:
            type: string
          description: >-
            Name query. Filters teams by name using case insensitive partial
            match. A value "dev" will return both "Developer's team" and "Team
            for developers".
          example: My team
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}:
    get:
      tags:
        - Teams
      summary: Get team
      description: >-
        Retrieves team information for an existing team.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Teams
      summary: Update team
      description: >-
        Updates an existing team.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: My Team
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Teams
      summary: Delete team
      description: >-
        Deletes an existing team.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/members:
    post:
      tags:
        - Team Members
      summary: Invite team members
      description: >-
        Invites a new Miro user to an existing team. The user must exist in your
        Miro organization. Users who do not exist in your Miro organization can
        be invited to the team via [SCIM](https://developers.miro.com/docs/scim)
        and an external identity provider, such as Okta or Azure Active
        Directory.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: user@miro.com
                role: member
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Team Members
      summary: List team members
      description: >-
        Retrieves team members by cursor.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '100'
        - name: cursor
          in: query
          schema:
            type: integer
          description: >-
            An indicator of the position of a page in the full set of results.
            To obtain the first page leave it empty. To obtain subsequent pages
            set it to the value returned in the cursor field of the previous
            request.
          example: '3055557345821140500'
        - name: role
          in: query
          schema:
            type: string
          description: >

            Role query. Filters members by role using full word match. Accepted
            values are:

            * "member":     Team member with full member permissions.

            * "admin":      Admin of a team. Team member with permission to
            manage team.

            * "non_team":   External user, non-team user.

            * "team_guest": Team-guest user, user with access only to a team
            without access to organization.
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/members/{member_id}:
    get:
      tags:
        - Team Members
      summary: Get team member
      description: >-
        Retrieves team member by id.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team Member
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Team Members
      summary: Update team member
      description: >-
        Updates team member role in team by id.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: member
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team Member
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Team Members
      summary: Delete team member from team
      description: >-
        Deletes team member from team by id.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
        - name: member_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team Member
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/default_teams_settings:
    get:
      tags:
        - Team Settings
      summary: Get default team settings
      description: >-
        Retrieves default team settings of an existing
        organization.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of an Organization.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/orgs/{org_id}/teams/{team_id}/settings:
    get:
      tags:
        - Team Settings
      summary: Get team settings
      description: >-
        Retrieves team settings of an existing team.<br/><h3>Required scope</h3>
        <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      parameters:
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Team Settings
      summary: Update team settings
      description: >-
        Updates team settings of an existing team.<br/><h3>Required scope</h3>
        <a target=_blank
        href=https://developers.miro.com/reference/scopes>organizations:teams:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a>
        <br/><h3>Enterprise only</h3> <p>This API is available only for <a
        target=_blank href="/reference/api-reference#enterprise-plan">Enterprise
        plan</a> users. You can only use this endpoint if you have the role of a
        Company Admin. You can request temporary access to Enterprise APIs using
        <a target=_blank
        href="https://miro-survey.typeform.com/to/BVPTNWJ9">this form</a>.</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                teamAccountDiscoverySettings:
                  accountDiscovery: hidden
                teamCollaborationSettings:
                  coOwnerRole: enabled
                teamCopyAccessLevelSettings:
                  copyAccessLevel: anyone
                  copyAccessLevelLimitation: anyone
                teamInvitationSettings:
                  inviteExternalUsers: allowed
                  whoCanInvite: only_org_admins
                teamSharingPolicySettings:
                  allowListedDomains:
                    - nos
                    - sit cillum
                  createAssetAccessLevel: company_admins
                  defaultBoardAccess: private
                  defaultOrganizationAccess: private
                  defaultProjectAccess: private
                  moveBoardToAccount: allowed
                  restrictAllowedDomains: enabled
                  sharingOnAccount: allowed
                  sharingOnOrganization: allowed
                  sharingViaPublicLink: allowed
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: org_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Organization.
          example: '3074457345618265000'
        - name: team_id
          in: path
          schema:
            type: integer
          required: true
          description: (Required) The id of the Team.
          example: '3074457345618265000'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/frames:
    post:
      tags:
        - Frames
      summary: Create frame
      description: >-
        Adds a frame to a board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  format: custom
                  title: Sample frame title
                  type: freeform
                  showContent: true
                style:
                  fillColor: '#ffffffff'
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create a frame.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/frames/{item_id}:
    get:
      tags:
        - Frames
      summary: Get frame
      description: >-
        Retrieves information for a specific frame on a board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board that contains the
            frame that you want to retrieve
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the frame that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Frames
      summary: Update frame
      description: >-
        Updates a frame on a board based on the data, style, or geometry
        properties provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  format: custom
                  title: Sample frame title
                  type: freeform
                  showContent: true
                style:
                  fillColor: '#ffffffff'
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the frame.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the frame that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Frames
      summary: Delete frame
      description: >-
        Deletes a frame from a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the frame.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the frame that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/items:
    get:
      tags:
        - Items
      summary: Get items within frame
      description: >-
        Retrieves a list of items within a specific frame. A frame is a parent
        item and all items within a frame are child items. This method returns
        results using a cursor-based approach. A cursor-paginated method returns
        a portion of the total set of results based on the limit specified and a
        cursor that points to the next portion of the results. To retrieve the
        next portion of the collection, on your next call to the same method,
        set the `cursor` parameter equal to the `cursor` value you received in
        the response of the previous request. For example, if you set the
        `limit` query parameter to `10` and the board contains 20 objects, the
        first call will return information about the first 10 objects in the
        response along with a cursor parameter and value. In this example, let's
        say the cursor parameter value returned in the response is `foo`. If you
        want to retrieve the next set of objects, on your next call to the same
        method, set the cursor parameter value to `foo`.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: parent_item_id
          in: query
          schema:
            type: string
          description: >-
            (Required) ID of the frame for which you want to retrieve the list
            of available items.
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: type
          in: query
          schema:
            type: string
        - name: cursor
          in: query
          schema:
            type: string
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board that contains the
            frame for which you want to retrieve the list of available items.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/boards/{board_id}/items/{item_id}:
    delete:
      tags:
        - Items
      summary: Delete item
      description: >-
        Deletes an item from a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Flowchart shapes (experimental)
      summary: Get specific item on board
      description: >-
        Retrieves information for a specific item on a board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id_Platform}/items:
    get:
      tags:
        - Items
      summary: Get items on board
      description: >-
        Retrieves a list of items for a specific board. You can retrieve all
        items on the board, a list of child items inside a parent item, or a
        list of specific types of items by specifying URL query parameter
        values.


        This method returns results using a cursor-based approach. A
        cursor-paginated method returns a portion of the total set of results
        based on the limit specified and a cursor that points to the next
        portion of the results. To retrieve the next portion of the collection,
        on your next call to the same method, set the `cursor` parameter equal
        to the `cursor` value you received in the response of the previous
        request. For example, if you set the `limit` query parameter to `10` and
        the board contains 20 objects, the first call will return information
        about the first 10 objects in the response along with a cursor parameter
        and value. In this example, let's say the cursor parameter value
        returned in the response is `foo`. If you want to retrieve the next set
        of objects, on your next call to the same method, set the cursor
        parameter value to `foo`.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: type
          in: query
          schema:
            type: string
          example: text
        - name: cursor
          in: query
          schema:
            type: string
        - name: board_id_Platform
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board for which you want to
            retrieve the list of available items.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id_Platform}/items/{item_id}:
    get:
      tags:
        - Items
      summary: Get specific item on board
      description: >-
        Retrieves information for a specific item on a board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id_Platform
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Items
      summary: Update item position or parent
      description: >-
        Updates the position or the parent of an item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                parent:
                  id: '{{parent_id}}'
                position:
                  x: 100
                  'y': 100
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id_Platform
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Items
      summary: Delete item
      description: >-
        Deletes an item from a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id_Platform
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/webhooks/board_subscriptions:
    post:
      tags:
        - Webhooks (experimental)
      summary: Create webhook subscription
      description: >-
        Creates a webhook subscription to receive notifications when an item on
        a board is updated. Subscriptions are created per user, per board. You
        can create multiple subscriptions. We currently support all board items
        barring tags, connectors, and comments. Changes in item position do not
        trigger an event at the moment.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                boardId: '{{board_id}}'
                callbackUrl: https://yourwebhooklistener.com/v2/webhooks_endpoint
                status: enabled
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/webhooks/board_subscriptions/{subscription_id}:
    patch:
      tags:
        - Webhooks (experimental)
      summary: Update webhook subscription
      description: >-
        Updates the status or the callback URL of an existing webhook
        subscription.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                callbackUrl: https://yourwebhooklistener.com/v2/webhooks_endpoint
                status: enabled
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: subscription_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/webhooks/subscriptions:
    get:
      tags:
        - Webhooks (experimental)
      summary: Get webhook subscriptions
      description: >-
        Retrieves information about all webhook subscriptions for a specific
        user.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/webhooks/subscriptions/{subscription_id}:
    get:
      tags:
        - Webhooks (experimental)
      summary: Get specific webhook subscription
      description: >-
        Retrieves information for a specific webhook
        subscription.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: subscription_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the subscription that you want
            to retrieve
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Webhooks (experimental)
      summary: Delete webhook subscription
      description: >-
        Deletes the specified webhook subscription.<br/><h3>Required scope</h3>
        <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: subscription_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the subscription that you want
            to delete
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/boards/{board_id}/mindmap_nodes/{item_id}:
    get:
      tags:
        - Mind map nodes (experimental)
      summary: Get specific mind map node
      description: >-
        Retrieves information for a specific mind map node on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a mind map node.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the mind map node that you want
            to retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Mind map nodes (experimental)
      summary: Delete mind map node
      description: >-
        Deletes a mind map node item and its child nodes from the
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the mind map node.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the mind map node that you want
            to delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/boards/{board_id}/mindmap_nodes:
    get:
      tags:
        - Mind map nodes (experimental)
      summary: Get mind map nodes
      description: >-
        Retrieves a list of mind map nodes for a specific board.


        This method returns results using a cursor-based approach. A
        cursor-paginated method returns a portion of the total set of results
        based on the limit specified and a cursor that points to the next
        portion of the results. To retrieve the next portion of the collection,
        on your next call to the same method, set the `cursor` parameter equal
        to the `cursor` value you received in the response of the previous
        request. For example, if you set the `limit` query parameter to `10` and
        the board contains 20 objects, the first call will return information
        about the first 10 objects in the response along with a cursor parameter
        and value. In this example, let's say the cursor parameter value
        returned in the response is `foo`. If you want to retrieve the next set
        of objects, on your next call to the same method, set the cursor
        parameter value to `foo`.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: string
          description: Maximum number of results returned
        - name: cursor
          in: query
          schema:
            type: string
          description: Points to the next portion of the results set
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve mind map nodes.
          example: incididunt sint Duis laborum
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Mind map nodes (experimental)
      summary: Create mind map node
      description: >-
        Adds a mind map node to a board. A root node is the starting point of a
        mind map. A node that is created under a root node is a child node. For
        information on mind maps, use cases, mind map structure, and more, see
        the <a href="https://developers.miro.com/docs/mind-maps"
        target=_blank>Mind Map Overview</a> page. <br/><h3>Required scope</h3>
        <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level
        2</a><br/><br/> <b>Known limitations on node placement: </b> Currently,
        the create API supports explicit positions for nodes. This means that
        users can only place nodes based on the x, y coordinates provided in the
        position parameters. If the position is not provided in the request,
        nodes default to coordinates x=0, y=0, effectively placing them at the
        center of the board. <br /><br /><b>Upcoming changes:</b> We understand
        the importance of flexibility in node placement. We are actively working
        on implementing changes to support positioning nodes relative to their
        parent node as well. This enhancement offers a more dynamic and
        intuitive mind mapping experience. <br /><br />Additionally, we are
        actively working on providing the update API, further enhancing the
        functionality of mind map APIs.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  nodeView:
                    data:
                      type: text
                      content: Sample text
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/boards/{board_id}/items:
    get:
      tags:
        - Flowchart shapes (experimental)
      summary: Get items on board
      description: >-
        Retrieves a list of items for a specific board. You can retrieve all
        items on the board, a list of child items inside a parent item, or a
        list of specific types of items by specifying URL query parameter
        values.


        This method returns results using a cursor-based approach. A
        cursor-paginated method returns a portion of the total set of results
        based on the limit specified and a cursor that points to the next
        portion of the results. To retrieve the next portion of the collection,
        on your next call to the same method, set the `cursor` parameter equal
        to the `cursor` value you received in the response of the previous
        request. For example, if you set the `limit` query parameter to `10` and
        the board contains 20 objects, the first call will return information
        about the first 10 objects in the response along with a cursor parameter
        and value. In this example, let's say the cursor parameter value
        returned in the response is `foo`. If you want to retrieve the next set
        of objects, on your next call to the same method, set the cursor
        parameter value to `foo`.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: type
          in: query
          schema:
            type: string
          example: shape
        - name: cursor
          in: query
          schema:
            type: string
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board for which you want to
            retrieve the list of available items.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/boards/{board_id}/shapes:
    post:
      tags:
        - Flowchart shapes (experimental)
      summary: Create shape item
      description: >-
        Adds a flowchart shape item to a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                  shape: rectangle
                style:
                  borderColor: '#1a1a1a'
                  borderOpacity: '0.0'
                  borderStyle: normal
                  borderWidth: '1.0'
                  color: '#1a1a1a'
                  fillColor: '#8fd14f'
                  fillOpacity: '1.0'
                  fontFamily: arial
                  fontSize: '12'
                  textAlign: left
                  textAlignVertical: top
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2-experimental/boards/{board_id}/shapes/{item_id}:
    get:
      tags:
        - Flowchart shapes (experimental)
      summary: Get shape item
      description: >-
        Retrieves information for a specific shape item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Flowchart shapes (experimental)
      summary: Update shape item
      description: >-
        Updates a flowchart shape item on a board based on the data and style
        properties provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                  shape: rectangle
                style:
                  borderColor: '#1a1a1a'
                  borderOpacity: '0.0'
                  borderStyle: normal
                  borderWidth: '1.0'
                  color: '#1a1a1a'
                  fillColor: '#8fd14f'
                  fillOpacity: '1.0'
                  fontFamily: arial
                  fontSize: '12'
                  textAlign: left
                  textAlignVertical: top
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Flowchart shapes (experimental)
      summary: Delete shape item
      description: >-
        Deletes a flowchart shape item from the board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/items/{item_id}:
    post:
      tags:
        - Tags
      summary: Attach tag to item
      description: >-
        Attach an existing tag to the specified item. Card and sticky note items
        can have up to 8 tags. <br><blockquote><strong>Note:</strong> Updates to
        tags made via the REST API  will not be reflected on the board in
        realtime. To see REST API updates to tags on a board,  you need to
        refresh the board. This applies to the following endpoints:   [Remove
        tag from
        item](https://developers.miro.com/reference/remove-tag-from-item), 
        [Update tag](https://developers.miro.com/reference/update-tag),  [Delete
        tag](https://developers.miro.com/reference/delete-tag).</blockquote><br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      requestBody:
        content: {}
      parameters:
        - name: tag_id
          in: query
          schema:
            type: string
          description: >-
            (Required) Unique identifier (ID) of the tag you want to add to the
            item.
          example: '{{tag_id}}'
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board with the item that
            you want to add a tag to.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item to which you want to
            add a tag.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Tags
      summary: Remove tag from item
      description: >-
        Removes the specified tag from the specified item. The tag still exists
        on the board. <br><blockquote><strong>Note:</strong> Updates to tags
        made via the REST API  will not be reflected on the board in realtime.
        To see REST API updates to tags on a board,  you need to refresh the
        board. This applies to the following endpoints:  [Attach tag to
        item](https://developers.miro.com/reference/attach-tag-to-item),  
        [Update tag](https://developers.miro.com/reference/update-tag),  [Delete
        tag](https://developers.miro.com/reference/delete-tag).</blockquote><br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: tag_id
          in: query
          schema:
            type: string
          description: >-
            (Required) Unique identifier (ID) of the tag that you want to remove
            from the item.
          example: '{{tag_id}}'
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board with the item that
            you want to remove a tag from.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            remove the tag from.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/items/{item_id}/tags:
    get:
      tags:
        - Tags
      summary: Get tags from item
      description: >-
        Retrieves all the tags from the specified item.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board with the item whose
            tags you want to retrieve.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item whose tags you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/tags:
    post:
      tags:
        - Tags
      summary: Create tag
      description: >-
        Creates a tag on a board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: to do
                fillColor: red
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the tag.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Tags
      summary: Get tags from board
      description: >-
        Retrieves all the tags from the specified board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: string
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board whose tags you want
            to retrieve.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/tags/{tag_id}:
    get:
      tags:
        - Tags
      summary: Get tag
      description: >-
        Retrieves information for a specific tag.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            retrieve a specific tag.
          example: '{{board_id}}'
        - name: tag_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the tag that you want to
            retrieve.
          example: '{{tag_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Tags
      summary: Update tag
      description: >-
        Updates a tag based on the data properties provided in the request body.
        <br><blockquote><strong>Note:</strong> Updates to tags made via the REST
        API  will not be reflected on the board in realtime. To see REST API
        updates to tags on a board,  you need to refresh the board. This applies
        to the following endpoints:  [Attach tag to
        item](https://developers.miro.com/reference/attach-tag-to-item), 
        [Remove tag from
        item](https://developers.miro.com/reference/remove-tag-from-item),  
        [Delete
        tag](https://developers.miro.com/reference/delete-tag).</blockquote><br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fillColor: red
                title: done
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update a specific tag.
          example: '{{board_id}}'
        - name: tag_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the tag that you want to
            update.
          example: '{{tag_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Tags
      summary: Delete tag
      description: >-
        Deletes the specified tag from the board. The tag is also removed from
        all cards and sticky notes on the board.
        <br><blockquote><strong>Note:</strong> Updates to tags made via the REST
        API  will not be reflected on the board in realtime. To see REST API
        updates to tags on a board,  you need to refresh the board. This applies
        to the following endpoints:  [Attach tag to
        item](https://developers.miro.com/reference/attach-tag-to-item), 
        [Remove tag from
        item](https://developers.miro.com/reference/remove-tag-from-item), 
        [Update
        tag](https://developers.miro.com/reference/update-tag).</blockquote><br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            delete a specific tag.
          example: '{{board_id}}'
        - name: tag_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the tag that you want to
            delete.
          example: '{{tag_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id_PlatformTags}/items:
    get:
      tags:
        - Tags
      summary: Get items by tag
      description: >-
        Retrieves all the items that have the specified tag.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
          description: >-
            (Required) Unique identifier (ID) of the tag that you want to
            retrieve.
          example: '{{tag_id}}'
        - name: board_id_PlatformTags
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            retrieve a specific tag.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards:
    post:
      tags:
        - Boards
      summary: Create board
      description: >-
        Creates a board with the specified name and sharing
        policies.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: Description
                name: Untitled
                policy:
                  permissionsPolicy:
                    collaborationToolsStartAccess: all_editors
                    copyAccess: anyone
                    sharingAccess: team_members_with_editing_rights
                  sharingPolicy:
                    access: private
                    inviteToAccountAndBoardLinkAccess: no_access
                    organizationAccess: private
                    teamAccess: private
                teamId: '{{team_id}}'
                projectId: <value>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Boards
      summary: Get boards
      description: >-
        Retrieves a list of boards that match the search criteria provided in
        the request. If you are an Enterprise customer and a Company Admin, you
        can retrieve all boards, including all private boards (boards that
        haven't been specifically shared with you) by enabling Content Admin
        permissions. To enable Content Admin permissions, see [Content Admin
        permissions for Company
        Admins](https://help.miro.com/hc/en-us/articles/360012777280-Content-Admin-permissions-for-Company-Admins).
        Note that you only get results instantaneously when you filter by the
        `team_id`, `project_id`, or both the `team_id` and `project_id`. If you
        use any other filter,  you need to give a few seconds for the indexing
        of newly created boards before retrieving boards.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: team_id
          in: query
          schema:
            type: string
          example: '{{team_id}}'
        - name: project_id
          in: query
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: owner
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
          example: default
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Boards
      summary: Copy board
      description: >-
        Creates a copy of an existing board. You can also update the name,
        description, sharing policy, and permissions policy for the new board in
        the request body.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 4</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: Description
                name: Untitled
                policy:
                  permissionsPolicy:
                    collaborationToolsStartAccess: all_editors
                    copyAccess: anyone
                    sharingAccess: team_members_with_editing_rights
                  sharingPolicy:
                    access: private
                    inviteToAccountAndBoardLinkAccess: no_access
                    organizationAccess: private
                    teamAccess: private
                teamId: '{{team_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: copy_from
          in: query
          schema:
            type: string
          description: >-
            (Required) Unique identifier (ID) of the board that you want to
            copy.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}:
    get:
      tags:
        - Boards
      summary: Get specific board
      description: >-
        Retrieves information about a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board that you want to
            retrieve.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Boards
      summary: Update board
      description: >-
        Updates a specific board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: Description
                name: Untitled
                policy:
                  permissionsPolicy:
                    collaborationToolsStartAccess: all_editors
                    copyAccess: anyone
                    sharingAccess: team_members_with_editing_rights
                  sharingPolicy:
                    access: private
                    inviteToAccountAndBoardLinkAccess: no_access
                    organizationAccess: private
                    teamAccess: private
                teamId: '{{team_id}}'
                projectId: <value>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board that you want to
            update.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Boards
      summary: Delete board
      description: >-
        Deletes a board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board that you want to
            delete.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/app_cards:
    post:
      tags:
        - App Cards
      summary: Create app card item
      description: >-
        Adds an app card item to a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  description: Sample app card description
                  fields:
                    - fillColor: '#2fa9e3'
                      iconShape: round
                      iconUrl: https://cdn-icons-png.flaticon.com/512/5695/5695864.png
                      textColor: '#1a1a1a'
                      tooltip: Completion status indicator
                      value: 'Status: in progress'
                    - fillColor: '#2fa9e3'
                      iconShape: round
                      iconUrl: https://cdn-icons-png.flaticon.com/512/5695/5695864.png
                      textColor: '#1a1a1a'
                      tooltip: Completion status indicator
                      value: 'Status: in progress'
                  status: disconnected
                  title: sample app card item
                style:
                  fillColor: '#2d9bf0'
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/app_cards/{item_id}:
    get:
      tags:
        - App Cards
      summary: Get app card item
      description: >-
        Retrieves information for a specific app card item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - App Cards
      summary: Update app card item
      description: >-
        Updates an app card item on a board based on the data and style
        properties provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  description: Sample app card description
                  fields:
                    - fillColor: '#2fa9e3'
                      iconShape: round
                      iconUrl: https://cdn-icons-png.flaticon.com/512/5695/5695864.png
                      textColor: '#1a1a1a'
                      tooltip: Completion status indicator
                      value: 'Status: in progress'
                    - fillColor: '#2fa9e3'
                      iconShape: round
                      iconUrl: https://cdn-icons-png.flaticon.com/512/5695/5695864.png
                      textColor: '#1a1a1a'
                      tooltip: Completion status indicator
                      value: 'Status: in progress'
                  status: disconnected
                  title: sample app card item
                style:
                  fillColor: '#2d9bf0'
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - App Cards
      summary: Delete app card item
      description: >-
        Deletes an app card item from a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete an item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/cards:
    post:
      tags:
        - Cards
      summary: Create card item
      description: >-
        Adds a card item to a board<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  assigneeId: '3074457362577955300'
                  description: sample card description
                  dueDate: '2023-10-12T22:00:55.000Z'
                  title: sample card item
                style:
                  cardTheme: '#2d9bf0'
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/cards/{item_id}:
    get:
      tags:
        - Cards
      summary: Get card item
      description: >-
        Retrieves information for a specific card item on a
        board<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Cards
      summary: Update card item
      description: >-
        Updates a card item on a board based on the data and style properties
        provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  assigneeId: '3074457362577955300'
                  description: sample card description
                  dueDate: '2023-10-12T22:00:55.000Z'
                  title: sample card item
                style:
                  cardTheme: '#2d9bf0'
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Cards
      summary: Delete card item
      description: >-
        Deletes a card item from the board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/connectors:
    post:
      tags:
        - Connectors
      summary: Create connector
      description: >-
        Adds a connector to a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                endItem:
                  id: '3458764517517818867'
                  position:
                    x: 50%
                    'y': 0%
                  snapTo: auto
                startItem:
                  id: '3458764517517818867'
                  position:
                    x: 50%
                    'y': 0%
                  snapTo: auto
                shape: straight
                captions:
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                style:
                  color: '#9510ac'
                  endStrokeCap: none
                  fontSize: '15'
                  startStrokeCap: none
                  strokeColor: '#2d9bf0'
                  strokeStyle: normal
                  strokeWidth: '2.0'
                  textOrientation: horizontal
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board for which you want to
            create the connector.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Connectors
      summary: Get connectors
      description: >-
        Retrieves a list of connectors for a specific board.


        This method returns results using a cursor-based approach. A
        cursor-paginated method returns a portion of the total set of results
        based on the limit specified and a cursor that points to the next
        portion of the results. To retrieve the next portion of the collection,
        on your next call to the same method, set the `cursor` parameter equal
        to the `cursor` value you received in the response of the previous
        request. For example, if you set the `limit` query parameter to `10` and
        the board contains 20 objects, the first call will return information
        about the first 10 objects in the response along with a cursor parameter
        and value. In this example, let's say the cursor parameter value
        returned in the response is `foo`. If you want to retrieve the next set
        of objects, on your next call to the same method, set the cursor
        parameter value to `foo`.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: cursor
          in: query
          schema:
            type: string
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a list of connectors.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/connectors/{connector_id}:
    get:
      tags:
        - Connectors
      summary: Get specific connector
      description: >-
        Retrieves information for a specific connector on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific connector.
          example: '{{board_id}}'
        - name: connector_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the connector that you want to
            retrieve.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Connectors
      summary: Update connector
      description: >-
        Updates a connector on a board based on the data and style properties
        provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                startItem:
                  id: '3458764517517818867'
                  position:
                    x: 50%
                    'y': 0%
                  snapTo: auto
                endItem:
                  id: '3458764517517818867'
                  position:
                    x: 50%
                    'y': 0%
                  snapTo: auto
                shape: straight
                captions:
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                  - content: <p>Caption text</p>
                    position: 50%
                    textAlignVertical: top
                style:
                  color: '#9510ac'
                  endStrokeCap: none
                  fontSize: '15'
                  startStrokeCap: none
                  strokeColor: '#2d9bf0'
                  strokeStyle: normal
                  strokeWidth: '2.0'
                  textOrientation: horizontal
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board for which you want to
            update the connector.
          example: '{{board_id}}'
        - name: connector_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the connector that you want to
            update.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Connectors
      summary: Delete connector
      description: >-
        Deletes the specified connector from the board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the connector.
          example: '{{board_id}}'
        - name: connector_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the connector that you want to
            delete.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/documents:
    post:
      tags:
        - Documents
      summary: Create document item using URL
      description: >-
        Adds a document item to a board by specifying the URL where the document
        is hosted.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  url: >-
                    https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf
                  title: Sample document title
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                  rotation: 0
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/documents/{item_id}:
    get:
      tags:
        - Documents
      summary: Get document item
      description: >-
        Retrieves information for a specific document item on a
        board<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Documents
      summary: Update document item using URL
      description: >-
        Updates a document item on a board<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  title: <value>
                  url: >-
                    https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                  rotation: 0
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Documents
      summary: Delete document item
      description: >-
        Deletes a document item from the board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/embeds:
    post:
      tags:
        - Embeds
      summary: Create embed item
      description: >-
        Adds an embed item containing external content to a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  url: https://www.youtube.com/watch?v=HlVSNEiFCBk
                  mode: inline
                  previewUrl: >-
                    https://miro.com/static/images/page/mr-index/localization/en/slider/ideation_brainstorming.png
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/embeds/{item_id}:
    get:
      tags:
        - Embeds
      summary: Get embed item
      description: >-
        Retrieves information for a specific embed item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Embeds
      summary: Update embed item
      description: >-
        Updates an embed item on a board based on the data properties provided
        in the request body.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  mode: inline
                  previewUrl: >-
                    https://miro.com/static/images/page/mr-index/localization/en/slider/ideation_brainstorming.png
                  url: https://www.youtube.com/watch?v=HlVSNEiFCBk
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Embeds
      summary: Delete embed item
      description: >-
        Deletes an embed item from the board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/images:
    post:
      tags:
        - Images
      summary: Create image item using URL
      description: >-
        Adds an image item to a board by specifying an image
        URL.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  url: >-
                    https://miro.com/static/images/page/mr-index/localization/en/slider/ideation_brainstorming.png
                  title: Sample image title
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                  rotation: 0
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/images/{item_id}:
    get:
      tags:
        - Images
      summary: Get image item
      description: >-
        Retrieves information for a specific image item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Images
      summary: Update image item using URL
      description: >-
        Updates an image item on a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  title: Test image title
                  url: >-
                    https://miro.com/static/images/page/mr-index/localization/en/slider/ideation_brainstorming.png
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                  rotation: 0
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Images
      summary: Delete image item
      description: >-
        Deletes an image item from the board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/members:
    post:
      tags:
        - Board Members
      summary: Share board
      description: >-
        Shares the board and Invites new members to collaborate on a board by
        sending an invitation email. Depending on the board's Sharing policy,
        there might be various scenarios where membership in the team is
        required in order to share the board with a user.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                emails:
                  - member@email.com
                role: commenter
                message: >-
                  Hey there! Join my board and let's collaborate on this
                  project!
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board to which the board
            member belongs.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Board Members
      summary: Get all board members
      description: >-
        Retrieves a pageable list of members for a board.<br/><h3>Required
        scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: limit
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: string
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board to which the board
            member belongs.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/members/{board_member_id}:
    get:
      tags:
        - Board Members
      summary: Get specific board member
      description: >-
        Retrieves information for a board member.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board to which the board
            member belongs.
          example: '{{board_id}}'
        - name: board_member_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board member whose role you
            want to retrieve.
          example: '{{board_member_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Board Members
      summary: Update board member
      description: >-
        Updates the role of a board member.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: commenter
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board for which you want to
            update the role of the board member.
          example: '{{board_id}}'
        - name: board_member_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board member whose role you
            want to update.
          example: '{{board_member_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Board Members
      summary: Remove board member
      description: >-
        Removes a board member from a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete an item.
          example: '{{board_id}}'
        - name: board_member_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board member whose role you
            want to delete.
          example: '{{board_member_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/shapes:
    post:
      tags:
        - Shapes
      summary: Create shape item
      description: >-
        Adds a shape item to a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                  shape: rectangle
                style:
                  borderColor: '#1a1a1a'
                  borderOpacity: '0.0'
                  borderStyle: normal
                  borderWidth: '1.0'
                  color: '#1a1a1a'
                  fillColor: '#8fd14f'
                  fillOpacity: '1.0'
                  fontFamily: arial
                  fontSize: '12'
                  textAlign: left
                  textAlignVertical: top
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/shapes/{item_id}:
    get:
      tags:
        - Shapes
      summary: Get shape item
      description: >-
        Retrieves information for a specific shape item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Shapes
      summary: Update shape item
      description: >-
        Updates a shape item on a board based on the data and style properties
        provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                  shape: rectangle
                style:
                  borderColor: '#1a1a1a'
                  borderOpacity: '0.0'
                  borderStyle: normal
                  borderWidth: '1.0'
                  color: '#1a1a1a'
                  fillColor: '#8fd14f'
                  fillOpacity: '1.0'
                  fontFamily: arial
                  fontSize: '12'
                  textAlign: left
                  textAlignVertical: top
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 60
                  rotation: 0
                  width: 320
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Shapes
      summary: Delete shape item
      description: >-
        Deletes a shape item from the board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/sticky_notes:
    post:
      tags:
        - Sticky Notes
      summary: Create sticky note item
      description: >-
        Adds a sticky note item to a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                  shape: square
                style:
                  fillColor: gray
                  textAlign: left
                  textAlignVertical: top
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/sticky_notes/{item_id}:
    get:
      tags:
        - Sticky Notes
      summary: Get sticky note item
      description: >-
        Retrieves information for a specific sticky note item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Sticky Notes
      summary: Update sticky note item
      description: >-
        Updates a sticky note item on a board based on the data and style
        properties provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                  shape: square
                style:
                  fillColor: gray
                  textAlign: left
                  textAlignVertical: top
                position:
                  x: 100
                  'y': 100
                geometry:
                  height: 100
                  width: 100
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Sticky Notes
      summary: Delete sticky note item
      description: >-
        Deletes a sticky note item from the board.<br/><h3>Required scope</h3>
        <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/texts:
    post:
      tags:
        - Texts
      summary: Create text item
      description: >-
        Adds a text item to a board.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                style:
                  color: '#1a1a1a'
                  fillColor: '#e6e6e6'
                  fillOpacity: '1.0'
                  fontFamily: arial
                  fontSize: '12'
                  textAlign: left
                position:
                  x: 100
                  'y': 100
                geometry:
                  rotation: 0
                  width: 100
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            create the item.
          example: '{{board_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v2/boards/{board_id}/texts/{item_id}:
    get:
      tags:
        - Texts
      summary: Get text item
      description: >-
        Retrieves information for a specific text item on a
        board.<br/><h3>Required scope</h3> <a target=_blank
        href=https://developers.miro.com/reference/scopes>boards:read</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 1</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to retrieve a specific item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            retrieve.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Texts
      summary: Update text item
      description: >-
        Updates a text item on a board based on the data and style properties
        provided in the request body.<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 2</a><br/>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  content: Hello
                style:
                  color: '#1a1a1a'
                  fillColor: '#e6e6e6'
                  fillOpacity: '1.0'
                  fontFamily: arial
                  fontSize: '12'
                  textAlign: left
                position:
                  x: 100
                  'y': 100
                geometry:
                  rotation: 0
                  width: 100
                parent:
                  id: '{{parent_id}}'
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board where you want to
            update the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            update.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Texts
      summary: Delete text item
      description: >-
        Deletes a text item from the board<br/><h3>Required scope</h3> <a
        target=_blank
        href=https://developers.miro.com/reference/scopes>boards:write</a>
        <br/><h3>Rate limiting</h3> <a target=_blank
        href=https://developers.miro.com/reference/ratelimiting>Level 3</a><br/>
      parameters:
        - name: board_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the board from which you want
            to delete the item.
          example: '{{board_id}}'
        - name: item_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Unique identifier (ID) of the item that you want to
            delete.
          example: '{{item_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
